{"id":"06dd0efbed223e5a7935659156456ad2","_format":"hh-sol-build-info-1","solcVersion":"0.8.19","solcLongVersion":"0.8.19+commit.7dd6d404","input":{"language":"Solidity","sources":{"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\ninterface AggregatorV3Interface {\n  function decimals() external view returns (uint8);\n\n  function description() external view returns (string memory);\n\n  function version() external view returns (uint256);\n\n  function getRoundData(uint80 _roundId)\n    external\n    view\n    returns (\n      uint80 roundId,\n      int256 answer,\n      uint256 startedAt,\n      uint256 updatedAt,\n      uint80 answeredInRound\n    );\n\n  function latestRoundData()\n    external\n    view\n    returns (\n      uint80 roundId,\n      int256 answer,\n      uint256 startedAt,\n      uint256 updatedAt,\n      uint80 answeredInRound\n    );\n}\n"},"@chainlink/contracts/src/v0.8/interfaces/VRFCoordinatorV2Interface.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\ninterface VRFCoordinatorV2Interface {\n  /**\n   * @notice Get configuration relevant for making requests\n   * @return minimumRequestConfirmations global min for request confirmations\n   * @return maxGasLimit global max for request gas limit\n   * @return s_provingKeyHashes list of registered key hashes\n   */\n  function getRequestConfig()\n    external\n    view\n    returns (\n      uint16,\n      uint32,\n      bytes32[] memory\n    );\n\n  /**\n   * @notice Request a set of random words.\n   * @param keyHash - Corresponds to a particular oracle job which uses\n   * that key for generating the VRF proof. Different keyHash's have different gas price\n   * ceilings, so you can select a specific one to bound your maximum per request cost.\n   * @param subId  - The ID of the VRF subscription. Must be funded\n   * with the minimum subscription balance required for the selected keyHash.\n   * @param minimumRequestConfirmations - How many blocks you'd like the\n   * oracle to wait before responding to the request. See SECURITY CONSIDERATIONS\n   * for why you may want to request more. The acceptable range is\n   * [minimumRequestBlockConfirmations, 200].\n   * @param callbackGasLimit - How much gas you'd like to receive in your\n   * fulfillRandomWords callback. Note that gasleft() inside fulfillRandomWords\n   * may be slightly less than this amount because of gas used calling the function\n   * (argument decoding etc.), so you may need to request slightly more than you expect\n   * to have inside fulfillRandomWords. The acceptable range is\n   * [0, maxGasLimit]\n   * @param numWords - The number of uint256 random values you'd like to receive\n   * in your fulfillRandomWords callback. Note these numbers are expanded in a\n   * secure way by the VRFCoordinator from a single random value supplied by the oracle.\n   * @return requestId - A unique identifier of the request. Can be used to match\n   * a request to a response in fulfillRandomWords.\n   */\n  function requestRandomWords(\n    bytes32 keyHash,\n    uint64 subId,\n    uint16 minimumRequestConfirmations,\n    uint32 callbackGasLimit,\n    uint32 numWords\n  ) external returns (uint256 requestId);\n\n  /**\n   * @notice Create a VRF subscription.\n   * @return subId - A unique subscription id.\n   * @dev You can manage the consumer set dynamically with addConsumer/removeConsumer.\n   * @dev Note to fund the subscription, use transferAndCall. For example\n   * @dev  LINKTOKEN.transferAndCall(\n   * @dev    address(COORDINATOR),\n   * @dev    amount,\n   * @dev    abi.encode(subId));\n   */\n  function createSubscription() external returns (uint64 subId);\n\n  /**\n   * @notice Get a VRF subscription.\n   * @param subId - ID of the subscription\n   * @return balance - LINK balance of the subscription in juels.\n   * @return reqCount - number of requests for this subscription, determines fee tier.\n   * @return owner - owner of the subscription.\n   * @return consumers - list of consumer address which are able to use this subscription.\n   */\n  function getSubscription(uint64 subId)\n    external\n    view\n    returns (\n      uint96 balance,\n      uint64 reqCount,\n      address owner,\n      address[] memory consumers\n    );\n\n  /**\n   * @notice Request subscription owner transfer.\n   * @param subId - ID of the subscription\n   * @param newOwner - proposed new owner of the subscription\n   */\n  function requestSubscriptionOwnerTransfer(uint64 subId, address newOwner) external;\n\n  /**\n   * @notice Request subscription owner transfer.\n   * @param subId - ID of the subscription\n   * @dev will revert if original owner of subId has\n   * not requested that msg.sender become the new owner.\n   */\n  function acceptSubscriptionOwnerTransfer(uint64 subId) external;\n\n  /**\n   * @notice Add a consumer to a VRF subscription.\n   * @param subId - ID of the subscription\n   * @param consumer - New consumer which can use the subscription\n   */\n  function addConsumer(uint64 subId, address consumer) external;\n\n  /**\n   * @notice Remove a consumer from a VRF subscription.\n   * @param subId - ID of the subscription\n   * @param consumer - Consumer to remove from the subscription\n   */\n  function removeConsumer(uint64 subId, address consumer) external;\n\n  /**\n   * @notice Cancel a subscription\n   * @param subId - ID of the subscription\n   * @param to - Where to send the remaining LINK to\n   */\n  function cancelSubscription(uint64 subId, address to) external;\n\n  /*\n   * @notice Check to see if there exists a request commitment consumers\n   * for all consumers and keyhashes for a given sub.\n   * @param subId - ID of the subscription\n   * @return true if there exists at least one unfulfilled request for the subscription, false\n   * otherwise.\n   */\n  function pendingRequestExists(uint64 subId) external view returns (bool);\n}\n"},"@chainlink/contracts/src/v0.8/VRFConsumerBaseV2.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.4;\n\n/** ****************************************************************************\n * @notice Interface for contracts using VRF randomness\n * *****************************************************************************\n * @dev PURPOSE\n *\n * @dev Reggie the Random Oracle (not his real job) wants to provide randomness\n * @dev to Vera the verifier in such a way that Vera can be sure he's not\n * @dev making his output up to suit himself. Reggie provides Vera a public key\n * @dev to which he knows the secret key. Each time Vera provides a seed to\n * @dev Reggie, he gives back a value which is computed completely\n * @dev deterministically from the seed and the secret key.\n *\n * @dev Reggie provides a proof by which Vera can verify that the output was\n * @dev correctly computed once Reggie tells it to her, but without that proof,\n * @dev the output is indistinguishable to her from a uniform random sample\n * @dev from the output space.\n *\n * @dev The purpose of this contract is to make it easy for unrelated contracts\n * @dev to talk to Vera the verifier about the work Reggie is doing, to provide\n * @dev simple access to a verifiable source of randomness. It ensures 2 things:\n * @dev 1. The fulfillment came from the VRFCoordinator\n * @dev 2. The consumer contract implements fulfillRandomWords.\n * *****************************************************************************\n * @dev USAGE\n *\n * @dev Calling contracts must inherit from VRFConsumerBase, and can\n * @dev initialize VRFConsumerBase's attributes in their constructor as\n * @dev shown:\n *\n * @dev   contract VRFConsumer {\n * @dev     constructor(<other arguments>, address _vrfCoordinator, address _link)\n * @dev       VRFConsumerBase(_vrfCoordinator) public {\n * @dev         <initialization with other arguments goes here>\n * @dev       }\n * @dev   }\n *\n * @dev The oracle will have given you an ID for the VRF keypair they have\n * @dev committed to (let's call it keyHash). Create subscription, fund it\n * @dev and your consumer contract as a consumer of it (see VRFCoordinatorInterface\n * @dev subscription management functions).\n * @dev Call requestRandomWords(keyHash, subId, minimumRequestConfirmations,\n * @dev callbackGasLimit, numWords),\n * @dev see (VRFCoordinatorInterface for a description of the arguments).\n *\n * @dev Once the VRFCoordinator has received and validated the oracle's response\n * @dev to your request, it will call your contract's fulfillRandomWords method.\n *\n * @dev The randomness argument to fulfillRandomWords is a set of random words\n * @dev generated from your requestId and the blockHash of the request.\n *\n * @dev If your contract could have concurrent requests open, you can use the\n * @dev requestId returned from requestRandomWords to track which response is associated\n * @dev with which randomness request.\n * @dev See \"SECURITY CONSIDERATIONS\" for principles to keep in mind,\n * @dev if your contract could have multiple requests in flight simultaneously.\n *\n * @dev Colliding `requestId`s are cryptographically impossible as long as seeds\n * @dev differ.\n *\n * *****************************************************************************\n * @dev SECURITY CONSIDERATIONS\n *\n * @dev A method with the ability to call your fulfillRandomness method directly\n * @dev could spoof a VRF response with any random value, so it's critical that\n * @dev it cannot be directly called by anything other than this base contract\n * @dev (specifically, by the VRFConsumerBase.rawFulfillRandomness method).\n *\n * @dev For your users to trust that your contract's random behavior is free\n * @dev from malicious interference, it's best if you can write it so that all\n * @dev behaviors implied by a VRF response are executed *during* your\n * @dev fulfillRandomness method. If your contract must store the response (or\n * @dev anything derived from it) and use it later, you must ensure that any\n * @dev user-significant behavior which depends on that stored value cannot be\n * @dev manipulated by a subsequent VRF request.\n *\n * @dev Similarly, both miners and the VRF oracle itself have some influence\n * @dev over the order in which VRF responses appear on the blockchain, so if\n * @dev your contract could have multiple VRF requests in flight simultaneously,\n * @dev you must ensure that the order in which the VRF responses arrive cannot\n * @dev be used to manipulate your contract's user-significant behavior.\n *\n * @dev Since the block hash of the block which contains the requestRandomness\n * @dev call is mixed into the input to the VRF *last*, a sufficiently powerful\n * @dev miner could, in principle, fork the blockchain to evict the block\n * @dev containing the request, forcing the request to be included in a\n * @dev different block with a different hash, and therefore a different input\n * @dev to the VRF. However, such an attack would incur a substantial economic\n * @dev cost. This cost scales with the number of blocks the VRF oracle waits\n * @dev until it calls responds to a request. It is for this reason that\n * @dev that you can signal to an oracle you'd like them to wait longer before\n * @dev responding to the request (however this is not enforced in the contract\n * @dev and so remains effective only in the case of unmodified oracle software).\n */\nabstract contract VRFConsumerBaseV2 {\n  error OnlyCoordinatorCanFulfill(address have, address want);\n  address private immutable vrfCoordinator;\n\n  /**\n   * @param _vrfCoordinator address of VRFCoordinator contract\n   */\n  constructor(address _vrfCoordinator) {\n    vrfCoordinator = _vrfCoordinator;\n  }\n\n  /**\n   * @notice fulfillRandomness handles the VRF response. Your contract must\n   * @notice implement it. See \"SECURITY CONSIDERATIONS\" above for important\n   * @notice principles to keep in mind when implementing your fulfillRandomness\n   * @notice method.\n   *\n   * @dev VRFConsumerBaseV2 expects its subcontracts to have a method with this\n   * @dev signature, and will call it once it has verified the proof\n   * @dev associated with the randomness. (It is triggered via a call to\n   * @dev rawFulfillRandomness, below.)\n   *\n   * @param requestId The Id initially returned by requestRandomness\n   * @param randomWords the VRF output expanded to the requested number of words\n   */\n  function fulfillRandomWords(uint256 requestId, uint256[] memory randomWords) internal virtual;\n\n  // rawFulfillRandomness is called by VRFCoordinator when it receives a valid VRF\n  // proof. rawFulfillRandomness then calls fulfillRandomness, after validating\n  // the origin of the call\n  function rawFulfillRandomWords(uint256 requestId, uint256[] memory randomWords) external {\n    if (msg.sender != vrfCoordinator) {\n      revert OnlyCoordinatorCanFulfill(msg.sender, vrfCoordinator);\n    }\n    fulfillRandomWords(requestId, randomWords);\n  }\n}\n"},"contracts/ClaimsProcessor.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.19;\n\nimport \"@chainlink/contracts/src/v0.8/interfaces/VRFCoordinatorV2Interface.sol\";\nimport \"@chainlink/contracts/src/v0.8/VRFConsumerBaseV2.sol\";\nimport \"./PolicyRegistry.sol\";\nimport \"./PayoutManager.sol\";\n\n/**\n * @title ClaimsProcessor\n * @dev Handles claim submissions, AI analysis, and reviewer selection using Chainlink VRF\n */\ncontract ClaimsProcessor is VRFConsumerBaseV2 {\n    struct Claim {\n        uint256 claimId;\n        uint256 policyId;\n        address claimant;\n        string description;\n        string[] evidenceHashes; // IPFS hashes\n        uint256 timestamp;\n        ClaimStatus status;\n        \n        // AI Analysis Results\n        uint8 claimType; // 0-auto, 1-home, 2-health, 3-travel\n        uint8 severity; // 1-10 scale\n        uint8 fraudRisk; // 0-100 percentage\n        uint256 recommendedPayout;\n        \n        uint256 finalPayout;\n        uint256 processedAt;\n        bool requiresHumanReview;\n        address assignedReviewer;\n    }\n    \n    enum ClaimStatus {\n        Submitted,\n        AIAnalyzed,\n        UnderReview,\n        Approved,\n        Rejected,\n        Paid\n    }\n    \n    mapping(uint256 => Claim) public claims;\n    mapping(uint256 => uint256) public vrfRequestToClaim; // VRF request ID to claim ID\n    mapping(address => bool) public reviewers; // Registered human reviewers\n    address[] public activeReviewers; // List of active reviewers\n    \n    uint256 public nextClaimId = 1;\n    VRFCoordinatorV2Interface public vrfCoordinator;\n    uint64 public vrfSubscriptionId;\n    bytes32 public vrfKeyHash;\n    uint32 public vrfCallbackGasLimit = 200000;\n    uint16 public vrfRequestConfirmations = 3;\n    uint32 public numWords = 1;\n    \n    address public policyRegistry;\n    address payable public payoutManager;\n    address public aiOracle; // Address authorized to submit AI analysis\n    address public admin;\n    \n    // Thresholds\n    uint8 public autoApproveThreshold = 20; // Auto-approve if fraudRisk < 20\n    uint8 public autoRejectThreshold = 70; // Auto-reject if fraudRisk > 70\n    \n    event ClaimSubmitted(uint256 indexed claimId, uint256 indexed policyId, address indexed claimant);\n    event AIAnalysisReceived(uint256 indexed claimId);\n    event ReviewerAssigned(uint256 indexed claimId, address indexed reviewer);\n    event ClaimApproved(uint256 indexed claimId, uint256 payout);\n    event ClaimRejected(uint256 indexed claimId, string reason);\n    event ClaimPaid(uint256 indexed claimId);\n    \n    modifier onlyAdmin() {\n        require(msg.sender == admin, \"Only admin\");\n        _;\n    }\n    \n    modifier onlyAIOracle() {\n        require(msg.sender == aiOracle, \"Only AI oracle\");\n        _;\n    }\n    \n    modifier onlyReviewer() {\n        require(reviewers[msg.sender], \"Only reviewer\");\n        _;\n    }\n    \n    /**\n     * @dev Constructor for the ClaimsProcessor contract\n     * @param _vrfCoordinator Address of the VRF Coordinator\n     * @param _keyHash KeyHash for VRF\n     * @param _subscriptionId VRF subscription ID\n     * @param _policyRegistry Address of the PolicyRegistry contract\n     */\n    constructor(\n        address _vrfCoordinator,\n        bytes32 _keyHash,\n        uint64 _subscriptionId,\n        address _policyRegistry\n    ) VRFConsumerBaseV2(_vrfCoordinator) {\n        vrfCoordinator = VRFCoordinatorV2Interface(_vrfCoordinator);\n        vrfKeyHash = _keyHash;\n        vrfSubscriptionId = _subscriptionId;\n        policyRegistry = _policyRegistry;\n        admin = msg.sender;\n        aiOracle = msg.sender; // Initially admin is the AI oracle too\n    }\n    \n    /**\n     * @dev Sets the payout manager address\n     * @param _payoutManager Address of the PayoutManager contract\n     */\n    function setPayoutManager(address _payoutManager) external onlyAdmin {\n        payoutManager = payable(_payoutManager);\n    }\n    \n    /**\n     * @dev Sets the AI Oracle address\n     * @param _aiOracle Address of the AI Oracle\n     */\n    function setAIOracle(address _aiOracle) external onlyAdmin {\n        aiOracle = _aiOracle;\n    }\n    \n    /**\n     * @dev Adds a reviewer to the system\n     * @param _reviewer Address of the reviewer\n     */\n    function addReviewer(address _reviewer) external onlyAdmin {\n        require(!reviewers[_reviewer], \"Already a reviewer\");\n        reviewers[_reviewer] = true;\n        activeReviewers.push(_reviewer);\n    }\n    \n    /**\n     * @dev Removes a reviewer from the system\n     * @param _reviewer Address of the reviewer\n     */\n    function removeReviewer(address _reviewer) external onlyAdmin {\n        require(reviewers[_reviewer], \"Not a reviewer\");\n        reviewers[_reviewer] = false;\n        \n        // Remove from activeReviewers array\n        for (uint i = 0; i < activeReviewers.length; i++) {\n            if (activeReviewers[i] == _reviewer) {\n                // Replace with last element and pop\n                activeReviewers[i] = activeReviewers[activeReviewers.length - 1];\n                activeReviewers.pop();\n                break;\n            }\n        }\n    }\n    \n    /**\n     * @dev Sets the auto-approve and auto-reject thresholds\n     * @param _autoApprove Auto-approve threshold\n     * @param _autoReject Auto-reject threshold\n     */\n    function setThresholds(uint8 _autoApprove, uint8 _autoReject) external onlyAdmin {\n        require(_autoApprove < _autoReject, \"Invalid thresholds\");\n        autoApproveThreshold = _autoApprove;\n        autoRejectThreshold = _autoReject;\n    }\n    \n    /**\n     * @dev Submits a new insurance claim\n     * @param _policyId ID of the policy\n     * @param _description Description of the claim\n     * @param _evidenceHashes IPFS hashes of the evidence files\n     * @return claimId ID of the submitted claim\n     */\n    function submitClaim(\n        uint256 _policyId,\n        string memory _description,\n        string[] memory _evidenceHashes\n    ) external returns (uint256) {\n        // Verify policy validity\n        require(\n            PolicyRegistry(policyRegistry).isPolicyValidForClaims(_policyId, msg.sender),\n            \"Invalid policy\"\n        );\n        \n        uint256 claimId = nextClaimId++;\n        \n        claims[claimId] = Claim({\n            claimId: claimId,\n            policyId: _policyId,\n            claimant: msg.sender,\n            description: _description,\n            evidenceHashes: _evidenceHashes,\n            timestamp: block.timestamp,\n            status: ClaimStatus.Submitted,\n            claimType: 0,\n            severity: 0,\n            fraudRisk: 0,\n            recommendedPayout: 0,\n            finalPayout: 0,\n            processedAt: 0,\n            requiresHumanReview: false,\n            assignedReviewer: address(0)\n        });\n        \n        // Increment claim count in policy\n        PolicyRegistry(policyRegistry).incrementClaimCount(_policyId);\n        \n        emit ClaimSubmitted(claimId, _policyId, msg.sender);\n        return claimId;\n    }\n    \n    /**\n     * @dev Submits AI analysis results for a claim\n     * @param _claimId ID of the claim\n     * @param _claimType Type of claim (0-3)\n     * @param _severity Severity of the claim (1-10)\n     * @param _fraudRisk Fraud risk percentage (0-100)\n     * @param _recommendedPayout Recommended payout amount\n     */\n    function submitAIAnalysis(\n        uint256 _claimId,\n        uint8 _claimType,\n        uint8 _severity,\n        uint8 _fraudRisk,\n        uint256 _recommendedPayout\n    ) external onlyAIOracle {\n        require(claims[_claimId].status == ClaimStatus.Submitted, \"Invalid status\");\n        \n        Claim storage claim = claims[_claimId];\n        claim.claimType = _claimType;\n        claim.severity = _severity;\n        claim.fraudRisk = _fraudRisk;\n        claim.recommendedPayout = _recommendedPayout;\n        claim.status = ClaimStatus.AIAnalyzed;\n        \n        // Auto-approve low-risk claims under threshold\n        if (_fraudRisk < autoApproveThreshold && _recommendedPayout > 0) {\n            _approveClaim(_claimId, _recommendedPayout);\n        } \n        // Auto-reject high-risk claims\n        else if (_fraudRisk > autoRejectThreshold) {\n            claim.status = ClaimStatus.Rejected;\n            claim.processedAt = block.timestamp;\n            emit ClaimRejected(_claimId, \"High fraud risk detected\");\n        } \n        // Send to human review with VRF for fair selection\n        else {\n            claim.requiresHumanReview = true;\n            _requestRandomReviewer(_claimId);\n        }\n        \n        emit AIAnalysisReceived(_claimId);\n    }\n    \n    /**\n     * @dev Reviewer approves a claim\n     * @param _claimId ID of the claim\n     * @param _payout Approved payout amount\n     */\n    function reviewerApproveClaim(uint256 _claimId, uint256 _payout) external onlyReviewer {\n        Claim storage claim = claims[_claimId];\n        require(claim.status == ClaimStatus.UnderReview, \"Invalid status\");\n        require(claim.assignedReviewer == msg.sender, \"Not assigned reviewer\");\n        \n        _approveClaim(_claimId, _payout);\n    }\n    \n    /**\n     * @dev Reviewer rejects a claim\n     * @param _claimId ID of the claim\n     * @param _reason Reason for rejection\n     */\n    function reviewerRejectClaim(uint256 _claimId, string memory _reason) external onlyReviewer {\n        Claim storage claim = claims[_claimId];\n        require(claim.status == ClaimStatus.UnderReview, \"Invalid status\");\n        require(claim.assignedReviewer == msg.sender, \"Not assigned reviewer\");\n        \n        claim.status = ClaimStatus.Rejected;\n        claim.processedAt = block.timestamp;\n        emit ClaimRejected(_claimId, _reason);\n    }\n    \n    /**\n     * @dev Internal function to approve a claim\n     * @param _claimId ID of the claim\n     * @param _payout Approved payout amount\n     */\n    function _approveClaim(uint256 _claimId, uint256 _payout) internal {\n        Claim storage claim = claims[_claimId];\n        claim.status = ClaimStatus.Approved;\n        claim.finalPayout = _payout;\n        claim.processedAt = block.timestamp;\n        \n        emit ClaimApproved(_claimId, _payout);\n        \n        // Process payout if PayoutManager is set\n        if (payoutManager != address(0)) {\n            PayoutManager(payoutManager).processPayout(_claimId, claim.claimant, _payout);\n            \n            // Record payout in the policy\n            PolicyRegistry(policyRegistry).recordPayout(claim.policyId, _payout);\n            \n            claim.status = ClaimStatus.Paid;\n            emit ClaimPaid(_claimId);\n        }\n    }\n    \n    /**\n     * @dev Requests a random reviewer using Chainlink VRF\n     * @param _claimId ID of the claim\n     */\n    function _requestRandomReviewer(uint256 _claimId) internal {\n        require(activeReviewers.length > 0, \"No active reviewers\");\n        \n        claims[_claimId].status = ClaimStatus.UnderReview;\n        \n        uint256 requestId = vrfCoordinator.requestRandomWords(\n            vrfKeyHash,\n            vrfSubscriptionId,\n            vrfRequestConfirmations,\n            vrfCallbackGasLimit,\n            numWords\n        );\n        \n        vrfRequestToClaim[requestId] = _claimId;\n    }\n    \n    /**\n     * @dev Callback function used by VRF Coordinator\n     * @param requestId ID of the VRF request\n     * @param randomWords Random words returned by VRF\n     */\n    function fulfillRandomWords(uint256 requestId, uint256[] memory randomWords) internal override {\n        uint256 claimId = vrfRequestToClaim[requestId];\n        require(claimId > 0, \"Claim not found\");\n        \n        // Ensure we have active reviewers\n        if (activeReviewers.length == 0) {\n            // If no reviewers, admin handles the claim\n            claims[claimId].assignedReviewer = admin;\n            emit ReviewerAssigned(claimId, admin);\n            return;\n        }\n        \n        uint256 reviewerIndex = randomWords[0] % activeReviewers.length;\n        address selectedReviewer = activeReviewers[reviewerIndex];\n        \n        // Assign to reviewer\n        claims[claimId].assignedReviewer = selectedReviewer;\n        emit ReviewerAssigned(claimId, selectedReviewer);\n    }\n    \n    /**\n     * @dev Gets all claims submitted by a user\n     * @param _user Address of the user\n     * @return claimIds Array of claim IDs\n     */\n    function getUserClaims(address _user) external view returns (uint256[] memory) {\n        uint256 count = 0;\n        \n        // First count the number of claims for this user\n        for (uint256 i = 1; i < nextClaimId; i++) {\n            if (claims[i].claimant == _user) {\n                count++;\n            }\n        }\n        \n        uint256[] memory claimIds = new uint256[](count);\n        uint256 index = 0;\n        \n        // Fill the array with claim IDs\n        for (uint256 i = 1; i < nextClaimId; i++) {\n            if (claims[i].claimant == _user) {\n                claimIds[index] = i;\n                index++;\n            }\n        }\n        \n        return claimIds;\n    }\n    \n    /**\n     * @dev Gets claims that require human review\n     * @return claimIds Array of claim IDs\n     */\n    function getClaimsForReview() external view onlyReviewer returns (uint256[] memory) {\n        uint256 count = 0;\n        \n        // First count the number of claims for review\n        for (uint256 i = 1; i < nextClaimId; i++) {\n            if (claims[i].status == ClaimStatus.UnderReview && \n                claims[i].assignedReviewer == msg.sender) {\n                count++;\n            }\n        }\n        \n        uint256[] memory claimIds = new uint256[](count);\n        uint256 index = 0;\n        \n        // Fill the array with claim IDs\n        for (uint256 i = 1; i < nextClaimId; i++) {\n            if (claims[i].status == ClaimStatus.UnderReview && \n                claims[i].assignedReviewer == msg.sender) {\n                claimIds[index] = i;\n                index++;\n            }\n        }\n        \n        return claimIds;\n    }\n    \n    /**\n     * @dev Gets the claim details\n     * @param _claimId ID of the claim\n     * @return Claim details\n     */\n    function getClaim(uint256 _claimId) external view returns (Claim memory) {\n        return claims[_claimId];\n    }\n    \n    /**\n     * @dev Gets the number of active reviewers\n     * @return uint256 Number of active reviewers\n     */\n    function getActiveReviewerCount() public view returns (uint256) {\n        return activeReviewers.length;\n    }\n}\n"},"contracts/PayoutManager.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.19;\n\nimport \"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\";\nimport \"./ClaimsProcessor.sol\";\n\n/**\n * @title PayoutManager\n * @dev Manages payouts for approved insurance claims\n */\ncontract PayoutManager {\n    struct Payout {\n        uint256 claimId;\n        address recipient;\n        uint256 usdAmount;\n        uint256 avaxAmount;\n        uint256 timestamp;\n        bool processed;\n        bool withdrawn;\n    }\n    \n    mapping(uint256 => Payout) public payouts;\n    mapping(address => uint256) public balances;\n    \n    address public claimsProcessor;\n    address public admin;\n    address public treasury;\n    AggregatorV3Interface public priceFeed; // For USD/AVAX conversion\n    \n    uint256 public totalPayouts;\n    uint256 public totalWithdrawn;\n    uint256 public availableFunds;\n    \n    event PayoutProcessed(uint256 indexed claimId, address indexed recipient, uint256 usdAmount, uint256 avaxAmount);\n    event FundsDeposited(address indexed depositor, uint256 amount);\n    event FundsWithdrawn(address indexed recipient, uint256 amount);\n    \n    modifier onlyClaimsProcessor() {\n        require(msg.sender == claimsProcessor, \"Only claims processor\");\n        _;\n    }\n    \n    modifier onlyAdmin() {\n        require(msg.sender == admin, \"Only admin\");\n        _;\n    }\n    \n    /**\n     * @dev Constructor for PayoutManager\n     * @param _claimsProcessor Address of the ClaimsProcessor contract\n     * @param _priceFeed Address of the Chainlink Price Feed for AVAX/USD\n     */\n    constructor(address _claimsProcessor, address _priceFeed) {\n        claimsProcessor = _claimsProcessor;\n        priceFeed = AggregatorV3Interface(_priceFeed);\n        admin = msg.sender;\n        treasury = msg.sender;\n    }\n    \n    /**\n     * @dev Sets the treasury address\n     * @param _treasury New treasury address\n     */\n    function setTreasury(address _treasury) external onlyAdmin {\n        treasury = _treasury;\n    }\n    \n    /**\n     * @dev Updates the price feed address\n     * @param _priceFeed New price feed address\n     */\n    function setPriceFeed(address _priceFeed) external onlyAdmin {\n        priceFeed = AggregatorV3Interface(_priceFeed);\n    }\n    \n    /**\n     * @dev Process payout for an approved claim\n     * @param _claimId ID of the approved claim\n     * @param _recipient Address of the claim recipient\n     * @param _usdAmount Payout amount in USD (with 6 decimals, e.g., 1000000 = 1 USD)\n     */\n    function processPayout(uint256 _claimId, address _recipient, uint256 _usdAmount) external onlyClaimsProcessor {\n        require(payouts[_claimId].claimId == 0, \"Payout already processed\");\n        require(_usdAmount > 0, \"Amount must be positive\");\n        \n        // Convert USD to AVAX using Chainlink price feed\n        uint256 avaxAmount = convertUSDToAVAX(_usdAmount);\n        \n        // Check if contract has enough funds for payout\n        require(availableFunds >= avaxAmount, \"Insufficient funds\");\n        \n        payouts[_claimId] = Payout({\n            claimId: _claimId,\n            recipient: _recipient,\n            usdAmount: _usdAmount,\n            avaxAmount: avaxAmount,\n            timestamp: block.timestamp,\n            processed: true,\n            withdrawn: false\n        });\n        \n        // Add to user's balance\n        balances[_recipient] += avaxAmount;\n        availableFunds -= avaxAmount;\n        totalPayouts += avaxAmount;\n        \n        emit PayoutProcessed(_claimId, _recipient, _usdAmount, avaxAmount);\n    }\n    \n    /**\n     * @dev Convert USD amount to AVAX using Chainlink price feed\n     * @param _usdAmount Amount in USD (with 6 decimals)\n     * @return avaxAmount Equivalent amount in AVAX (with 18 decimals)\n     */\n    function convertUSDToAVAX(uint256 _usdAmount) public view returns (uint256) {\n        // Get latest price from Chainlink (AVAX/USD)\n        (, int256 price, , ,) = priceFeed.latestRoundData();\n        require(price > 0, \"Invalid price data\");\n        \n        // Convert price to positive uint256, chainlink returns price with 8 decimals\n        uint256 avaxUsdPrice = uint256(price);\n        \n        // USD amount has 6 decimals, price has 8 decimals, AVAX has 18 decimals\n        // (_usdAmount * 10^18) / (avaxUsdPrice * 10^10)\n        // This gives the amount in AVAX with 18 decimals\n        uint256 avaxAmount = (_usdAmount * 1e18) / (avaxUsdPrice * 1e2);\n        \n        return avaxAmount;\n    }\n    \n    /**\n     * @dev Allow users to withdraw their balance\n     */\n    function withdraw() external {\n        uint256 amount = balances[msg.sender];\n        require(amount > 0, \"No balance to withdraw\");\n        \n        // Reset balance before transfer to prevent reentrancy\n        balances[msg.sender] = 0;\n        \n        // Transfer AVAX\n        (bool success, ) = payable(msg.sender).call{value: amount}(\"\");\n        require(success, \"Transfer failed\");\n        \n        totalWithdrawn += amount;\n        \n        emit FundsWithdrawn(msg.sender, amount);\n    }\n    \n    /**\n     * @dev Deposit funds to the contract\n     */\n    receive() external payable {\n        availableFunds += msg.value;\n        emit FundsDeposited(msg.sender, msg.value);\n    }\n    \n    /**\n     * @dev Allows admin to deposit funds\n     */\n    function deposit() external payable {\n        availableFunds += msg.value;\n        emit FundsDeposited(msg.sender, msg.value);\n    }\n    \n    /**\n     * @dev Allows admin to withdraw excess funds to treasury\n     * @param _amount Amount to withdraw\n     */\n    function withdrawToTreasury(uint256 _amount) external onlyAdmin {\n        require(_amount <= address(this).balance - totalPayouts + totalWithdrawn, \"Exceeds available funds\");\n        \n        availableFunds -= _amount;\n        \n        (bool success, ) = payable(treasury).call{value: _amount}(\"\");\n        require(success, \"Transfer failed\");\n        \n        emit FundsWithdrawn(treasury, _amount);\n    }\n    \n    /**\n     * @dev Get payout details for a claim\n     * @param _claimId ID of the claim\n     * @return Payout details\n     */\n    function getPayoutDetails(uint256 _claimId) external view returns (Payout memory) {\n        return payouts[_claimId];\n    }\n    \n    /**\n     * @dev Get user's withdrawable balance\n     * @param _user Address of the user\n     * @return balance User's balance\n     */\n    function getUserBalance(address _user) external view returns (uint256) {\n        return balances[_user];\n    }\n    \n    /**\n     * @dev Get contract balance\n     * @return Total contract balance\n     */\n    function getContractBalance() external view returns (uint256) {\n        return address(this).balance;\n    }\n}\n"},"contracts/PolicyRegistry.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.19;\n\n/**\n * @title PolicyRegistry\n * @dev Stores insurance policies and manages their lifecycle\n */\ncontract PolicyRegistry {\n    struct Policy {\n        uint256 policyId;\n        address policyholder;\n        uint256 premium;\n        uint256 coverage;\n        uint256 deductible;\n        string policyType; // \"auto\", \"home\", \"health\", \"travel\"\n        uint256 startDate;\n        uint256 endDate;\n        bool isActive;\n        uint256 claimsCount;\n        uint256 totalPayouts;\n    }\n    \n    mapping(uint256 => Policy) public policies;\n    mapping(address => uint256[]) public userPolicies;\n    \n    uint256 public nextPolicyId = 1;\n    address public admin;\n    address public claimsProcessor;\n    \n    event PolicyCreated(uint256 indexed policyId, address indexed policyholder);\n    event PolicyUpdated(uint256 indexed policyId);\n    event PolicyCancelled(uint256 indexed policyId);\n    event ClaimCountUpdated(uint256 indexed policyId, uint256 newCount);\n    event PayoutRecorded(uint256 indexed policyId, uint256 amount);\n    \n    modifier onlyAdmin() {\n        require(msg.sender == admin, \"Only admin\");\n        _;\n    }\n    \n    modifier onlyClaimsProcessor() {\n        require(msg.sender == claimsProcessor, \"Only claims processor\");\n        _;\n    }\n    \n    constructor() {\n        admin = msg.sender;\n    }\n    \n    /**\n     * @dev Sets the address of the claims processor contract\n     * @param _claimsProcessor Address of the claims processor contract\n     */\n    function setClaimsProcessor(address _claimsProcessor) external onlyAdmin {\n        claimsProcessor = _claimsProcessor;\n    }\n    \n    /**\n     * @dev Creates a new insurance policy\n     * @param _policyholder Address of the policyholder\n     * @param _premium Premium amount in wei\n     * @param _coverage Coverage amount in wei\n     * @param _deductible Deductible amount in wei\n     * @param _policyType Type of policy (auto, home, health, travel)\n     * @param _duration Duration of the policy in seconds\n     * @return policyId Unique identifier of the created policy\n     */\n    function createPolicy(\n        address _policyholder,\n        uint256 _premium,\n        uint256 _coverage,\n        uint256 _deductible,\n        string memory _policyType,\n        uint256 _duration\n    ) external onlyAdmin returns (uint256) {\n        uint256 policyId = nextPolicyId++;\n        \n        policies[policyId] = Policy({\n            policyId: policyId,\n            policyholder: _policyholder,\n            premium: _premium,\n            coverage: _coverage,\n            deductible: _deductible,\n            policyType: _policyType,\n            startDate: block.timestamp,\n            endDate: block.timestamp + _duration,\n            isActive: true,\n            claimsCount: 0,\n            totalPayouts: 0\n        });\n        \n        userPolicies[_policyholder].push(policyId);\n        emit PolicyCreated(policyId, _policyholder);\n        return policyId;\n    }\n    \n    /**\n     * @dev Updates an existing policy\n     * @param _policyId ID of the policy to update\n     * @param _premium New premium amount\n     * @param _coverage New coverage amount\n     * @param _deductible New deductible amount\n     * @param _duration Additional duration in seconds\n     */\n    function updatePolicy(\n        uint256 _policyId,\n        uint256 _premium,\n        uint256 _coverage,\n        uint256 _deductible,\n        uint256 _duration\n    ) external onlyAdmin {\n        require(policies[_policyId].policyId == _policyId, \"Policy does not exist\");\n        require(policies[_policyId].isActive, \"Policy is not active\");\n        \n        Policy storage policy = policies[_policyId];\n        policy.premium = _premium;\n        policy.coverage = _coverage;\n        policy.deductible = _deductible;\n        \n        if (_duration > 0) {\n            policy.endDate += _duration;\n        }\n        \n        emit PolicyUpdated(_policyId);\n    }\n    \n    /**\n     * @dev Cancels an existing policy\n     * @param _policyId ID of the policy to cancel\n     */\n    function cancelPolicy(uint256 _policyId) external onlyAdmin {\n        require(policies[_policyId].policyId == _policyId, \"Policy does not exist\");\n        require(policies[_policyId].isActive, \"Policy is already inactive\");\n        \n        policies[_policyId].isActive = false;\n        emit PolicyCancelled(_policyId);\n    }\n    \n    /**\n     * @dev Increments the claim count for a policy\n     * @param _policyId ID of the policy\n     */\n    function incrementClaimCount(uint256 _policyId) external onlyClaimsProcessor {\n        require(policies[_policyId].policyId == _policyId, \"Policy does not exist\");\n        require(policies[_policyId].isActive, \"Policy is not active\");\n        \n        policies[_policyId].claimsCount += 1;\n        emit ClaimCountUpdated(_policyId, policies[_policyId].claimsCount);\n    }\n    \n    /**\n     * @dev Records a payout for a policy\n     * @param _policyId ID of the policy\n     * @param _amount Payout amount\n     */\n    function recordPayout(uint256 _policyId, uint256 _amount) external onlyClaimsProcessor {\n        require(policies[_policyId].policyId == _policyId, \"Policy does not exist\");\n        require(policies[_policyId].isActive, \"Policy is not active\");\n        \n        policies[_policyId].totalPayouts += _amount;\n        emit PayoutRecorded(_policyId, _amount);\n    }\n    \n    /**\n     * @dev Checks if a policy is valid for making claims\n     * @param _policyId ID of the policy\n     * @param _claimant Address of the claimant\n     * @return bool True if the policy is valid for claims\n     */\n    function isPolicyValidForClaims(uint256 _policyId, address _claimant) external view returns (bool) {\n        Policy storage policy = policies[_policyId];\n        \n        return (\n            policy.policyId == _policyId &&\n            policy.policyholder == _claimant &&\n            policy.isActive &&\n            block.timestamp >= policy.startDate &&\n            block.timestamp <= policy.endDate\n        );\n    }\n    \n    /**\n     * @dev Gets all policies owned by a user\n     * @param _user Address of the user\n     * @return uint256[] Array of policy IDs owned by the user\n     */\n    function getUserPolicies(address _user) external view returns (uint256[] memory) {\n        return userPolicies[_user];\n    }\n    \n    /**\n     * @dev Gets policy details by ID\n     * @param _policyId ID of the policy\n     * @return Policy details of the specified policy\n     */\n    function getPolicy(uint256 _policyId) external view returns (Policy memory) {\n        return policies[_policyId];\n    }\n}\n"}},"settings":{"optimizer":{"enabled":true,"runs":200},"viaIR":true,"outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata"],"":["ast"]}}}},"output":{"sources":{"@chainlink/contracts/src/v0.8/VRFConsumerBaseV2.sol":{"ast":{"absolutePath":"@chainlink/contracts/src/v0.8/VRFConsumerBaseV2.sol","exportedSymbols":{"VRFConsumerBaseV2":[57]},"id":58,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".4"],"nodeType":"PragmaDirective","src":"32:23:0"},{"abstract":true,"baseContracts":[],"canonicalName":"VRFConsumerBaseV2","contractDependencies":[],"contractKind":"contract","documentation":{"id":2,"nodeType":"StructuredDocumentation","src":"57:5275:0","text":"****************************************************************************\n @notice Interface for contracts using VRF randomness\n *****************************************************************************\n @dev PURPOSE\n @dev Reggie the Random Oracle (not his real job) wants to provide randomness\n @dev to Vera the verifier in such a way that Vera can be sure he's not\n @dev making his output up to suit himself. Reggie provides Vera a public key\n @dev to which he knows the secret key. Each time Vera provides a seed to\n @dev Reggie, he gives back a value which is computed completely\n @dev deterministically from the seed and the secret key.\n @dev Reggie provides a proof by which Vera can verify that the output was\n @dev correctly computed once Reggie tells it to her, but without that proof,\n @dev the output is indistinguishable to her from a uniform random sample\n @dev from the output space.\n @dev The purpose of this contract is to make it easy for unrelated contracts\n @dev to talk to Vera the verifier about the work Reggie is doing, to provide\n @dev simple access to a verifiable source of randomness. It ensures 2 things:\n @dev 1. The fulfillment came from the VRFCoordinator\n @dev 2. The consumer contract implements fulfillRandomWords.\n *****************************************************************************\n @dev USAGE\n @dev Calling contracts must inherit from VRFConsumerBase, and can\n @dev initialize VRFConsumerBase's attributes in their constructor as\n @dev shown:\n @dev   contract VRFConsumer {\n @dev     constructor(<other arguments>, address _vrfCoordinator, address _link)\n @dev       VRFConsumerBase(_vrfCoordinator) public {\n @dev         <initialization with other arguments goes here>\n @dev       }\n @dev   }\n @dev The oracle will have given you an ID for the VRF keypair they have\n @dev committed to (let's call it keyHash). Create subscription, fund it\n @dev and your consumer contract as a consumer of it (see VRFCoordinatorInterface\n @dev subscription management functions).\n @dev Call requestRandomWords(keyHash, subId, minimumRequestConfirmations,\n @dev callbackGasLimit, numWords),\n @dev see (VRFCoordinatorInterface for a description of the arguments).\n @dev Once the VRFCoordinator has received and validated the oracle's response\n @dev to your request, it will call your contract's fulfillRandomWords method.\n @dev The randomness argument to fulfillRandomWords is a set of random words\n @dev generated from your requestId and the blockHash of the request.\n @dev If your contract could have concurrent requests open, you can use the\n @dev requestId returned from requestRandomWords to track which response is associated\n @dev with which randomness request.\n @dev See \"SECURITY CONSIDERATIONS\" for principles to keep in mind,\n @dev if your contract could have multiple requests in flight simultaneously.\n @dev Colliding `requestId`s are cryptographically impossible as long as seeds\n @dev differ.\n *****************************************************************************\n @dev SECURITY CONSIDERATIONS\n @dev A method with the ability to call your fulfillRandomness method directly\n @dev could spoof a VRF response with any random value, so it's critical that\n @dev it cannot be directly called by anything other than this base contract\n @dev (specifically, by the VRFConsumerBase.rawFulfillRandomness method).\n @dev For your users to trust that your contract's random behavior is free\n @dev from malicious interference, it's best if you can write it so that all\n @dev behaviors implied by a VRF response are executed *during* your\n @dev fulfillRandomness method. If your contract must store the response (or\n @dev anything derived from it) and use it later, you must ensure that any\n @dev user-significant behavior which depends on that stored value cannot be\n @dev manipulated by a subsequent VRF request.\n @dev Similarly, both miners and the VRF oracle itself have some influence\n @dev over the order in which VRF responses appear on the blockchain, so if\n @dev your contract could have multiple VRF requests in flight simultaneously,\n @dev you must ensure that the order in which the VRF responses arrive cannot\n @dev be used to manipulate your contract's user-significant behavior.\n @dev Since the block hash of the block which contains the requestRandomness\n @dev call is mixed into the input to the VRF *last*, a sufficiently powerful\n @dev miner could, in principle, fork the blockchain to evict the block\n @dev containing the request, forcing the request to be included in a\n @dev different block with a different hash, and therefore a different input\n @dev to the VRF. However, such an attack would incur a substantial economic\n @dev cost. This cost scales with the number of blocks the VRF oracle waits\n @dev until it calls responds to a request. It is for this reason that\n @dev that you can signal to an oracle you'd like them to wait longer before\n @dev responding to the request (however this is not enforced in the contract\n @dev and so remains effective only in the case of unmodified oracle software)."},"fullyImplemented":false,"id":57,"linearizedBaseContracts":[57],"name":"VRFConsumerBaseV2","nameLocation":"5351:17:0","nodeType":"ContractDefinition","nodes":[{"errorSelector":"1cf993f4","id":8,"name":"OnlyCoordinatorCanFulfill","nameLocation":"5379:25:0","nodeType":"ErrorDefinition","parameters":{"id":7,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4,"mutability":"mutable","name":"have","nameLocation":"5413:4:0","nodeType":"VariableDeclaration","scope":8,"src":"5405:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3,"name":"address","nodeType":"ElementaryTypeName","src":"5405:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6,"mutability":"mutable","name":"want","nameLocation":"5427:4:0","nodeType":"VariableDeclaration","scope":8,"src":"5419:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5,"name":"address","nodeType":"ElementaryTypeName","src":"5419:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5404:28:0"},"src":"5373:60:0"},{"constant":false,"id":10,"mutability":"immutable","name":"vrfCoordinator","nameLocation":"5462:14:0","nodeType":"VariableDeclaration","scope":57,"src":"5436:40:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9,"name":"address","nodeType":"ElementaryTypeName","src":"5436:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"body":{"id":20,"nodeType":"Block","src":"5593:43:0","statements":[{"expression":{"id":18,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":16,"name":"vrfCoordinator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10,"src":"5599:14:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":17,"name":"_vrfCoordinator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":13,"src":"5616:15:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5599:32:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":19,"nodeType":"ExpressionStatement","src":"5599:32:0"}]},"documentation":{"id":11,"nodeType":"StructuredDocumentation","src":"5481:72:0","text":" @param _vrfCoordinator address of VRFCoordinator contract"},"id":21,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":14,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13,"mutability":"mutable","name":"_vrfCoordinator","nameLocation":"5576:15:0","nodeType":"VariableDeclaration","scope":21,"src":"5568:23:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":12,"name":"address","nodeType":"ElementaryTypeName","src":"5568:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5567:25:0"},"returnParameters":{"id":15,"nodeType":"ParameterList","parameters":[],"src":"5593:0:0"},"scope":57,"src":"5556:80:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"documentation":{"id":22,"nodeType":"StructuredDocumentation","src":"5640:686:0","text":" @notice fulfillRandomness handles the VRF response. Your contract must\n @notice implement it. See \"SECURITY CONSIDERATIONS\" above for important\n @notice principles to keep in mind when implementing your fulfillRandomness\n @notice method.\n @dev VRFConsumerBaseV2 expects its subcontracts to have a method with this\n @dev signature, and will call it once it has verified the proof\n @dev associated with the randomness. (It is triggered via a call to\n @dev rawFulfillRandomness, below.)\n @param requestId The Id initially returned by requestRandomness\n @param randomWords the VRF output expanded to the requested number of words"},"id":30,"implemented":false,"kind":"function","modifiers":[],"name":"fulfillRandomWords","nameLocation":"6338:18:0","nodeType":"FunctionDefinition","parameters":{"id":28,"nodeType":"ParameterList","parameters":[{"constant":false,"id":24,"mutability":"mutable","name":"requestId","nameLocation":"6365:9:0","nodeType":"VariableDeclaration","scope":30,"src":"6357:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":23,"name":"uint256","nodeType":"ElementaryTypeName","src":"6357:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":27,"mutability":"mutable","name":"randomWords","nameLocation":"6393:11:0","nodeType":"VariableDeclaration","scope":30,"src":"6376:28:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":25,"name":"uint256","nodeType":"ElementaryTypeName","src":"6376:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":26,"nodeType":"ArrayTypeName","src":"6376:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"6356:49:0"},"returnParameters":{"id":29,"nodeType":"ParameterList","parameters":[],"src":"6422:0:0"},"scope":57,"src":"6329:94:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":55,"nodeType":"Block","src":"6707:167:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":41,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":38,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6717:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":39,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6721:6:0","memberName":"sender","nodeType":"MemberAccess","src":"6717:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":40,"name":"vrfCoordinator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10,"src":"6731:14:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6717:28:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":49,"nodeType":"IfStatement","src":"6713:109:0","trueBody":{"id":48,"nodeType":"Block","src":"6747:75:0","statements":[{"errorCall":{"arguments":[{"expression":{"id":43,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6788:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":44,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6792:6:0","memberName":"sender","nodeType":"MemberAccess","src":"6788:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":45,"name":"vrfCoordinator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10,"src":"6800:14:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":42,"name":"OnlyCoordinatorCanFulfill","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8,"src":"6762:25:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_address_$returns$__$","typeString":"function (address,address) pure"}},"id":46,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6762:53:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":47,"nodeType":"RevertStatement","src":"6755:60:0"}]}},{"expression":{"arguments":[{"id":51,"name":"requestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":32,"src":"6846:9:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":52,"name":"randomWords","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":35,"src":"6857:11:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}],"id":50,"name":"fulfillRandomWords","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":30,"src":"6827:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$","typeString":"function (uint256,uint256[] memory)"}},"id":53,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6827:42:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":54,"nodeType":"ExpressionStatement","src":"6827:42:0"}]},"functionSelector":"1fe543e3","id":56,"implemented":true,"kind":"function","modifiers":[],"name":"rawFulfillRandomWords","nameLocation":"6627:21:0","nodeType":"FunctionDefinition","parameters":{"id":36,"nodeType":"ParameterList","parameters":[{"constant":false,"id":32,"mutability":"mutable","name":"requestId","nameLocation":"6657:9:0","nodeType":"VariableDeclaration","scope":56,"src":"6649:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":31,"name":"uint256","nodeType":"ElementaryTypeName","src":"6649:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":35,"mutability":"mutable","name":"randomWords","nameLocation":"6685:11:0","nodeType":"VariableDeclaration","scope":56,"src":"6668:28:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":33,"name":"uint256","nodeType":"ElementaryTypeName","src":"6668:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":34,"nodeType":"ArrayTypeName","src":"6668:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"6648:49:0"},"returnParameters":{"id":37,"nodeType":"ParameterList","parameters":[],"src":"6707:0:0"},"scope":57,"src":"6618:256:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":58,"src":"5333:1543:0","usedErrors":[8]}],"src":"32:6845:0"},"id":0},"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol":{"ast":{"absolutePath":"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol","exportedSymbols":{"AggregatorV3Interface":[103]},"id":104,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":59,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"32:23:1"},{"abstract":false,"baseContracts":[],"canonicalName":"AggregatorV3Interface","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":103,"linearizedBaseContracts":[103],"name":"AggregatorV3Interface","nameLocation":"67:21:1","nodeType":"ContractDefinition","nodes":[{"functionSelector":"313ce567","id":64,"implemented":false,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"102:8:1","nodeType":"FunctionDefinition","parameters":{"id":60,"nodeType":"ParameterList","parameters":[],"src":"110:2:1"},"returnParameters":{"id":63,"nodeType":"ParameterList","parameters":[{"constant":false,"id":62,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":64,"src":"136:5:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":61,"name":"uint8","nodeType":"ElementaryTypeName","src":"136:5:1","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"135:7:1"},"scope":103,"src":"93:50:1","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"7284e416","id":69,"implemented":false,"kind":"function","modifiers":[],"name":"description","nameLocation":"156:11:1","nodeType":"FunctionDefinition","parameters":{"id":65,"nodeType":"ParameterList","parameters":[],"src":"167:2:1"},"returnParameters":{"id":68,"nodeType":"ParameterList","parameters":[{"constant":false,"id":67,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":69,"src":"193:13:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":66,"name":"string","nodeType":"ElementaryTypeName","src":"193:6:1","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"192:15:1"},"scope":103,"src":"147:61:1","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"54fd4d50","id":74,"implemented":false,"kind":"function","modifiers":[],"name":"version","nameLocation":"221:7:1","nodeType":"FunctionDefinition","parameters":{"id":70,"nodeType":"ParameterList","parameters":[],"src":"228:2:1"},"returnParameters":{"id":73,"nodeType":"ParameterList","parameters":[{"constant":false,"id":72,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":74,"src":"254:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":71,"name":"uint256","nodeType":"ElementaryTypeName","src":"254:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"253:9:1"},"scope":103,"src":"212:51:1","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"9a6fc8f5","id":89,"implemented":false,"kind":"function","modifiers":[],"name":"getRoundData","nameLocation":"276:12:1","nodeType":"FunctionDefinition","parameters":{"id":77,"nodeType":"ParameterList","parameters":[{"constant":false,"id":76,"mutability":"mutable","name":"_roundId","nameLocation":"296:8:1","nodeType":"VariableDeclaration","scope":89,"src":"289:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"},"typeName":{"id":75,"name":"uint80","nodeType":"ElementaryTypeName","src":"289:6:1","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"visibility":"internal"}],"src":"288:17:1"},"returnParameters":{"id":88,"nodeType":"ParameterList","parameters":[{"constant":false,"id":79,"mutability":"mutable","name":"roundId","nameLocation":"355:7:1","nodeType":"VariableDeclaration","scope":89,"src":"348:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"},"typeName":{"id":78,"name":"uint80","nodeType":"ElementaryTypeName","src":"348:6:1","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"visibility":"internal"},{"constant":false,"id":81,"mutability":"mutable","name":"answer","nameLocation":"377:6:1","nodeType":"VariableDeclaration","scope":89,"src":"370:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":80,"name":"int256","nodeType":"ElementaryTypeName","src":"370:6:1","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":83,"mutability":"mutable","name":"startedAt","nameLocation":"399:9:1","nodeType":"VariableDeclaration","scope":89,"src":"391:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":82,"name":"uint256","nodeType":"ElementaryTypeName","src":"391:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":85,"mutability":"mutable","name":"updatedAt","nameLocation":"424:9:1","nodeType":"VariableDeclaration","scope":89,"src":"416:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":84,"name":"uint256","nodeType":"ElementaryTypeName","src":"416:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":87,"mutability":"mutable","name":"answeredInRound","nameLocation":"448:15:1","nodeType":"VariableDeclaration","scope":89,"src":"441:22:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"},"typeName":{"id":86,"name":"uint80","nodeType":"ElementaryTypeName","src":"441:6:1","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"visibility":"internal"}],"src":"340:129:1"},"scope":103,"src":"267:203:1","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"feaf968c","id":102,"implemented":false,"kind":"function","modifiers":[],"name":"latestRoundData","nameLocation":"483:15:1","nodeType":"FunctionDefinition","parameters":{"id":90,"nodeType":"ParameterList","parameters":[],"src":"498:2:1"},"returnParameters":{"id":101,"nodeType":"ParameterList","parameters":[{"constant":false,"id":92,"mutability":"mutable","name":"roundId","nameLocation":"550:7:1","nodeType":"VariableDeclaration","scope":102,"src":"543:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"},"typeName":{"id":91,"name":"uint80","nodeType":"ElementaryTypeName","src":"543:6:1","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"visibility":"internal"},{"constant":false,"id":94,"mutability":"mutable","name":"answer","nameLocation":"572:6:1","nodeType":"VariableDeclaration","scope":102,"src":"565:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":93,"name":"int256","nodeType":"ElementaryTypeName","src":"565:6:1","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":96,"mutability":"mutable","name":"startedAt","nameLocation":"594:9:1","nodeType":"VariableDeclaration","scope":102,"src":"586:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":95,"name":"uint256","nodeType":"ElementaryTypeName","src":"586:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":98,"mutability":"mutable","name":"updatedAt","nameLocation":"619:9:1","nodeType":"VariableDeclaration","scope":102,"src":"611:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":97,"name":"uint256","nodeType":"ElementaryTypeName","src":"611:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":100,"mutability":"mutable","name":"answeredInRound","nameLocation":"643:15:1","nodeType":"VariableDeclaration","scope":102,"src":"636:22:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"},"typeName":{"id":99,"name":"uint80","nodeType":"ElementaryTypeName","src":"636:6:1","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"visibility":"internal"}],"src":"535:129:1"},"scope":103,"src":"474:191:1","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":104,"src":"57:610:1","usedErrors":[]}],"src":"32:636:1"},"id":1},"@chainlink/contracts/src/v0.8/interfaces/VRFCoordinatorV2Interface.sol":{"ast":{"absolutePath":"@chainlink/contracts/src/v0.8/interfaces/VRFCoordinatorV2Interface.sol","exportedSymbols":{"VRFCoordinatorV2Interface":[199]},"id":200,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":105,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"32:23:2"},{"abstract":false,"baseContracts":[],"canonicalName":"VRFCoordinatorV2Interface","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":199,"linearizedBaseContracts":[199],"name":"VRFCoordinatorV2Interface","nameLocation":"67:25:2","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":106,"nodeType":"StructuredDocumentation","src":"97:267:2","text":" @notice Get configuration relevant for making requests\n @return minimumRequestConfirmations global min for request confirmations\n @return maxGasLimit global max for request gas limit\n @return s_provingKeyHashes list of registered key hashes"},"functionSelector":"00012291","id":116,"implemented":false,"kind":"function","modifiers":[],"name":"getRequestConfig","nameLocation":"376:16:2","nodeType":"FunctionDefinition","parameters":{"id":107,"nodeType":"ParameterList","parameters":[],"src":"392:2:2"},"returnParameters":{"id":115,"nodeType":"ParameterList","parameters":[{"constant":false,"id":109,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":116,"src":"437:6:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":108,"name":"uint16","nodeType":"ElementaryTypeName","src":"437:6:2","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":111,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":116,"src":"451:6:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":110,"name":"uint32","nodeType":"ElementaryTypeName","src":"451:6:2","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":114,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":116,"src":"465:16:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":112,"name":"bytes32","nodeType":"ElementaryTypeName","src":"465:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":113,"nodeType":"ArrayTypeName","src":"465:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"429:58:2"},"scope":199,"src":"367:121:2","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":117,"nodeType":"StructuredDocumentation","src":"492:1511:2","text":" @notice Request a set of random words.\n @param keyHash - Corresponds to a particular oracle job which uses\n that key for generating the VRF proof. Different keyHash's have different gas price\n ceilings, so you can select a specific one to bound your maximum per request cost.\n @param subId  - The ID of the VRF subscription. Must be funded\n with the minimum subscription balance required for the selected keyHash.\n @param minimumRequestConfirmations - How many blocks you'd like the\n oracle to wait before responding to the request. See SECURITY CONSIDERATIONS\n for why you may want to request more. The acceptable range is\n [minimumRequestBlockConfirmations, 200].\n @param callbackGasLimit - How much gas you'd like to receive in your\n fulfillRandomWords callback. Note that gasleft() inside fulfillRandomWords\n may be slightly less than this amount because of gas used calling the function\n (argument decoding etc.), so you may need to request slightly more than you expect\n to have inside fulfillRandomWords. The acceptable range is\n [0, maxGasLimit]\n @param numWords - The number of uint256 random values you'd like to receive\n in your fulfillRandomWords callback. Note these numbers are expanded in a\n secure way by the VRFCoordinator from a single random value supplied by the oracle.\n @return requestId - A unique identifier of the request. Can be used to match\n a request to a response in fulfillRandomWords."},"functionSelector":"5d3b1d30","id":132,"implemented":false,"kind":"function","modifiers":[],"name":"requestRandomWords","nameLocation":"2015:18:2","nodeType":"FunctionDefinition","parameters":{"id":128,"nodeType":"ParameterList","parameters":[{"constant":false,"id":119,"mutability":"mutable","name":"keyHash","nameLocation":"2047:7:2","nodeType":"VariableDeclaration","scope":132,"src":"2039:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":118,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2039:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":121,"mutability":"mutable","name":"subId","nameLocation":"2067:5:2","nodeType":"VariableDeclaration","scope":132,"src":"2060:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":120,"name":"uint64","nodeType":"ElementaryTypeName","src":"2060:6:2","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":123,"mutability":"mutable","name":"minimumRequestConfirmations","nameLocation":"2085:27:2","nodeType":"VariableDeclaration","scope":132,"src":"2078:34:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":122,"name":"uint16","nodeType":"ElementaryTypeName","src":"2078:6:2","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":125,"mutability":"mutable","name":"callbackGasLimit","nameLocation":"2125:16:2","nodeType":"VariableDeclaration","scope":132,"src":"2118:23:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":124,"name":"uint32","nodeType":"ElementaryTypeName","src":"2118:6:2","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":127,"mutability":"mutable","name":"numWords","nameLocation":"2154:8:2","nodeType":"VariableDeclaration","scope":132,"src":"2147:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":126,"name":"uint32","nodeType":"ElementaryTypeName","src":"2147:6:2","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"2033:133:2"},"returnParameters":{"id":131,"nodeType":"ParameterList","parameters":[{"constant":false,"id":130,"mutability":"mutable","name":"requestId","nameLocation":"2193:9:2","nodeType":"VariableDeclaration","scope":132,"src":"2185:17:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":129,"name":"uint256","nodeType":"ElementaryTypeName","src":"2185:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2184:19:2"},"scope":199,"src":"2006:198:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":133,"nodeType":"StructuredDocumentation","src":"2208:384:2","text":" @notice Create a VRF subscription.\n @return subId - A unique subscription id.\n @dev You can manage the consumer set dynamically with addConsumer/removeConsumer.\n @dev Note to fund the subscription, use transferAndCall. For example\n @dev  LINKTOKEN.transferAndCall(\n @dev    address(COORDINATOR),\n @dev    amount,\n @dev    abi.encode(subId));"},"functionSelector":"a21a23e4","id":138,"implemented":false,"kind":"function","modifiers":[],"name":"createSubscription","nameLocation":"2604:18:2","nodeType":"FunctionDefinition","parameters":{"id":134,"nodeType":"ParameterList","parameters":[],"src":"2622:2:2"},"returnParameters":{"id":137,"nodeType":"ParameterList","parameters":[{"constant":false,"id":136,"mutability":"mutable","name":"subId","nameLocation":"2650:5:2","nodeType":"VariableDeclaration","scope":138,"src":"2643:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":135,"name":"uint64","nodeType":"ElementaryTypeName","src":"2643:6:2","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"2642:14:2"},"scope":199,"src":"2595:62:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":139,"nodeType":"StructuredDocumentation","src":"2661:381:2","text":" @notice Get a VRF subscription.\n @param subId - ID of the subscription\n @return balance - LINK balance of the subscription in juels.\n @return reqCount - number of requests for this subscription, determines fee tier.\n @return owner - owner of the subscription.\n @return consumers - list of consumer address which are able to use this subscription."},"functionSelector":"a47c7696","id":153,"implemented":false,"kind":"function","modifiers":[],"name":"getSubscription","nameLocation":"3054:15:2","nodeType":"FunctionDefinition","parameters":{"id":142,"nodeType":"ParameterList","parameters":[{"constant":false,"id":141,"mutability":"mutable","name":"subId","nameLocation":"3077:5:2","nodeType":"VariableDeclaration","scope":153,"src":"3070:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":140,"name":"uint64","nodeType":"ElementaryTypeName","src":"3070:6:2","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"3069:14:2"},"returnParameters":{"id":152,"nodeType":"ParameterList","parameters":[{"constant":false,"id":144,"mutability":"mutable","name":"balance","nameLocation":"3133:7:2","nodeType":"VariableDeclaration","scope":153,"src":"3126:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":143,"name":"uint96","nodeType":"ElementaryTypeName","src":"3126:6:2","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"},{"constant":false,"id":146,"mutability":"mutable","name":"reqCount","nameLocation":"3155:8:2","nodeType":"VariableDeclaration","scope":153,"src":"3148:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":145,"name":"uint64","nodeType":"ElementaryTypeName","src":"3148:6:2","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":148,"mutability":"mutable","name":"owner","nameLocation":"3179:5:2","nodeType":"VariableDeclaration","scope":153,"src":"3171:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":147,"name":"address","nodeType":"ElementaryTypeName","src":"3171:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":151,"mutability":"mutable","name":"consumers","nameLocation":"3209:9:2","nodeType":"VariableDeclaration","scope":153,"src":"3192:26:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":149,"name":"address","nodeType":"ElementaryTypeName","src":"3192:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":150,"nodeType":"ArrayTypeName","src":"3192:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"3118:106:2"},"scope":199,"src":"3045:180:2","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":154,"nodeType":"StructuredDocumentation","src":"3229:164:2","text":" @notice Request subscription owner transfer.\n @param subId - ID of the subscription\n @param newOwner - proposed new owner of the subscription"},"functionSelector":"04c357cb","id":161,"implemented":false,"kind":"function","modifiers":[],"name":"requestSubscriptionOwnerTransfer","nameLocation":"3405:32:2","nodeType":"FunctionDefinition","parameters":{"id":159,"nodeType":"ParameterList","parameters":[{"constant":false,"id":156,"mutability":"mutable","name":"subId","nameLocation":"3445:5:2","nodeType":"VariableDeclaration","scope":161,"src":"3438:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":155,"name":"uint64","nodeType":"ElementaryTypeName","src":"3438:6:2","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":158,"mutability":"mutable","name":"newOwner","nameLocation":"3460:8:2","nodeType":"VariableDeclaration","scope":161,"src":"3452:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":157,"name":"address","nodeType":"ElementaryTypeName","src":"3452:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3437:32:2"},"returnParameters":{"id":160,"nodeType":"ParameterList","parameters":[],"src":"3478:0:2"},"scope":199,"src":"3396:83:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":162,"nodeType":"StructuredDocumentation","src":"3483:212:2","text":" @notice Request subscription owner transfer.\n @param subId - ID of the subscription\n @dev will revert if original owner of subId has\n not requested that msg.sender become the new owner."},"functionSelector":"82359740","id":167,"implemented":false,"kind":"function","modifiers":[],"name":"acceptSubscriptionOwnerTransfer","nameLocation":"3707:31:2","nodeType":"FunctionDefinition","parameters":{"id":165,"nodeType":"ParameterList","parameters":[{"constant":false,"id":164,"mutability":"mutable","name":"subId","nameLocation":"3746:5:2","nodeType":"VariableDeclaration","scope":167,"src":"3739:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":163,"name":"uint64","nodeType":"ElementaryTypeName","src":"3739:6:2","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"3738:14:2"},"returnParameters":{"id":166,"nodeType":"ParameterList","parameters":[],"src":"3761:0:2"},"scope":199,"src":"3698:64:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":168,"nodeType":"StructuredDocumentation","src":"3766:170:2","text":" @notice Add a consumer to a VRF subscription.\n @param subId - ID of the subscription\n @param consumer - New consumer which can use the subscription"},"functionSelector":"7341c10c","id":175,"implemented":false,"kind":"function","modifiers":[],"name":"addConsumer","nameLocation":"3948:11:2","nodeType":"FunctionDefinition","parameters":{"id":173,"nodeType":"ParameterList","parameters":[{"constant":false,"id":170,"mutability":"mutable","name":"subId","nameLocation":"3967:5:2","nodeType":"VariableDeclaration","scope":175,"src":"3960:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":169,"name":"uint64","nodeType":"ElementaryTypeName","src":"3960:6:2","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":172,"mutability":"mutable","name":"consumer","nameLocation":"3982:8:2","nodeType":"VariableDeclaration","scope":175,"src":"3974:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":171,"name":"address","nodeType":"ElementaryTypeName","src":"3974:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3959:32:2"},"returnParameters":{"id":174,"nodeType":"ParameterList","parameters":[],"src":"4000:0:2"},"scope":199,"src":"3939:62:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":176,"nodeType":"StructuredDocumentation","src":"4005:172:2","text":" @notice Remove a consumer from a VRF subscription.\n @param subId - ID of the subscription\n @param consumer - Consumer to remove from the subscription"},"functionSelector":"9f87fad7","id":183,"implemented":false,"kind":"function","modifiers":[],"name":"removeConsumer","nameLocation":"4189:14:2","nodeType":"FunctionDefinition","parameters":{"id":181,"nodeType":"ParameterList","parameters":[{"constant":false,"id":178,"mutability":"mutable","name":"subId","nameLocation":"4211:5:2","nodeType":"VariableDeclaration","scope":183,"src":"4204:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":177,"name":"uint64","nodeType":"ElementaryTypeName","src":"4204:6:2","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":180,"mutability":"mutable","name":"consumer","nameLocation":"4226:8:2","nodeType":"VariableDeclaration","scope":183,"src":"4218:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":179,"name":"address","nodeType":"ElementaryTypeName","src":"4218:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4203:32:2"},"returnParameters":{"id":182,"nodeType":"ParameterList","parameters":[],"src":"4244:0:2"},"scope":199,"src":"4180:65:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":184,"nodeType":"StructuredDocumentation","src":"4249:140:2","text":" @notice Cancel a subscription\n @param subId - ID of the subscription\n @param to - Where to send the remaining LINK to"},"functionSelector":"d7ae1d30","id":191,"implemented":false,"kind":"function","modifiers":[],"name":"cancelSubscription","nameLocation":"4401:18:2","nodeType":"FunctionDefinition","parameters":{"id":189,"nodeType":"ParameterList","parameters":[{"constant":false,"id":186,"mutability":"mutable","name":"subId","nameLocation":"4427:5:2","nodeType":"VariableDeclaration","scope":191,"src":"4420:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":185,"name":"uint64","nodeType":"ElementaryTypeName","src":"4420:6:2","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":188,"mutability":"mutable","name":"to","nameLocation":"4442:2:2","nodeType":"VariableDeclaration","scope":191,"src":"4434:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":187,"name":"address","nodeType":"ElementaryTypeName","src":"4434:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4419:26:2"},"returnParameters":{"id":190,"nodeType":"ParameterList","parameters":[],"src":"4454:0:2"},"scope":199,"src":"4392:63:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"e82ad7d4","id":198,"implemented":false,"kind":"function","modifiers":[],"name":"pendingRequestExists","nameLocation":"4760:20:2","nodeType":"FunctionDefinition","parameters":{"id":194,"nodeType":"ParameterList","parameters":[{"constant":false,"id":193,"mutability":"mutable","name":"subId","nameLocation":"4788:5:2","nodeType":"VariableDeclaration","scope":198,"src":"4781:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":192,"name":"uint64","nodeType":"ElementaryTypeName","src":"4781:6:2","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"4780:14:2"},"returnParameters":{"id":197,"nodeType":"ParameterList","parameters":[{"constant":false,"id":196,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":198,"src":"4818:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":195,"name":"bool","nodeType":"ElementaryTypeName","src":"4818:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4817:6:2"},"scope":199,"src":"4751:73:2","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":200,"src":"57:4769:2","usedErrors":[]}],"src":"32:4795:2"},"id":2},"contracts/ClaimsProcessor.sol":{"ast":{"absolutePath":"contracts/ClaimsProcessor.sol","exportedSymbols":{"AggregatorV3Interface":[103],"ClaimsProcessor":[1242],"PayoutManager":[1690],"PolicyRegistry":[2136],"VRFConsumerBaseV2":[57],"VRFCoordinatorV2Interface":[199]},"id":1243,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":201,"literals":["solidity","^","0.8",".19"],"nodeType":"PragmaDirective","src":"32:24:3"},{"absolutePath":"@chainlink/contracts/src/v0.8/interfaces/VRFCoordinatorV2Interface.sol","file":"@chainlink/contracts/src/v0.8/interfaces/VRFCoordinatorV2Interface.sol","id":202,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1243,"sourceUnit":200,"src":"58:80:3","symbolAliases":[],"unitAlias":""},{"absolutePath":"@chainlink/contracts/src/v0.8/VRFConsumerBaseV2.sol","file":"@chainlink/contracts/src/v0.8/VRFConsumerBaseV2.sol","id":203,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1243,"sourceUnit":58,"src":"139:61:3","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/PolicyRegistry.sol","file":"./PolicyRegistry.sol","id":204,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1243,"sourceUnit":2137,"src":"201:30:3","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/PayoutManager.sol","file":"./PayoutManager.sol","id":205,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1243,"sourceUnit":1691,"src":"232:29:3","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":207,"name":"VRFConsumerBaseV2","nameLocations":["416:17:3"],"nodeType":"IdentifierPath","referencedDeclaration":57,"src":"416:17:3"},"id":208,"nodeType":"InheritanceSpecifier","src":"416:17:3"}],"canonicalName":"ClaimsProcessor","contractDependencies":[],"contractKind":"contract","documentation":{"id":206,"nodeType":"StructuredDocumentation","src":"263:124:3","text":" @title ClaimsProcessor\n @dev Handles claim submissions, AI analysis, and reviewer selection using Chainlink VRF"},"fullyImplemented":true,"id":1242,"linearizedBaseContracts":[1242,57],"name":"ClaimsProcessor","nameLocation":"397:15:3","nodeType":"ContractDefinition","nodes":[{"canonicalName":"ClaimsProcessor.Claim","id":241,"members":[{"constant":false,"id":210,"mutability":"mutable","name":"claimId","nameLocation":"471:7:3","nodeType":"VariableDeclaration","scope":241,"src":"463:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":209,"name":"uint256","nodeType":"ElementaryTypeName","src":"463:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":212,"mutability":"mutable","name":"policyId","nameLocation":"496:8:3","nodeType":"VariableDeclaration","scope":241,"src":"488:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":211,"name":"uint256","nodeType":"ElementaryTypeName","src":"488:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":214,"mutability":"mutable","name":"claimant","nameLocation":"522:8:3","nodeType":"VariableDeclaration","scope":241,"src":"514:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":213,"name":"address","nodeType":"ElementaryTypeName","src":"514:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":216,"mutability":"mutable","name":"description","nameLocation":"547:11:3","nodeType":"VariableDeclaration","scope":241,"src":"540:18:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":215,"name":"string","nodeType":"ElementaryTypeName","src":"540:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":219,"mutability":"mutable","name":"evidenceHashes","nameLocation":"577:14:3","nodeType":"VariableDeclaration","scope":241,"src":"568:23:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":217,"name":"string","nodeType":"ElementaryTypeName","src":"568:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":218,"nodeType":"ArrayTypeName","src":"568:8:3","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"},{"constant":false,"id":221,"mutability":"mutable","name":"timestamp","nameLocation":"624:9:3","nodeType":"VariableDeclaration","scope":241,"src":"616:17:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":220,"name":"uint256","nodeType":"ElementaryTypeName","src":"616:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":224,"mutability":"mutable","name":"status","nameLocation":"655:6:3","nodeType":"VariableDeclaration","scope":241,"src":"643:18:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_ClaimStatus_$248","typeString":"enum ClaimsProcessor.ClaimStatus"},"typeName":{"id":223,"nodeType":"UserDefinedTypeName","pathNode":{"id":222,"name":"ClaimStatus","nameLocations":["643:11:3"],"nodeType":"IdentifierPath","referencedDeclaration":248,"src":"643:11:3"},"referencedDeclaration":248,"src":"643:11:3","typeDescriptions":{"typeIdentifier":"t_enum$_ClaimStatus_$248","typeString":"enum ClaimsProcessor.ClaimStatus"}},"visibility":"internal"},{"constant":false,"id":226,"mutability":"mutable","name":"claimType","nameLocation":"717:9:3","nodeType":"VariableDeclaration","scope":241,"src":"711:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":225,"name":"uint8","nodeType":"ElementaryTypeName","src":"711:5:3","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":228,"mutability":"mutable","name":"severity","nameLocation":"780:8:3","nodeType":"VariableDeclaration","scope":241,"src":"774:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":227,"name":"uint8","nodeType":"ElementaryTypeName","src":"774:5:3","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":230,"mutability":"mutable","name":"fraudRisk","nameLocation":"818:9:3","nodeType":"VariableDeclaration","scope":241,"src":"812:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":229,"name":"uint8","nodeType":"ElementaryTypeName","src":"812:5:3","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":232,"mutability":"mutable","name":"recommendedPayout","nameLocation":"865:17:3","nodeType":"VariableDeclaration","scope":241,"src":"857:25:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":231,"name":"uint256","nodeType":"ElementaryTypeName","src":"857:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":234,"mutability":"mutable","name":"finalPayout","nameLocation":"909:11:3","nodeType":"VariableDeclaration","scope":241,"src":"901:19:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":233,"name":"uint256","nodeType":"ElementaryTypeName","src":"901:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":236,"mutability":"mutable","name":"processedAt","nameLocation":"938:11:3","nodeType":"VariableDeclaration","scope":241,"src":"930:19:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":235,"name":"uint256","nodeType":"ElementaryTypeName","src":"930:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":238,"mutability":"mutable","name":"requiresHumanReview","nameLocation":"964:19:3","nodeType":"VariableDeclaration","scope":241,"src":"959:24:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":237,"name":"bool","nodeType":"ElementaryTypeName","src":"959:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":240,"mutability":"mutable","name":"assignedReviewer","nameLocation":"1001:16:3","nodeType":"VariableDeclaration","scope":241,"src":"993:24:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":239,"name":"address","nodeType":"ElementaryTypeName","src":"993:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"name":"Claim","nameLocation":"447:5:3","nodeType":"StructDefinition","scope":1242,"src":"440:584:3","visibility":"public"},{"canonicalName":"ClaimsProcessor.ClaimStatus","id":248,"members":[{"id":242,"name":"Submitted","nameLocation":"1061:9:3","nodeType":"EnumValue","src":"1061:9:3"},{"id":243,"name":"AIAnalyzed","nameLocation":"1080:10:3","nodeType":"EnumValue","src":"1080:10:3"},{"id":244,"name":"UnderReview","nameLocation":"1100:11:3","nodeType":"EnumValue","src":"1100:11:3"},{"id":245,"name":"Approved","nameLocation":"1121:8:3","nodeType":"EnumValue","src":"1121:8:3"},{"id":246,"name":"Rejected","nameLocation":"1139:8:3","nodeType":"EnumValue","src":"1139:8:3"},{"id":247,"name":"Paid","nameLocation":"1157:4:3","nodeType":"EnumValue","src":"1157:4:3"}],"name":"ClaimStatus","nameLocation":"1039:11:3","nodeType":"EnumDefinition","src":"1034:133:3"},{"constant":false,"functionSelector":"a888c2cd","id":253,"mutability":"mutable","name":"claims","nameLocation":"1210:6:3","nodeType":"VariableDeclaration","scope":1242,"src":"1177:39:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Claim_$241_storage_$","typeString":"mapping(uint256 => struct ClaimsProcessor.Claim)"},"typeName":{"id":252,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":249,"name":"uint256","nodeType":"ElementaryTypeName","src":"1185:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"1177:25:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Claim_$241_storage_$","typeString":"mapping(uint256 => struct ClaimsProcessor.Claim)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":251,"nodeType":"UserDefinedTypeName","pathNode":{"id":250,"name":"Claim","nameLocations":["1196:5:3"],"nodeType":"IdentifierPath","referencedDeclaration":241,"src":"1196:5:3"},"referencedDeclaration":241,"src":"1196:5:3","typeDescriptions":{"typeIdentifier":"t_struct$_Claim_$241_storage_ptr","typeString":"struct ClaimsProcessor.Claim"}}},"visibility":"public"},{"constant":false,"functionSelector":"b11b1d76","id":257,"mutability":"mutable","name":"vrfRequestToClaim","nameLocation":"1257:17:3","nodeType":"VariableDeclaration","scope":1242,"src":"1222:52:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"},"typeName":{"id":256,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":254,"name":"uint256","nodeType":"ElementaryTypeName","src":"1230:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"1222:27:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":255,"name":"uint256","nodeType":"ElementaryTypeName","src":"1241:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"public"},{"constant":false,"functionSelector":"f7cbb1b2","id":261,"mutability":"mutable","name":"reviewers","nameLocation":"1342:9:3","nodeType":"VariableDeclaration","scope":1242,"src":"1310:41:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"typeName":{"id":260,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":258,"name":"address","nodeType":"ElementaryTypeName","src":"1318:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1310:24:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":259,"name":"bool","nodeType":"ElementaryTypeName","src":"1329:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}},"visibility":"public"},{"constant":false,"functionSelector":"5aad00d6","id":264,"mutability":"mutable","name":"activeReviewers","nameLocation":"1404:15:3","nodeType":"VariableDeclaration","scope":1242,"src":"1387:32:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[]"},"typeName":{"baseType":{"id":262,"name":"address","nodeType":"ElementaryTypeName","src":"1387:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":263,"nodeType":"ArrayTypeName","src":"1387:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"public"},{"constant":false,"functionSelector":"a0021cf1","id":267,"mutability":"mutable","name":"nextClaimId","nameLocation":"1473:11:3","nodeType":"VariableDeclaration","scope":1242,"src":"1458:30:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":265,"name":"uint256","nodeType":"ElementaryTypeName","src":"1458:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"31","id":266,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1487:1:3","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"visibility":"public"},{"constant":false,"functionSelector":"a3e56fa8","id":270,"mutability":"mutable","name":"vrfCoordinator","nameLocation":"1527:14:3","nodeType":"VariableDeclaration","scope":1242,"src":"1494:47:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_VRFCoordinatorV2Interface_$199","typeString":"contract VRFCoordinatorV2Interface"},"typeName":{"id":269,"nodeType":"UserDefinedTypeName","pathNode":{"id":268,"name":"VRFCoordinatorV2Interface","nameLocations":["1494:25:3"],"nodeType":"IdentifierPath","referencedDeclaration":199,"src":"1494:25:3"},"referencedDeclaration":199,"src":"1494:25:3","typeDescriptions":{"typeIdentifier":"t_contract$_VRFCoordinatorV2Interface_$199","typeString":"contract VRFCoordinatorV2Interface"}},"visibility":"public"},{"constant":false,"functionSelector":"ed647d21","id":272,"mutability":"mutable","name":"vrfSubscriptionId","nameLocation":"1561:17:3","nodeType":"VariableDeclaration","scope":1242,"src":"1547:31:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":271,"name":"uint64","nodeType":"ElementaryTypeName","src":"1547:6:3","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"public"},{"constant":false,"functionSelector":"041d443e","id":274,"mutability":"mutable","name":"vrfKeyHash","nameLocation":"1599:10:3","nodeType":"VariableDeclaration","scope":1242,"src":"1584:25:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":273,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1584:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"public"},{"constant":false,"functionSelector":"3b7ed734","id":277,"mutability":"mutable","name":"vrfCallbackGasLimit","nameLocation":"1629:19:3","nodeType":"VariableDeclaration","scope":1242,"src":"1615:42:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":275,"name":"uint32","nodeType":"ElementaryTypeName","src":"1615:6:3","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"value":{"hexValue":"323030303030","id":276,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1651:6:3","typeDescriptions":{"typeIdentifier":"t_rational_200000_by_1","typeString":"int_const 200000"},"value":"200000"},"visibility":"public"},{"constant":false,"functionSelector":"598bc486","id":280,"mutability":"mutable","name":"vrfRequestConfirmations","nameLocation":"1677:23:3","nodeType":"VariableDeclaration","scope":1242,"src":"1663:41:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":278,"name":"uint16","nodeType":"ElementaryTypeName","src":"1663:6:3","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"value":{"hexValue":"33","id":279,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1703:1:3","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"visibility":"public"},{"constant":false,"functionSelector":"7ccfd7fc","id":283,"mutability":"mutable","name":"numWords","nameLocation":"1724:8:3","nodeType":"VariableDeclaration","scope":1242,"src":"1710:26:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":281,"name":"uint32","nodeType":"ElementaryTypeName","src":"1710:6:3","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"value":{"hexValue":"31","id":282,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1735:1:3","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"visibility":"public"},{"constant":false,"functionSelector":"1c4dd7d0","id":285,"mutability":"mutable","name":"policyRegistry","nameLocation":"1762:14:3","nodeType":"VariableDeclaration","scope":1242,"src":"1747:29:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":284,"name":"address","nodeType":"ElementaryTypeName","src":"1747:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"constant":false,"functionSelector":"3083a8e3","id":287,"mutability":"mutable","name":"payoutManager","nameLocation":"1805:13:3","nodeType":"VariableDeclaration","scope":1242,"src":"1782:36:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":286,"name":"address","nodeType":"ElementaryTypeName","src":"1782:15:3","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"public"},{"constant":false,"functionSelector":"31b221cd","id":289,"mutability":"mutable","name":"aiOracle","nameLocation":"1839:8:3","nodeType":"VariableDeclaration","scope":1242,"src":"1824:23:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":288,"name":"address","nodeType":"ElementaryTypeName","src":"1824:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"constant":false,"functionSelector":"f851a440","id":291,"mutability":"mutable","name":"admin","nameLocation":"1912:5:3","nodeType":"VariableDeclaration","scope":1242,"src":"1897:20:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":290,"name":"address","nodeType":"ElementaryTypeName","src":"1897:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"constant":false,"functionSelector":"54edb3a0","id":294,"mutability":"mutable","name":"autoApproveThreshold","nameLocation":"1959:20:3","nodeType":"VariableDeclaration","scope":1242,"src":"1946:38:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":292,"name":"uint8","nodeType":"ElementaryTypeName","src":"1946:5:3","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"value":{"hexValue":"3230","id":293,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1982:2:3","typeDescriptions":{"typeIdentifier":"t_rational_20_by_1","typeString":"int_const 20"},"value":"20"},"visibility":"public"},{"constant":false,"functionSelector":"e456c58a","id":297,"mutability":"mutable","name":"autoRejectThreshold","nameLocation":"2037:19:3","nodeType":"VariableDeclaration","scope":1242,"src":"2024:37:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":295,"name":"uint8","nodeType":"ElementaryTypeName","src":"2024:5:3","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"value":{"hexValue":"3730","id":296,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2059:2:3","typeDescriptions":{"typeIdentifier":"t_rational_70_by_1","typeString":"int_const 70"},"value":"70"},"visibility":"public"},{"anonymous":false,"eventSelector":"9fe11e531030a058803617055e27f9f4768236e4322e13b9c4c09f4338e23a68","id":305,"name":"ClaimSubmitted","nameLocation":"2111:14:3","nodeType":"EventDefinition","parameters":{"id":304,"nodeType":"ParameterList","parameters":[{"constant":false,"id":299,"indexed":true,"mutability":"mutable","name":"claimId","nameLocation":"2142:7:3","nodeType":"VariableDeclaration","scope":305,"src":"2126:23:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":298,"name":"uint256","nodeType":"ElementaryTypeName","src":"2126:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":301,"indexed":true,"mutability":"mutable","name":"policyId","nameLocation":"2167:8:3","nodeType":"VariableDeclaration","scope":305,"src":"2151:24:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":300,"name":"uint256","nodeType":"ElementaryTypeName","src":"2151:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":303,"indexed":true,"mutability":"mutable","name":"claimant","nameLocation":"2193:8:3","nodeType":"VariableDeclaration","scope":305,"src":"2177:24:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":302,"name":"address","nodeType":"ElementaryTypeName","src":"2177:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2125:77:3"},"src":"2105:98:3"},{"anonymous":false,"eventSelector":"1d3aa49336afc0101ae504a343f9ab660f79125900c57654be752bb099b2da7d","id":309,"name":"AIAnalysisReceived","nameLocation":"2214:18:3","nodeType":"EventDefinition","parameters":{"id":308,"nodeType":"ParameterList","parameters":[{"constant":false,"id":307,"indexed":true,"mutability":"mutable","name":"claimId","nameLocation":"2249:7:3","nodeType":"VariableDeclaration","scope":309,"src":"2233:23:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":306,"name":"uint256","nodeType":"ElementaryTypeName","src":"2233:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2232:25:3"},"src":"2208:50:3"},{"anonymous":false,"eventSelector":"bc1f3daf62009283f8f2078bc45883e8dbb3f415bc325829ce38ece15b5f8990","id":315,"name":"ReviewerAssigned","nameLocation":"2269:16:3","nodeType":"EventDefinition","parameters":{"id":314,"nodeType":"ParameterList","parameters":[{"constant":false,"id":311,"indexed":true,"mutability":"mutable","name":"claimId","nameLocation":"2302:7:3","nodeType":"VariableDeclaration","scope":315,"src":"2286:23:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":310,"name":"uint256","nodeType":"ElementaryTypeName","src":"2286:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":313,"indexed":true,"mutability":"mutable","name":"reviewer","nameLocation":"2327:8:3","nodeType":"VariableDeclaration","scope":315,"src":"2311:24:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":312,"name":"address","nodeType":"ElementaryTypeName","src":"2311:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2285:51:3"},"src":"2263:74:3"},{"anonymous":false,"eventSelector":"638d892b8630b775fea5d7a52b209e8bfa1d90c32b57cd37208ac84d4bcd6dcb","id":321,"name":"ClaimApproved","nameLocation":"2348:13:3","nodeType":"EventDefinition","parameters":{"id":320,"nodeType":"ParameterList","parameters":[{"constant":false,"id":317,"indexed":true,"mutability":"mutable","name":"claimId","nameLocation":"2378:7:3","nodeType":"VariableDeclaration","scope":321,"src":"2362:23:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":316,"name":"uint256","nodeType":"ElementaryTypeName","src":"2362:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":319,"indexed":false,"mutability":"mutable","name":"payout","nameLocation":"2395:6:3","nodeType":"VariableDeclaration","scope":321,"src":"2387:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":318,"name":"uint256","nodeType":"ElementaryTypeName","src":"2387:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2361:41:3"},"src":"2342:61:3"},{"anonymous":false,"eventSelector":"43cc3d080e025c67c26d62b18bd442511dc9c76c8aa3f48cc0e8f456173e61f1","id":327,"name":"ClaimRejected","nameLocation":"2414:13:3","nodeType":"EventDefinition","parameters":{"id":326,"nodeType":"ParameterList","parameters":[{"constant":false,"id":323,"indexed":true,"mutability":"mutable","name":"claimId","nameLocation":"2444:7:3","nodeType":"VariableDeclaration","scope":327,"src":"2428:23:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":322,"name":"uint256","nodeType":"ElementaryTypeName","src":"2428:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":325,"indexed":false,"mutability":"mutable","name":"reason","nameLocation":"2460:6:3","nodeType":"VariableDeclaration","scope":327,"src":"2453:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":324,"name":"string","nodeType":"ElementaryTypeName","src":"2453:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2427:40:3"},"src":"2408:60:3"},{"anonymous":false,"eventSelector":"633ff17603f543fb14610394a700602d41c32a3eded36897c06ec7789e443650","id":331,"name":"ClaimPaid","nameLocation":"2479:9:3","nodeType":"EventDefinition","parameters":{"id":330,"nodeType":"ParameterList","parameters":[{"constant":false,"id":329,"indexed":true,"mutability":"mutable","name":"claimId","nameLocation":"2505:7:3","nodeType":"VariableDeclaration","scope":331,"src":"2489:23:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":328,"name":"uint256","nodeType":"ElementaryTypeName","src":"2489:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2488:25:3"},"src":"2473:41:3"},{"body":{"id":342,"nodeType":"Block","src":"2545:70:3","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":337,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":334,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2563:3:3","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":335,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2567:6:3","memberName":"sender","nodeType":"MemberAccess","src":"2563:10:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":336,"name":"admin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":291,"src":"2577:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2563:19:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f6e6c792061646d696e","id":338,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2584:12:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_519e47aa5cfea80d7d23bd065db30ac1713503a8d5ea05db2d0c02f784e636db","typeString":"literal_string \"Only admin\""},"value":"Only admin"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_519e47aa5cfea80d7d23bd065db30ac1713503a8d5ea05db2d0c02f784e636db","typeString":"literal_string \"Only admin\""}],"id":333,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2555:7:3","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":339,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2555:42:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":340,"nodeType":"ExpressionStatement","src":"2555:42:3"},{"id":341,"nodeType":"PlaceholderStatement","src":"2607:1:3"}]},"id":343,"name":"onlyAdmin","nameLocation":"2533:9:3","nodeType":"ModifierDefinition","parameters":{"id":332,"nodeType":"ParameterList","parameters":[],"src":"2542:2:3"},"src":"2524:91:3","virtual":false,"visibility":"internal"},{"body":{"id":354,"nodeType":"Block","src":"2649:77:3","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":349,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":346,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2667:3:3","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":347,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2671:6:3","memberName":"sender","nodeType":"MemberAccess","src":"2667:10:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":348,"name":"aiOracle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":289,"src":"2681:8:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2667:22:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f6e6c79204149206f7261636c65","id":350,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2691:16:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_3f199309a87b88da70ddb2cf898ec0cd16e4978e20e1f298426a4c3662aaa078","typeString":"literal_string \"Only AI oracle\""},"value":"Only AI oracle"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_3f199309a87b88da70ddb2cf898ec0cd16e4978e20e1f298426a4c3662aaa078","typeString":"literal_string \"Only AI oracle\""}],"id":345,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2659:7:3","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":351,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2659:49:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":352,"nodeType":"ExpressionStatement","src":"2659:49:3"},{"id":353,"nodeType":"PlaceholderStatement","src":"2718:1:3"}]},"id":355,"name":"onlyAIOracle","nameLocation":"2634:12:3","nodeType":"ModifierDefinition","parameters":{"id":344,"nodeType":"ParameterList","parameters":[],"src":"2646:2:3"},"src":"2625:101:3","virtual":false,"visibility":"internal"},{"body":{"id":366,"nodeType":"Block","src":"2760:75:3","statements":[{"expression":{"arguments":[{"baseExpression":{"id":358,"name":"reviewers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":261,"src":"2778:9:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":361,"indexExpression":{"expression":{"id":359,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2788:3:3","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":360,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2792:6:3","memberName":"sender","nodeType":"MemberAccess","src":"2788:10:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2778:21:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f6e6c79207265766965776572","id":362,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2801:15:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_0e8c02ace54929a667ad1f56a7dbdaf78b7c8fd6f652a8eeb018522108c00f5b","typeString":"literal_string \"Only reviewer\""},"value":"Only reviewer"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_0e8c02ace54929a667ad1f56a7dbdaf78b7c8fd6f652a8eeb018522108c00f5b","typeString":"literal_string \"Only reviewer\""}],"id":357,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2770:7:3","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":363,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2770:47:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":364,"nodeType":"ExpressionStatement","src":"2770:47:3"},{"id":365,"nodeType":"PlaceholderStatement","src":"2827:1:3"}]},"id":367,"name":"onlyReviewer","nameLocation":"2745:12:3","nodeType":"ModifierDefinition","parameters":{"id":356,"nodeType":"ParameterList","parameters":[],"src":"2757:2:3"},"src":"2736:99:3","virtual":false,"visibility":"internal"},{"body":{"id":410,"nodeType":"Block","src":"3314:293:3","statements":[{"expression":{"id":386,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":382,"name":"vrfCoordinator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":270,"src":"3324:14:3","typeDescriptions":{"typeIdentifier":"t_contract$_VRFCoordinatorV2Interface_$199","typeString":"contract VRFCoordinatorV2Interface"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":384,"name":"_vrfCoordinator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":370,"src":"3367:15:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":383,"name":"VRFCoordinatorV2Interface","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":199,"src":"3341:25:3","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_VRFCoordinatorV2Interface_$199_$","typeString":"type(contract VRFCoordinatorV2Interface)"}},"id":385,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3341:42:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_VRFCoordinatorV2Interface_$199","typeString":"contract VRFCoordinatorV2Interface"}},"src":"3324:59:3","typeDescriptions":{"typeIdentifier":"t_contract$_VRFCoordinatorV2Interface_$199","typeString":"contract VRFCoordinatorV2Interface"}},"id":387,"nodeType":"ExpressionStatement","src":"3324:59:3"},{"expression":{"id":390,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":388,"name":"vrfKeyHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":274,"src":"3393:10:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":389,"name":"_keyHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":372,"src":"3406:8:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3393:21:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":391,"nodeType":"ExpressionStatement","src":"3393:21:3"},{"expression":{"id":394,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":392,"name":"vrfSubscriptionId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":272,"src":"3424:17:3","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":393,"name":"_subscriptionId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":374,"src":"3444:15:3","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"3424:35:3","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"id":395,"nodeType":"ExpressionStatement","src":"3424:35:3"},{"expression":{"id":398,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":396,"name":"policyRegistry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":285,"src":"3469:14:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":397,"name":"_policyRegistry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":376,"src":"3486:15:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3469:32:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":399,"nodeType":"ExpressionStatement","src":"3469:32:3"},{"expression":{"id":403,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":400,"name":"admin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":291,"src":"3511:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":401,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3519:3:3","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":402,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3523:6:3","memberName":"sender","nodeType":"MemberAccess","src":"3519:10:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3511:18:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":404,"nodeType":"ExpressionStatement","src":"3511:18:3"},{"expression":{"id":408,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":405,"name":"aiOracle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":289,"src":"3539:8:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":406,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3550:3:3","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":407,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3554:6:3","memberName":"sender","nodeType":"MemberAccess","src":"3550:10:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3539:21:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":409,"nodeType":"ExpressionStatement","src":"3539:21:3"}]},"documentation":{"id":368,"nodeType":"StructuredDocumentation","src":"2845:287:3","text":" @dev Constructor for the ClaimsProcessor contract\n @param _vrfCoordinator Address of the VRF Coordinator\n @param _keyHash KeyHash for VRF\n @param _subscriptionId VRF subscription ID\n @param _policyRegistry Address of the PolicyRegistry contract"},"id":411,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"id":379,"name":"_vrfCoordinator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":370,"src":"3297:15:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":380,"kind":"baseConstructorSpecifier","modifierName":{"id":378,"name":"VRFConsumerBaseV2","nameLocations":["3279:17:3"],"nodeType":"IdentifierPath","referencedDeclaration":57,"src":"3279:17:3"},"nodeType":"ModifierInvocation","src":"3279:34:3"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":377,"nodeType":"ParameterList","parameters":[{"constant":false,"id":370,"mutability":"mutable","name":"_vrfCoordinator","nameLocation":"3166:15:3","nodeType":"VariableDeclaration","scope":411,"src":"3158:23:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":369,"name":"address","nodeType":"ElementaryTypeName","src":"3158:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":372,"mutability":"mutable","name":"_keyHash","nameLocation":"3199:8:3","nodeType":"VariableDeclaration","scope":411,"src":"3191:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":371,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3191:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":374,"mutability":"mutable","name":"_subscriptionId","nameLocation":"3224:15:3","nodeType":"VariableDeclaration","scope":411,"src":"3217:22:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":373,"name":"uint64","nodeType":"ElementaryTypeName","src":"3217:6:3","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":376,"mutability":"mutable","name":"_policyRegistry","nameLocation":"3257:15:3","nodeType":"VariableDeclaration","scope":411,"src":"3249:23:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":375,"name":"address","nodeType":"ElementaryTypeName","src":"3249:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3148:130:3"},"returnParameters":{"id":381,"nodeType":"ParameterList","parameters":[],"src":"3314:0:3"},"scope":1242,"src":"3137:470:3","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":426,"nodeType":"Block","src":"3813:56:3","statements":[{"expression":{"id":424,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":419,"name":"payoutManager","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":287,"src":"3823:13:3","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":422,"name":"_payoutManager","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":414,"src":"3847:14:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":421,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3839:8:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_payable_$","typeString":"type(address payable)"},"typeName":{"id":420,"name":"address","nodeType":"ElementaryTypeName","src":"3839:8:3","stateMutability":"payable","typeDescriptions":{}}},"id":423,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3839:23:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"src":"3823:39:3","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":425,"nodeType":"ExpressionStatement","src":"3823:39:3"}]},"documentation":{"id":412,"nodeType":"StructuredDocumentation","src":"3617:122:3","text":" @dev Sets the payout manager address\n @param _payoutManager Address of the PayoutManager contract"},"functionSelector":"7181896f","id":427,"implemented":true,"kind":"function","modifiers":[{"id":417,"kind":"modifierInvocation","modifierName":{"id":416,"name":"onlyAdmin","nameLocations":["3803:9:3"],"nodeType":"IdentifierPath","referencedDeclaration":343,"src":"3803:9:3"},"nodeType":"ModifierInvocation","src":"3803:9:3"}],"name":"setPayoutManager","nameLocation":"3753:16:3","nodeType":"FunctionDefinition","parameters":{"id":415,"nodeType":"ParameterList","parameters":[{"constant":false,"id":414,"mutability":"mutable","name":"_payoutManager","nameLocation":"3778:14:3","nodeType":"VariableDeclaration","scope":427,"src":"3770:22:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":413,"name":"address","nodeType":"ElementaryTypeName","src":"3770:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3769:24:3"},"returnParameters":{"id":418,"nodeType":"ParameterList","parameters":[],"src":"3813:0:3"},"scope":1242,"src":"3744:125:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":439,"nodeType":"Block","src":"4042:37:3","statements":[{"expression":{"id":437,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":435,"name":"aiOracle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":289,"src":"4052:8:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":436,"name":"_aiOracle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":430,"src":"4063:9:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4052:20:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":438,"nodeType":"ExpressionStatement","src":"4052:20:3"}]},"documentation":{"id":428,"nodeType":"StructuredDocumentation","src":"3879:99:3","text":" @dev Sets the AI Oracle address\n @param _aiOracle Address of the AI Oracle"},"functionSelector":"1aa632b3","id":440,"implemented":true,"kind":"function","modifiers":[{"id":433,"kind":"modifierInvocation","modifierName":{"id":432,"name":"onlyAdmin","nameLocations":["4032:9:3"],"nodeType":"IdentifierPath","referencedDeclaration":343,"src":"4032:9:3"},"nodeType":"ModifierInvocation","src":"4032:9:3"}],"name":"setAIOracle","nameLocation":"3992:11:3","nodeType":"FunctionDefinition","parameters":{"id":431,"nodeType":"ParameterList","parameters":[{"constant":false,"id":430,"mutability":"mutable","name":"_aiOracle","nameLocation":"4012:9:3","nodeType":"VariableDeclaration","scope":440,"src":"4004:17:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":429,"name":"address","nodeType":"ElementaryTypeName","src":"4004:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4003:19:3"},"returnParameters":{"id":434,"nodeType":"ParameterList","parameters":[],"src":"4042:0:3"},"scope":1242,"src":"3983:96:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":468,"nodeType":"Block","src":"4254:147:3","statements":[{"expression":{"arguments":[{"id":452,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4272:21:3","subExpression":{"baseExpression":{"id":449,"name":"reviewers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":261,"src":"4273:9:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":451,"indexExpression":{"id":450,"name":"_reviewer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":443,"src":"4283:9:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4273:20:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416c72656164792061207265766965776572","id":453,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4295:20:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_582a331f1cf5fc30d256bc2f726d63027d709e971abe91266658cc4bbde1f033","typeString":"literal_string \"Already a reviewer\""},"value":"Already a reviewer"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_582a331f1cf5fc30d256bc2f726d63027d709e971abe91266658cc4bbde1f033","typeString":"literal_string \"Already a reviewer\""}],"id":448,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4264:7:3","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":454,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4264:52:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":455,"nodeType":"ExpressionStatement","src":"4264:52:3"},{"expression":{"id":460,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":456,"name":"reviewers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":261,"src":"4326:9:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":458,"indexExpression":{"id":457,"name":"_reviewer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":443,"src":"4336:9:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4326:20:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":459,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4349:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"4326:27:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":461,"nodeType":"ExpressionStatement","src":"4326:27:3"},{"expression":{"arguments":[{"id":465,"name":"_reviewer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":443,"src":"4384:9:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":462,"name":"activeReviewers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":264,"src":"4363:15:3","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":464,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4379:4:3","memberName":"push","nodeType":"MemberAccess","src":"4363:20:3","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$attached_to$_t_array$_t_address_$dyn_storage_ptr_$","typeString":"function (address[] storage pointer,address)"}},"id":466,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4363:31:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":467,"nodeType":"ExpressionStatement","src":"4363:31:3"}]},"documentation":{"id":441,"nodeType":"StructuredDocumentation","src":"4089:101:3","text":" @dev Adds a reviewer to the system\n @param _reviewer Address of the reviewer"},"functionSelector":"73a82b5f","id":469,"implemented":true,"kind":"function","modifiers":[{"id":446,"kind":"modifierInvocation","modifierName":{"id":445,"name":"onlyAdmin","nameLocations":["4244:9:3"],"nodeType":"IdentifierPath","referencedDeclaration":343,"src":"4244:9:3"},"nodeType":"ModifierInvocation","src":"4244:9:3"}],"name":"addReviewer","nameLocation":"4204:11:3","nodeType":"FunctionDefinition","parameters":{"id":444,"nodeType":"ParameterList","parameters":[{"constant":false,"id":443,"mutability":"mutable","name":"_reviewer","nameLocation":"4224:9:3","nodeType":"VariableDeclaration","scope":469,"src":"4216:17:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":442,"name":"address","nodeType":"ElementaryTypeName","src":"4216:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4215:19:3"},"returnParameters":{"id":447,"nodeType":"ParameterList","parameters":[],"src":"4254:0:3"},"scope":1242,"src":"4195:206:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":527,"nodeType":"Block","src":"4584:488:3","statements":[{"expression":{"arguments":[{"baseExpression":{"id":478,"name":"reviewers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":261,"src":"4602:9:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":480,"indexExpression":{"id":479,"name":"_reviewer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":472,"src":"4612:9:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4602:20:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e6f742061207265766965776572","id":481,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4624:16:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_bcc2ce772e801ec4d98470cdf9b93077659a52dc6270f1906301a0e83bf8a4e3","typeString":"literal_string \"Not a reviewer\""},"value":"Not a reviewer"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_bcc2ce772e801ec4d98470cdf9b93077659a52dc6270f1906301a0e83bf8a4e3","typeString":"literal_string \"Not a reviewer\""}],"id":477,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4594:7:3","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":482,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4594:47:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":483,"nodeType":"ExpressionStatement","src":"4594:47:3"},{"expression":{"id":488,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":484,"name":"reviewers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":261,"src":"4651:9:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":486,"indexExpression":{"id":485,"name":"_reviewer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":472,"src":"4661:9:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4651:20:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":487,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4674:5:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"4651:28:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":489,"nodeType":"ExpressionStatement","src":"4651:28:3"},{"body":{"id":525,"nodeType":"Block","src":"4793:273:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":505,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":501,"name":"activeReviewers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":264,"src":"4811:15:3","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":503,"indexExpression":{"id":502,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":491,"src":"4827:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4811:18:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":504,"name":"_reviewer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":472,"src":"4833:9:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4811:31:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":524,"nodeType":"IfStatement","src":"4807:249:3","trueBody":{"id":523,"nodeType":"Block","src":"4844:212:3","statements":[{"expression":{"id":515,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":506,"name":"activeReviewers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":264,"src":"4915:15:3","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":508,"indexExpression":{"id":507,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":491,"src":"4931:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4915:18:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":509,"name":"activeReviewers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":264,"src":"4936:15:3","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":514,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":513,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":510,"name":"activeReviewers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":264,"src":"4952:15:3","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":511,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4968:6:3","memberName":"length","nodeType":"MemberAccess","src":"4952:22:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":512,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4977:1:3","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"4952:26:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4936:43:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4915:64:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":516,"nodeType":"ExpressionStatement","src":"4915:64:3"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":517,"name":"activeReviewers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":264,"src":"4997:15:3","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":519,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5013:3:3","memberName":"pop","nodeType":"MemberAccess","src":"4997:19:3","typeDescriptions":{"typeIdentifier":"t_function_arraypop_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$returns$__$attached_to$_t_array$_t_address_$dyn_storage_ptr_$","typeString":"function (address[] storage pointer)"}},"id":520,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4997:21:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":521,"nodeType":"ExpressionStatement","src":"4997:21:3"},{"id":522,"nodeType":"Break","src":"5036:5:3"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":497,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":494,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":491,"src":"4760:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":495,"name":"activeReviewers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":264,"src":"4764:15:3","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":496,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4780:6:3","memberName":"length","nodeType":"MemberAccess","src":"4764:22:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4760:26:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":526,"initializationExpression":{"assignments":[491],"declarations":[{"constant":false,"id":491,"mutability":"mutable","name":"i","nameLocation":"4753:1:3","nodeType":"VariableDeclaration","scope":526,"src":"4748:6:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":490,"name":"uint","nodeType":"ElementaryTypeName","src":"4748:4:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":493,"initialValue":{"hexValue":"30","id":492,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4757:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"4748:10:3"},"loopExpression":{"expression":{"id":499,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"4788:3:3","subExpression":{"id":498,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":491,"src":"4788:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":500,"nodeType":"ExpressionStatement","src":"4788:3:3"},"nodeType":"ForStatement","src":"4743:323:3"}]},"documentation":{"id":470,"nodeType":"StructuredDocumentation","src":"4411:106:3","text":" @dev Removes a reviewer from the system\n @param _reviewer Address of the reviewer"},"functionSelector":"c9442dac","id":528,"implemented":true,"kind":"function","modifiers":[{"id":475,"kind":"modifierInvocation","modifierName":{"id":474,"name":"onlyAdmin","nameLocations":["4574:9:3"],"nodeType":"IdentifierPath","referencedDeclaration":343,"src":"4574:9:3"},"nodeType":"ModifierInvocation","src":"4574:9:3"}],"name":"removeReviewer","nameLocation":"4531:14:3","nodeType":"FunctionDefinition","parameters":{"id":473,"nodeType":"ParameterList","parameters":[{"constant":false,"id":472,"mutability":"mutable","name":"_reviewer","nameLocation":"4554:9:3","nodeType":"VariableDeclaration","scope":528,"src":"4546:17:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":471,"name":"address","nodeType":"ElementaryTypeName","src":"4546:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4545:19:3"},"returnParameters":{"id":476,"nodeType":"ParameterList","parameters":[],"src":"4584:0:3"},"scope":1242,"src":"4522:550:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":553,"nodeType":"Block","src":"5338:162:3","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":541,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":539,"name":"_autoApprove","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":531,"src":"5356:12:3","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":540,"name":"_autoReject","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":533,"src":"5371:11:3","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"5356:26:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c6964207468726573686f6c6473","id":542,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5384:20:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_ba0a55a031df313eaa190ddf2bf7cd0c7dc9c8ff71037c39d14d6f9a107f4d2c","typeString":"literal_string \"Invalid thresholds\""},"value":"Invalid thresholds"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ba0a55a031df313eaa190ddf2bf7cd0c7dc9c8ff71037c39d14d6f9a107f4d2c","typeString":"literal_string \"Invalid thresholds\""}],"id":538,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5348:7:3","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":543,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5348:57:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":544,"nodeType":"ExpressionStatement","src":"5348:57:3"},{"expression":{"id":547,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":545,"name":"autoApproveThreshold","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":294,"src":"5415:20:3","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":546,"name":"_autoApprove","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":531,"src":"5438:12:3","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"5415:35:3","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":548,"nodeType":"ExpressionStatement","src":"5415:35:3"},{"expression":{"id":551,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":549,"name":"autoRejectThreshold","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":297,"src":"5460:19:3","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":550,"name":"_autoReject","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":533,"src":"5482:11:3","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"5460:33:3","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":552,"nodeType":"ExpressionStatement","src":"5460:33:3"}]},"documentation":{"id":529,"nodeType":"StructuredDocumentation","src":"5082:170:3","text":" @dev Sets the auto-approve and auto-reject thresholds\n @param _autoApprove Auto-approve threshold\n @param _autoReject Auto-reject threshold"},"functionSelector":"bfce86b3","id":554,"implemented":true,"kind":"function","modifiers":[{"id":536,"kind":"modifierInvocation","modifierName":{"id":535,"name":"onlyAdmin","nameLocations":["5328:9:3"],"nodeType":"IdentifierPath","referencedDeclaration":343,"src":"5328:9:3"},"nodeType":"ModifierInvocation","src":"5328:9:3"}],"name":"setThresholds","nameLocation":"5266:13:3","nodeType":"FunctionDefinition","parameters":{"id":534,"nodeType":"ParameterList","parameters":[{"constant":false,"id":531,"mutability":"mutable","name":"_autoApprove","nameLocation":"5286:12:3","nodeType":"VariableDeclaration","scope":554,"src":"5280:18:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":530,"name":"uint8","nodeType":"ElementaryTypeName","src":"5280:5:3","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":533,"mutability":"mutable","name":"_autoReject","nameLocation":"5306:11:3","nodeType":"VariableDeclaration","scope":554,"src":"5300:17:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":532,"name":"uint8","nodeType":"ElementaryTypeName","src":"5300:5:3","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"5279:39:3"},"returnParameters":{"id":537,"nodeType":"ParameterList","parameters":[],"src":"5338:0:3"},"scope":1242,"src":"5257:243:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":628,"nodeType":"Block","src":"5932:1022:3","statements":[{"expression":{"arguments":[{"arguments":[{"id":572,"name":"_policyId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":557,"src":"6051:9:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":573,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6062:3:3","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":574,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6066:6:3","memberName":"sender","nodeType":"MemberAccess","src":"6062:10:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[{"id":569,"name":"policyRegistry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":285,"src":"6012:14:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":568,"name":"PolicyRegistry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2136,"src":"5997:14:3","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_PolicyRegistry_$2136_$","typeString":"type(contract PolicyRegistry)"}},"id":570,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5997:30:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_PolicyRegistry_$2136","typeString":"contract PolicyRegistry"}},"id":571,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6028:22:3","memberName":"isPolicyValidForClaims","nodeType":"MemberAccess","referencedDeclaration":2107,"src":"5997:53:3","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_uint256_$_t_address_$returns$_t_bool_$","typeString":"function (uint256,address) view external returns (bool)"}},"id":575,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5997:76:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c696420706f6c696379","id":576,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6087:16:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_498082b4f009e41f47396177cf73c85f617cb93f48308c4b333e74677269a833","typeString":"literal_string \"Invalid policy\""},"value":"Invalid policy"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_498082b4f009e41f47396177cf73c85f617cb93f48308c4b333e74677269a833","typeString":"literal_string \"Invalid policy\""}],"id":567,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5976:7:3","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":577,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5976:137:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":578,"nodeType":"ExpressionStatement","src":"5976:137:3"},{"assignments":[580],"declarations":[{"constant":false,"id":580,"mutability":"mutable","name":"claimId","nameLocation":"6140:7:3","nodeType":"VariableDeclaration","scope":628,"src":"6132:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":579,"name":"uint256","nodeType":"ElementaryTypeName","src":"6132:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":583,"initialValue":{"id":582,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"6150:13:3","subExpression":{"id":581,"name":"nextClaimId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":267,"src":"6150:11:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6132:31:3"},{"expression":{"id":610,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":584,"name":"claims","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":253,"src":"6182:6:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Claim_$241_storage_$","typeString":"mapping(uint256 => struct ClaimsProcessor.Claim storage ref)"}},"id":586,"indexExpression":{"id":585,"name":"claimId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":580,"src":"6189:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6182:15:3","typeDescriptions":{"typeIdentifier":"t_struct$_Claim_$241_storage","typeString":"struct ClaimsProcessor.Claim storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":588,"name":"claimId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":580,"src":"6229:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":589,"name":"_policyId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":557,"src":"6260:9:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":590,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6293:3:3","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":591,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6297:6:3","memberName":"sender","nodeType":"MemberAccess","src":"6293:10:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":592,"name":"_description","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":559,"src":"6330:12:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":593,"name":"_evidenceHashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":562,"src":"6372:15:3","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"}},{"expression":{"id":594,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"6412:5:3","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":595,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6418:9:3","memberName":"timestamp","nodeType":"MemberAccess","src":"6412:15:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":596,"name":"ClaimStatus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":248,"src":"6449:11:3","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_ClaimStatus_$248_$","typeString":"type(enum ClaimsProcessor.ClaimStatus)"}},"id":597,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6461:9:3","memberName":"Submitted","nodeType":"MemberAccess","referencedDeclaration":242,"src":"6449:21:3","typeDescriptions":{"typeIdentifier":"t_enum$_ClaimStatus_$248","typeString":"enum ClaimsProcessor.ClaimStatus"}},{"hexValue":"30","id":598,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6495:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"hexValue":"30","id":599,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6520:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"hexValue":"30","id":600,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6546:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"hexValue":"30","id":601,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6580:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"hexValue":"30","id":602,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6608:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"hexValue":"30","id":603,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6636:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"hexValue":"66616c7365","id":604,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6672:5:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"arguments":[{"hexValue":"30","id":607,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6717:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":606,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6709:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":605,"name":"address","nodeType":"ElementaryTypeName","src":"6709:7:3","typeDescriptions":{}}},"id":608,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6709:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_enum$_ClaimStatus_$248","typeString":"enum ClaimsProcessor.ClaimStatus"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_address","typeString":"address"}],"id":587,"name":"Claim","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":241,"src":"6200:5:3","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Claim_$241_storage_ptr_$","typeString":"type(struct ClaimsProcessor.Claim storage pointer)"}},"id":609,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["6220:7:3","6250:8:3","6283:8:3","6317:11:3","6356:14:3","6401:9:3","6441:6:3","6484:9:3","6510:8:3","6535:9:3","6561:17:3","6595:11:3","6623:11:3","6651:19:3","6691:16:3"],"names":["claimId","policyId","claimant","description","evidenceHashes","timestamp","status","claimType","severity","fraudRisk","recommendedPayout","finalPayout","processedAt","requiresHumanReview","assignedReviewer"],"nodeType":"FunctionCall","src":"6200:530:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Claim_$241_memory_ptr","typeString":"struct ClaimsProcessor.Claim memory"}},"src":"6182:548:3","typeDescriptions":{"typeIdentifier":"t_struct$_Claim_$241_storage","typeString":"struct ClaimsProcessor.Claim storage ref"}},"id":611,"nodeType":"ExpressionStatement","src":"6182:548:3"},{"expression":{"arguments":[{"id":616,"name":"_policyId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":557,"src":"6843:9:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":613,"name":"policyRegistry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":285,"src":"6807:14:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":612,"name":"PolicyRegistry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2136,"src":"6792:14:3","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_PolicyRegistry_$2136_$","typeString":"type(contract PolicyRegistry)"}},"id":614,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6792:30:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_PolicyRegistry_$2136","typeString":"contract PolicyRegistry"}},"id":615,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6823:19:3","memberName":"incrementClaimCount","nodeType":"MemberAccess","referencedDeclaration":2022,"src":"6792:50:3","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256) external"}},"id":617,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6792:61:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":618,"nodeType":"ExpressionStatement","src":"6792:61:3"},{"eventCall":{"arguments":[{"id":620,"name":"claimId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":580,"src":"6892:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":621,"name":"_policyId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":557,"src":"6901:9:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":622,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6912:3:3","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":623,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6916:6:3","memberName":"sender","nodeType":"MemberAccess","src":"6912:10:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":619,"name":"ClaimSubmitted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":305,"src":"6877:14:3","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_address_$returns$__$","typeString":"function (uint256,uint256,address)"}},"id":624,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6877:46:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":625,"nodeType":"EmitStatement","src":"6872:51:3"},{"expression":{"id":626,"name":"claimId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":580,"src":"6940:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":566,"id":627,"nodeType":"Return","src":"6933:14:3"}]},"documentation":{"id":555,"nodeType":"StructuredDocumentation","src":"5510:259:3","text":" @dev Submits a new insurance claim\n @param _policyId ID of the policy\n @param _description Description of the claim\n @param _evidenceHashes IPFS hashes of the evidence files\n @return claimId ID of the submitted claim"},"functionSelector":"324bc2a9","id":629,"implemented":true,"kind":"function","modifiers":[],"name":"submitClaim","nameLocation":"5783:11:3","nodeType":"FunctionDefinition","parameters":{"id":563,"nodeType":"ParameterList","parameters":[{"constant":false,"id":557,"mutability":"mutable","name":"_policyId","nameLocation":"5812:9:3","nodeType":"VariableDeclaration","scope":629,"src":"5804:17:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":556,"name":"uint256","nodeType":"ElementaryTypeName","src":"5804:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":559,"mutability":"mutable","name":"_description","nameLocation":"5845:12:3","nodeType":"VariableDeclaration","scope":629,"src":"5831:26:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":558,"name":"string","nodeType":"ElementaryTypeName","src":"5831:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":562,"mutability":"mutable","name":"_evidenceHashes","nameLocation":"5883:15:3","nodeType":"VariableDeclaration","scope":629,"src":"5867:31:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":560,"name":"string","nodeType":"ElementaryTypeName","src":"5867:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":561,"nodeType":"ArrayTypeName","src":"5867:8:3","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"src":"5794:110:3"},"returnParameters":{"id":566,"nodeType":"ParameterList","parameters":[{"constant":false,"id":565,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":629,"src":"5923:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":564,"name":"uint256","nodeType":"ElementaryTypeName","src":"5923:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5922:9:3"},"scope":1242,"src":"5774:1180:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":747,"nodeType":"Block","src":"7476:1071:3","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_enum$_ClaimStatus_$248","typeString":"enum ClaimsProcessor.ClaimStatus"},"id":652,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":646,"name":"claims","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":253,"src":"7494:6:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Claim_$241_storage_$","typeString":"mapping(uint256 => struct ClaimsProcessor.Claim storage ref)"}},"id":648,"indexExpression":{"id":647,"name":"_claimId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":632,"src":"7501:8:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7494:16:3","typeDescriptions":{"typeIdentifier":"t_struct$_Claim_$241_storage","typeString":"struct ClaimsProcessor.Claim storage ref"}},"id":649,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7511:6:3","memberName":"status","nodeType":"MemberAccess","referencedDeclaration":224,"src":"7494:23:3","typeDescriptions":{"typeIdentifier":"t_enum$_ClaimStatus_$248","typeString":"enum ClaimsProcessor.ClaimStatus"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":650,"name":"ClaimStatus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":248,"src":"7521:11:3","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_ClaimStatus_$248_$","typeString":"type(enum ClaimsProcessor.ClaimStatus)"}},"id":651,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7533:9:3","memberName":"Submitted","nodeType":"MemberAccess","referencedDeclaration":242,"src":"7521:21:3","typeDescriptions":{"typeIdentifier":"t_enum$_ClaimStatus_$248","typeString":"enum ClaimsProcessor.ClaimStatus"}},"src":"7494:48:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c696420737461747573","id":653,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7544:16:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_5daffa6d01793c44569eea4899b46459cac26c020ffefc72413a73ac0880f857","typeString":"literal_string \"Invalid status\""},"value":"Invalid status"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5daffa6d01793c44569eea4899b46459cac26c020ffefc72413a73ac0880f857","typeString":"literal_string \"Invalid status\""}],"id":645,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7486:7:3","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":654,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7486:75:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":655,"nodeType":"ExpressionStatement","src":"7486:75:3"},{"assignments":[658],"declarations":[{"constant":false,"id":658,"mutability":"mutable","name":"claim","nameLocation":"7594:5:3","nodeType":"VariableDeclaration","scope":747,"src":"7580:19:3","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Claim_$241_storage_ptr","typeString":"struct ClaimsProcessor.Claim"},"typeName":{"id":657,"nodeType":"UserDefinedTypeName","pathNode":{"id":656,"name":"Claim","nameLocations":["7580:5:3"],"nodeType":"IdentifierPath","referencedDeclaration":241,"src":"7580:5:3"},"referencedDeclaration":241,"src":"7580:5:3","typeDescriptions":{"typeIdentifier":"t_struct$_Claim_$241_storage_ptr","typeString":"struct ClaimsProcessor.Claim"}},"visibility":"internal"}],"id":662,"initialValue":{"baseExpression":{"id":659,"name":"claims","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":253,"src":"7602:6:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Claim_$241_storage_$","typeString":"mapping(uint256 => struct ClaimsProcessor.Claim storage ref)"}},"id":661,"indexExpression":{"id":660,"name":"_claimId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":632,"src":"7609:8:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7602:16:3","typeDescriptions":{"typeIdentifier":"t_struct$_Claim_$241_storage","typeString":"struct ClaimsProcessor.Claim storage ref"}},"nodeType":"VariableDeclarationStatement","src":"7580:38:3"},{"expression":{"id":667,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":663,"name":"claim","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":658,"src":"7628:5:3","typeDescriptions":{"typeIdentifier":"t_struct$_Claim_$241_storage_ptr","typeString":"struct ClaimsProcessor.Claim storage pointer"}},"id":665,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"7634:9:3","memberName":"claimType","nodeType":"MemberAccess","referencedDeclaration":226,"src":"7628:15:3","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":666,"name":"_claimType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":634,"src":"7646:10:3","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"7628:28:3","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":668,"nodeType":"ExpressionStatement","src":"7628:28:3"},{"expression":{"id":673,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":669,"name":"claim","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":658,"src":"7666:5:3","typeDescriptions":{"typeIdentifier":"t_struct$_Claim_$241_storage_ptr","typeString":"struct ClaimsProcessor.Claim storage pointer"}},"id":671,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"7672:8:3","memberName":"severity","nodeType":"MemberAccess","referencedDeclaration":228,"src":"7666:14:3","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":672,"name":"_severity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":636,"src":"7683:9:3","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"7666:26:3","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":674,"nodeType":"ExpressionStatement","src":"7666:26:3"},{"expression":{"id":679,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":675,"name":"claim","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":658,"src":"7702:5:3","typeDescriptions":{"typeIdentifier":"t_struct$_Claim_$241_storage_ptr","typeString":"struct ClaimsProcessor.Claim storage pointer"}},"id":677,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"7708:9:3","memberName":"fraudRisk","nodeType":"MemberAccess","referencedDeclaration":230,"src":"7702:15:3","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":678,"name":"_fraudRisk","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":638,"src":"7720:10:3","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"7702:28:3","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":680,"nodeType":"ExpressionStatement","src":"7702:28:3"},{"expression":{"id":685,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":681,"name":"claim","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":658,"src":"7740:5:3","typeDescriptions":{"typeIdentifier":"t_struct$_Claim_$241_storage_ptr","typeString":"struct ClaimsProcessor.Claim storage pointer"}},"id":683,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"7746:17:3","memberName":"recommendedPayout","nodeType":"MemberAccess","referencedDeclaration":232,"src":"7740:23:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":684,"name":"_recommendedPayout","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":640,"src":"7766:18:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7740:44:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":686,"nodeType":"ExpressionStatement","src":"7740:44:3"},{"expression":{"id":692,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":687,"name":"claim","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":658,"src":"7794:5:3","typeDescriptions":{"typeIdentifier":"t_struct$_Claim_$241_storage_ptr","typeString":"struct ClaimsProcessor.Claim storage pointer"}},"id":689,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"7800:6:3","memberName":"status","nodeType":"MemberAccess","referencedDeclaration":224,"src":"7794:12:3","typeDescriptions":{"typeIdentifier":"t_enum$_ClaimStatus_$248","typeString":"enum ClaimsProcessor.ClaimStatus"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":690,"name":"ClaimStatus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":248,"src":"7809:11:3","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_ClaimStatus_$248_$","typeString":"type(enum ClaimsProcessor.ClaimStatus)"}},"id":691,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7821:10:3","memberName":"AIAnalyzed","nodeType":"MemberAccess","referencedDeclaration":243,"src":"7809:22:3","typeDescriptions":{"typeIdentifier":"t_enum$_ClaimStatus_$248","typeString":"enum ClaimsProcessor.ClaimStatus"}},"src":"7794:37:3","typeDescriptions":{"typeIdentifier":"t_enum$_ClaimStatus_$248","typeString":"enum ClaimsProcessor.ClaimStatus"}},"id":693,"nodeType":"ExpressionStatement","src":"7794:37:3"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":700,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":696,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":694,"name":"_fraudRisk","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":638,"src":"7910:10:3","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":695,"name":"autoApproveThreshold","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":294,"src":"7923:20:3","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"7910:33:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":699,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":697,"name":"_recommendedPayout","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":640,"src":"7947:18:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":698,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7968:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7947:22:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"7910:59:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":709,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":707,"name":"_fraudRisk","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":638,"src":"8098:10:3","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":708,"name":"autoRejectThreshold","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":297,"src":"8111:19:3","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"8098:32:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":740,"nodeType":"Block","src":"8386:103:3","statements":[{"expression":{"id":734,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":730,"name":"claim","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":658,"src":"8400:5:3","typeDescriptions":{"typeIdentifier":"t_struct$_Claim_$241_storage_ptr","typeString":"struct ClaimsProcessor.Claim storage pointer"}},"id":732,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"8406:19:3","memberName":"requiresHumanReview","nodeType":"MemberAccess","referencedDeclaration":238,"src":"8400:25:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":733,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"8428:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"8400:32:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":735,"nodeType":"ExpressionStatement","src":"8400:32:3"},{"expression":{"arguments":[{"id":737,"name":"_claimId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":632,"src":"8469:8:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":736,"name":"_requestRandomReviewer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":963,"src":"8446:22:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":738,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8446:32:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":739,"nodeType":"ExpressionStatement","src":"8446:32:3"}]},"id":741,"nodeType":"IfStatement","src":"8094:395:3","trueBody":{"id":729,"nodeType":"Block","src":"8132:179:3","statements":[{"expression":{"id":715,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":710,"name":"claim","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":658,"src":"8146:5:3","typeDescriptions":{"typeIdentifier":"t_struct$_Claim_$241_storage_ptr","typeString":"struct ClaimsProcessor.Claim storage pointer"}},"id":712,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"8152:6:3","memberName":"status","nodeType":"MemberAccess","referencedDeclaration":224,"src":"8146:12:3","typeDescriptions":{"typeIdentifier":"t_enum$_ClaimStatus_$248","typeString":"enum ClaimsProcessor.ClaimStatus"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":713,"name":"ClaimStatus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":248,"src":"8161:11:3","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_ClaimStatus_$248_$","typeString":"type(enum ClaimsProcessor.ClaimStatus)"}},"id":714,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8173:8:3","memberName":"Rejected","nodeType":"MemberAccess","referencedDeclaration":246,"src":"8161:20:3","typeDescriptions":{"typeIdentifier":"t_enum$_ClaimStatus_$248","typeString":"enum ClaimsProcessor.ClaimStatus"}},"src":"8146:35:3","typeDescriptions":{"typeIdentifier":"t_enum$_ClaimStatus_$248","typeString":"enum ClaimsProcessor.ClaimStatus"}},"id":716,"nodeType":"ExpressionStatement","src":"8146:35:3"},{"expression":{"id":722,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":717,"name":"claim","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":658,"src":"8195:5:3","typeDescriptions":{"typeIdentifier":"t_struct$_Claim_$241_storage_ptr","typeString":"struct ClaimsProcessor.Claim storage pointer"}},"id":719,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"8201:11:3","memberName":"processedAt","nodeType":"MemberAccess","referencedDeclaration":236,"src":"8195:17:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":720,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"8215:5:3","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":721,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8221:9:3","memberName":"timestamp","nodeType":"MemberAccess","src":"8215:15:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8195:35:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":723,"nodeType":"ExpressionStatement","src":"8195:35:3"},{"eventCall":{"arguments":[{"id":725,"name":"_claimId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":632,"src":"8263:8:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"48696768206672617564207269736b206465746563746564","id":726,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8273:26:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_92936888c54db7351935493ab9e088dd03a09f0146d4ba1ee2cf30fe06138cce","typeString":"literal_string \"High fraud risk detected\""},"value":"High fraud risk detected"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_92936888c54db7351935493ab9e088dd03a09f0146d4ba1ee2cf30fe06138cce","typeString":"literal_string \"High fraud risk detected\""}],"id":724,"name":"ClaimRejected","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":327,"src":"8249:13:3","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_string_memory_ptr_$returns$__$","typeString":"function (uint256,string memory)"}},"id":727,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8249:51:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":728,"nodeType":"EmitStatement","src":"8244:56:3"}]}},"id":742,"nodeType":"IfStatement","src":"7906:583:3","trueBody":{"id":706,"nodeType":"Block","src":"7971:68:3","statements":[{"expression":{"arguments":[{"id":702,"name":"_claimId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":632,"src":"7999:8:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":703,"name":"_recommendedPayout","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":640,"src":"8009:18:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":701,"name":"_approveClaim","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":923,"src":"7985:13:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256)"}},"id":704,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7985:43:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":705,"nodeType":"ExpressionStatement","src":"7985:43:3"}]}},{"eventCall":{"arguments":[{"id":744,"name":"_claimId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":632,"src":"8531:8:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":743,"name":"AIAnalysisReceived","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":309,"src":"8512:18:3","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":745,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8512:28:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":746,"nodeType":"EmitStatement","src":"8507:33:3"}]},"documentation":{"id":630,"nodeType":"StructuredDocumentation","src":"6964:314:3","text":" @dev Submits AI analysis results for a claim\n @param _claimId ID of the claim\n @param _claimType Type of claim (0-3)\n @param _severity Severity of the claim (1-10)\n @param _fraudRisk Fraud risk percentage (0-100)\n @param _recommendedPayout Recommended payout amount"},"functionSelector":"e277c881","id":748,"implemented":true,"kind":"function","modifiers":[{"id":643,"kind":"modifierInvocation","modifierName":{"id":642,"name":"onlyAIOracle","nameLocations":["7463:12:3"],"nodeType":"IdentifierPath","referencedDeclaration":355,"src":"7463:12:3"},"nodeType":"ModifierInvocation","src":"7463:12:3"}],"name":"submitAIAnalysis","nameLocation":"7292:16:3","nodeType":"FunctionDefinition","parameters":{"id":641,"nodeType":"ParameterList","parameters":[{"constant":false,"id":632,"mutability":"mutable","name":"_claimId","nameLocation":"7326:8:3","nodeType":"VariableDeclaration","scope":748,"src":"7318:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":631,"name":"uint256","nodeType":"ElementaryTypeName","src":"7318:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":634,"mutability":"mutable","name":"_claimType","nameLocation":"7350:10:3","nodeType":"VariableDeclaration","scope":748,"src":"7344:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":633,"name":"uint8","nodeType":"ElementaryTypeName","src":"7344:5:3","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":636,"mutability":"mutable","name":"_severity","nameLocation":"7376:9:3","nodeType":"VariableDeclaration","scope":748,"src":"7370:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":635,"name":"uint8","nodeType":"ElementaryTypeName","src":"7370:5:3","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":638,"mutability":"mutable","name":"_fraudRisk","nameLocation":"7401:10:3","nodeType":"VariableDeclaration","scope":748,"src":"7395:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":637,"name":"uint8","nodeType":"ElementaryTypeName","src":"7395:5:3","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":640,"mutability":"mutable","name":"_recommendedPayout","nameLocation":"7429:18:3","nodeType":"VariableDeclaration","scope":748,"src":"7421:26:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":639,"name":"uint256","nodeType":"ElementaryTypeName","src":"7421:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7308:145:3"},"returnParameters":{"id":644,"nodeType":"ParameterList","parameters":[],"src":"7476:0:3"},"scope":1242,"src":"7283:1264:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":788,"nodeType":"Block","src":"8782:262:3","statements":[{"assignments":[760],"declarations":[{"constant":false,"id":760,"mutability":"mutable","name":"claim","nameLocation":"8806:5:3","nodeType":"VariableDeclaration","scope":788,"src":"8792:19:3","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Claim_$241_storage_ptr","typeString":"struct ClaimsProcessor.Claim"},"typeName":{"id":759,"nodeType":"UserDefinedTypeName","pathNode":{"id":758,"name":"Claim","nameLocations":["8792:5:3"],"nodeType":"IdentifierPath","referencedDeclaration":241,"src":"8792:5:3"},"referencedDeclaration":241,"src":"8792:5:3","typeDescriptions":{"typeIdentifier":"t_struct$_Claim_$241_storage_ptr","typeString":"struct ClaimsProcessor.Claim"}},"visibility":"internal"}],"id":764,"initialValue":{"baseExpression":{"id":761,"name":"claims","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":253,"src":"8814:6:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Claim_$241_storage_$","typeString":"mapping(uint256 => struct ClaimsProcessor.Claim storage ref)"}},"id":763,"indexExpression":{"id":762,"name":"_claimId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":751,"src":"8821:8:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8814:16:3","typeDescriptions":{"typeIdentifier":"t_struct$_Claim_$241_storage","typeString":"struct ClaimsProcessor.Claim storage ref"}},"nodeType":"VariableDeclarationStatement","src":"8792:38:3"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_enum$_ClaimStatus_$248","typeString":"enum ClaimsProcessor.ClaimStatus"},"id":770,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":766,"name":"claim","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":760,"src":"8848:5:3","typeDescriptions":{"typeIdentifier":"t_struct$_Claim_$241_storage_ptr","typeString":"struct ClaimsProcessor.Claim storage pointer"}},"id":767,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8854:6:3","memberName":"status","nodeType":"MemberAccess","referencedDeclaration":224,"src":"8848:12:3","typeDescriptions":{"typeIdentifier":"t_enum$_ClaimStatus_$248","typeString":"enum ClaimsProcessor.ClaimStatus"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":768,"name":"ClaimStatus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":248,"src":"8864:11:3","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_ClaimStatus_$248_$","typeString":"type(enum ClaimsProcessor.ClaimStatus)"}},"id":769,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8876:11:3","memberName":"UnderReview","nodeType":"MemberAccess","referencedDeclaration":244,"src":"8864:23:3","typeDescriptions":{"typeIdentifier":"t_enum$_ClaimStatus_$248","typeString":"enum ClaimsProcessor.ClaimStatus"}},"src":"8848:39:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c696420737461747573","id":771,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8889:16:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_5daffa6d01793c44569eea4899b46459cac26c020ffefc72413a73ac0880f857","typeString":"literal_string \"Invalid status\""},"value":"Invalid status"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5daffa6d01793c44569eea4899b46459cac26c020ffefc72413a73ac0880f857","typeString":"literal_string \"Invalid status\""}],"id":765,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8840:7:3","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":772,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8840:66:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":773,"nodeType":"ExpressionStatement","src":"8840:66:3"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":779,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":775,"name":"claim","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":760,"src":"8924:5:3","typeDescriptions":{"typeIdentifier":"t_struct$_Claim_$241_storage_ptr","typeString":"struct ClaimsProcessor.Claim storage pointer"}},"id":776,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8930:16:3","memberName":"assignedReviewer","nodeType":"MemberAccess","referencedDeclaration":240,"src":"8924:22:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":777,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"8950:3:3","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":778,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8954:6:3","memberName":"sender","nodeType":"MemberAccess","src":"8950:10:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8924:36:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e6f742061737369676e6564207265766965776572","id":780,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8962:23:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_cf2927f126d757b90889d61f36f95ed9717900c04b884539a6cfc32b8520a3d3","typeString":"literal_string \"Not assigned reviewer\""},"value":"Not assigned reviewer"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_cf2927f126d757b90889d61f36f95ed9717900c04b884539a6cfc32b8520a3d3","typeString":"literal_string \"Not assigned reviewer\""}],"id":774,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8916:7:3","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":781,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8916:70:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":782,"nodeType":"ExpressionStatement","src":"8916:70:3"},{"expression":{"arguments":[{"id":784,"name":"_claimId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":751,"src":"9019:8:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":785,"name":"_payout","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":753,"src":"9029:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":783,"name":"_approveClaim","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":923,"src":"9005:13:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256)"}},"id":786,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9005:32:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":787,"nodeType":"ExpressionStatement","src":"9005:32:3"}]},"documentation":{"id":749,"nodeType":"StructuredDocumentation","src":"8557:133:3","text":" @dev Reviewer approves a claim\n @param _claimId ID of the claim\n @param _payout Approved payout amount"},"functionSelector":"9b052153","id":789,"implemented":true,"kind":"function","modifiers":[{"id":756,"kind":"modifierInvocation","modifierName":{"id":755,"name":"onlyReviewer","nameLocations":["8769:12:3"],"nodeType":"IdentifierPath","referencedDeclaration":367,"src":"8769:12:3"},"nodeType":"ModifierInvocation","src":"8769:12:3"}],"name":"reviewerApproveClaim","nameLocation":"8704:20:3","nodeType":"FunctionDefinition","parameters":{"id":754,"nodeType":"ParameterList","parameters":[{"constant":false,"id":751,"mutability":"mutable","name":"_claimId","nameLocation":"8733:8:3","nodeType":"VariableDeclaration","scope":789,"src":"8725:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":750,"name":"uint256","nodeType":"ElementaryTypeName","src":"8725:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":753,"mutability":"mutable","name":"_payout","nameLocation":"8751:7:3","nodeType":"VariableDeclaration","scope":789,"src":"8743:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":752,"name":"uint256","nodeType":"ElementaryTypeName","src":"8743:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8724:35:3"},"returnParameters":{"id":757,"nodeType":"ParameterList","parameters":[],"src":"8782:0:3"},"scope":1242,"src":"8695:349:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":843,"nodeType":"Block","src":"9281:357:3","statements":[{"assignments":[801],"declarations":[{"constant":false,"id":801,"mutability":"mutable","name":"claim","nameLocation":"9305:5:3","nodeType":"VariableDeclaration","scope":843,"src":"9291:19:3","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Claim_$241_storage_ptr","typeString":"struct ClaimsProcessor.Claim"},"typeName":{"id":800,"nodeType":"UserDefinedTypeName","pathNode":{"id":799,"name":"Claim","nameLocations":["9291:5:3"],"nodeType":"IdentifierPath","referencedDeclaration":241,"src":"9291:5:3"},"referencedDeclaration":241,"src":"9291:5:3","typeDescriptions":{"typeIdentifier":"t_struct$_Claim_$241_storage_ptr","typeString":"struct ClaimsProcessor.Claim"}},"visibility":"internal"}],"id":805,"initialValue":{"baseExpression":{"id":802,"name":"claims","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":253,"src":"9313:6:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Claim_$241_storage_$","typeString":"mapping(uint256 => struct ClaimsProcessor.Claim storage ref)"}},"id":804,"indexExpression":{"id":803,"name":"_claimId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":792,"src":"9320:8:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9313:16:3","typeDescriptions":{"typeIdentifier":"t_struct$_Claim_$241_storage","typeString":"struct ClaimsProcessor.Claim storage ref"}},"nodeType":"VariableDeclarationStatement","src":"9291:38:3"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_enum$_ClaimStatus_$248","typeString":"enum ClaimsProcessor.ClaimStatus"},"id":811,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":807,"name":"claim","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":801,"src":"9347:5:3","typeDescriptions":{"typeIdentifier":"t_struct$_Claim_$241_storage_ptr","typeString":"struct ClaimsProcessor.Claim storage pointer"}},"id":808,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9353:6:3","memberName":"status","nodeType":"MemberAccess","referencedDeclaration":224,"src":"9347:12:3","typeDescriptions":{"typeIdentifier":"t_enum$_ClaimStatus_$248","typeString":"enum ClaimsProcessor.ClaimStatus"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":809,"name":"ClaimStatus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":248,"src":"9363:11:3","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_ClaimStatus_$248_$","typeString":"type(enum ClaimsProcessor.ClaimStatus)"}},"id":810,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9375:11:3","memberName":"UnderReview","nodeType":"MemberAccess","referencedDeclaration":244,"src":"9363:23:3","typeDescriptions":{"typeIdentifier":"t_enum$_ClaimStatus_$248","typeString":"enum ClaimsProcessor.ClaimStatus"}},"src":"9347:39:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c696420737461747573","id":812,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9388:16:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_5daffa6d01793c44569eea4899b46459cac26c020ffefc72413a73ac0880f857","typeString":"literal_string \"Invalid status\""},"value":"Invalid status"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5daffa6d01793c44569eea4899b46459cac26c020ffefc72413a73ac0880f857","typeString":"literal_string \"Invalid status\""}],"id":806,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9339:7:3","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":813,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9339:66:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":814,"nodeType":"ExpressionStatement","src":"9339:66:3"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":820,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":816,"name":"claim","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":801,"src":"9423:5:3","typeDescriptions":{"typeIdentifier":"t_struct$_Claim_$241_storage_ptr","typeString":"struct ClaimsProcessor.Claim storage pointer"}},"id":817,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9429:16:3","memberName":"assignedReviewer","nodeType":"MemberAccess","referencedDeclaration":240,"src":"9423:22:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":818,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"9449:3:3","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":819,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9453:6:3","memberName":"sender","nodeType":"MemberAccess","src":"9449:10:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9423:36:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e6f742061737369676e6564207265766965776572","id":821,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9461:23:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_cf2927f126d757b90889d61f36f95ed9717900c04b884539a6cfc32b8520a3d3","typeString":"literal_string \"Not assigned reviewer\""},"value":"Not assigned reviewer"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_cf2927f126d757b90889d61f36f95ed9717900c04b884539a6cfc32b8520a3d3","typeString":"literal_string \"Not assigned reviewer\""}],"id":815,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9415:7:3","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":822,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9415:70:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":823,"nodeType":"ExpressionStatement","src":"9415:70:3"},{"expression":{"id":829,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":824,"name":"claim","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":801,"src":"9504:5:3","typeDescriptions":{"typeIdentifier":"t_struct$_Claim_$241_storage_ptr","typeString":"struct ClaimsProcessor.Claim storage pointer"}},"id":826,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"9510:6:3","memberName":"status","nodeType":"MemberAccess","referencedDeclaration":224,"src":"9504:12:3","typeDescriptions":{"typeIdentifier":"t_enum$_ClaimStatus_$248","typeString":"enum ClaimsProcessor.ClaimStatus"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":827,"name":"ClaimStatus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":248,"src":"9519:11:3","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_ClaimStatus_$248_$","typeString":"type(enum ClaimsProcessor.ClaimStatus)"}},"id":828,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9531:8:3","memberName":"Rejected","nodeType":"MemberAccess","referencedDeclaration":246,"src":"9519:20:3","typeDescriptions":{"typeIdentifier":"t_enum$_ClaimStatus_$248","typeString":"enum ClaimsProcessor.ClaimStatus"}},"src":"9504:35:3","typeDescriptions":{"typeIdentifier":"t_enum$_ClaimStatus_$248","typeString":"enum ClaimsProcessor.ClaimStatus"}},"id":830,"nodeType":"ExpressionStatement","src":"9504:35:3"},{"expression":{"id":836,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":831,"name":"claim","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":801,"src":"9549:5:3","typeDescriptions":{"typeIdentifier":"t_struct$_Claim_$241_storage_ptr","typeString":"struct ClaimsProcessor.Claim storage pointer"}},"id":833,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"9555:11:3","memberName":"processedAt","nodeType":"MemberAccess","referencedDeclaration":236,"src":"9549:17:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":834,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"9569:5:3","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":835,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9575:9:3","memberName":"timestamp","nodeType":"MemberAccess","src":"9569:15:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9549:35:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":837,"nodeType":"ExpressionStatement","src":"9549:35:3"},{"eventCall":{"arguments":[{"id":839,"name":"_claimId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":792,"src":"9613:8:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":840,"name":"_reason","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":794,"src":"9623:7:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":838,"name":"ClaimRejected","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":327,"src":"9599:13:3","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_string_memory_ptr_$returns$__$","typeString":"function (uint256,string memory)"}},"id":841,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9599:32:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":842,"nodeType":"EmitStatement","src":"9594:37:3"}]},"documentation":{"id":790,"nodeType":"StructuredDocumentation","src":"9054:130:3","text":" @dev Reviewer rejects a claim\n @param _claimId ID of the claim\n @param _reason Reason for rejection"},"functionSelector":"5eb0ec39","id":844,"implemented":true,"kind":"function","modifiers":[{"id":797,"kind":"modifierInvocation","modifierName":{"id":796,"name":"onlyReviewer","nameLocations":["9268:12:3"],"nodeType":"IdentifierPath","referencedDeclaration":367,"src":"9268:12:3"},"nodeType":"ModifierInvocation","src":"9268:12:3"}],"name":"reviewerRejectClaim","nameLocation":"9198:19:3","nodeType":"FunctionDefinition","parameters":{"id":795,"nodeType":"ParameterList","parameters":[{"constant":false,"id":792,"mutability":"mutable","name":"_claimId","nameLocation":"9226:8:3","nodeType":"VariableDeclaration","scope":844,"src":"9218:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":791,"name":"uint256","nodeType":"ElementaryTypeName","src":"9218:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":794,"mutability":"mutable","name":"_reason","nameLocation":"9250:7:3","nodeType":"VariableDeclaration","scope":844,"src":"9236:21:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":793,"name":"string","nodeType":"ElementaryTypeName","src":"9236:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"9217:41:3"},"returnParameters":{"id":798,"nodeType":"ParameterList","parameters":[],"src":"9281:0:3"},"scope":1242,"src":"9189:449:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":922,"nodeType":"Block","src":"9864:675:3","statements":[{"assignments":[854],"declarations":[{"constant":false,"id":854,"mutability":"mutable","name":"claim","nameLocation":"9888:5:3","nodeType":"VariableDeclaration","scope":922,"src":"9874:19:3","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Claim_$241_storage_ptr","typeString":"struct ClaimsProcessor.Claim"},"typeName":{"id":853,"nodeType":"UserDefinedTypeName","pathNode":{"id":852,"name":"Claim","nameLocations":["9874:5:3"],"nodeType":"IdentifierPath","referencedDeclaration":241,"src":"9874:5:3"},"referencedDeclaration":241,"src":"9874:5:3","typeDescriptions":{"typeIdentifier":"t_struct$_Claim_$241_storage_ptr","typeString":"struct ClaimsProcessor.Claim"}},"visibility":"internal"}],"id":858,"initialValue":{"baseExpression":{"id":855,"name":"claims","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":253,"src":"9896:6:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Claim_$241_storage_$","typeString":"mapping(uint256 => struct ClaimsProcessor.Claim storage ref)"}},"id":857,"indexExpression":{"id":856,"name":"_claimId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":847,"src":"9903:8:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9896:16:3","typeDescriptions":{"typeIdentifier":"t_struct$_Claim_$241_storage","typeString":"struct ClaimsProcessor.Claim storage ref"}},"nodeType":"VariableDeclarationStatement","src":"9874:38:3"},{"expression":{"id":864,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":859,"name":"claim","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":854,"src":"9922:5:3","typeDescriptions":{"typeIdentifier":"t_struct$_Claim_$241_storage_ptr","typeString":"struct ClaimsProcessor.Claim storage pointer"}},"id":861,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"9928:6:3","memberName":"status","nodeType":"MemberAccess","referencedDeclaration":224,"src":"9922:12:3","typeDescriptions":{"typeIdentifier":"t_enum$_ClaimStatus_$248","typeString":"enum ClaimsProcessor.ClaimStatus"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":862,"name":"ClaimStatus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":248,"src":"9937:11:3","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_ClaimStatus_$248_$","typeString":"type(enum ClaimsProcessor.ClaimStatus)"}},"id":863,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9949:8:3","memberName":"Approved","nodeType":"MemberAccess","referencedDeclaration":245,"src":"9937:20:3","typeDescriptions":{"typeIdentifier":"t_enum$_ClaimStatus_$248","typeString":"enum ClaimsProcessor.ClaimStatus"}},"src":"9922:35:3","typeDescriptions":{"typeIdentifier":"t_enum$_ClaimStatus_$248","typeString":"enum ClaimsProcessor.ClaimStatus"}},"id":865,"nodeType":"ExpressionStatement","src":"9922:35:3"},{"expression":{"id":870,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":866,"name":"claim","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":854,"src":"9967:5:3","typeDescriptions":{"typeIdentifier":"t_struct$_Claim_$241_storage_ptr","typeString":"struct ClaimsProcessor.Claim storage pointer"}},"id":868,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"9973:11:3","memberName":"finalPayout","nodeType":"MemberAccess","referencedDeclaration":234,"src":"9967:17:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":869,"name":"_payout","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":849,"src":"9987:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9967:27:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":871,"nodeType":"ExpressionStatement","src":"9967:27:3"},{"expression":{"id":877,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":872,"name":"claim","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":854,"src":"10004:5:3","typeDescriptions":{"typeIdentifier":"t_struct$_Claim_$241_storage_ptr","typeString":"struct ClaimsProcessor.Claim storage pointer"}},"id":874,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"10010:11:3","memberName":"processedAt","nodeType":"MemberAccess","referencedDeclaration":236,"src":"10004:17:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":875,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"10024:5:3","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":876,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10030:9:3","memberName":"timestamp","nodeType":"MemberAccess","src":"10024:15:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10004:35:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":878,"nodeType":"ExpressionStatement","src":"10004:35:3"},{"eventCall":{"arguments":[{"id":880,"name":"_claimId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":847,"src":"10077:8:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":881,"name":"_payout","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":849,"src":"10087:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":879,"name":"ClaimApproved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":321,"src":"10063:13:3","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256)"}},"id":882,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10063:32:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":883,"nodeType":"EmitStatement","src":"10058:37:3"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":889,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":884,"name":"payoutManager","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":287,"src":"10168:13:3","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":887,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10193:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":886,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10185:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":885,"name":"address","nodeType":"ElementaryTypeName","src":"10185:7:3","typeDescriptions":{}}},"id":888,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10185:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10168:27:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":921,"nodeType":"IfStatement","src":"10164:369:3","trueBody":{"id":920,"nodeType":"Block","src":"10197:336:3","statements":[{"expression":{"arguments":[{"id":894,"name":"_claimId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":847,"src":"10254:8:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":895,"name":"claim","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":854,"src":"10264:5:3","typeDescriptions":{"typeIdentifier":"t_struct$_Claim_$241_storage_ptr","typeString":"struct ClaimsProcessor.Claim storage pointer"}},"id":896,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10270:8:3","memberName":"claimant","nodeType":"MemberAccess","referencedDeclaration":214,"src":"10264:14:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":897,"name":"_payout","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":849,"src":"10280:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":891,"name":"payoutManager","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":287,"src":"10225:13:3","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address_payable","typeString":"address payable"}],"id":890,"name":"PayoutManager","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1690,"src":"10211:13:3","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_PayoutManager_$1690_$","typeString":"type(contract PayoutManager)"}},"id":892,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10211:28:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_PayoutManager_$1690","typeString":"contract PayoutManager"}},"id":893,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10240:13:3","memberName":"processPayout","nodeType":"MemberAccess","referencedDeclaration":1468,"src":"10211:42:3","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_uint256_$_t_address_$_t_uint256_$returns$__$","typeString":"function (uint256,address,uint256) external"}},"id":898,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10211:77:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":899,"nodeType":"ExpressionStatement","src":"10211:77:3"},{"expression":{"arguments":[{"expression":{"id":904,"name":"claim","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":854,"src":"10402:5:3","typeDescriptions":{"typeIdentifier":"t_struct$_Claim_$241_storage_ptr","typeString":"struct ClaimsProcessor.Claim storage pointer"}},"id":905,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10408:8:3","memberName":"policyId","nodeType":"MemberAccess","referencedDeclaration":212,"src":"10402:14:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":906,"name":"_payout","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":849,"src":"10418:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":901,"name":"policyRegistry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":285,"src":"10373:14:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":900,"name":"PolicyRegistry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2136,"src":"10358:14:3","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_PolicyRegistry_$2136_$","typeString":"type(contract PolicyRegistry)"}},"id":902,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10358:30:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_PolicyRegistry_$2136","typeString":"contract PolicyRegistry"}},"id":903,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10389:12:3","memberName":"recordPayout","nodeType":"MemberAccess","referencedDeclaration":2063,"src":"10358:43:3","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256) external"}},"id":907,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10358:68:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":908,"nodeType":"ExpressionStatement","src":"10358:68:3"},{"expression":{"id":914,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":909,"name":"claim","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":854,"src":"10453:5:3","typeDescriptions":{"typeIdentifier":"t_struct$_Claim_$241_storage_ptr","typeString":"struct ClaimsProcessor.Claim storage pointer"}},"id":911,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"10459:6:3","memberName":"status","nodeType":"MemberAccess","referencedDeclaration":224,"src":"10453:12:3","typeDescriptions":{"typeIdentifier":"t_enum$_ClaimStatus_$248","typeString":"enum ClaimsProcessor.ClaimStatus"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":912,"name":"ClaimStatus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":248,"src":"10468:11:3","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_ClaimStatus_$248_$","typeString":"type(enum ClaimsProcessor.ClaimStatus)"}},"id":913,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10480:4:3","memberName":"Paid","nodeType":"MemberAccess","referencedDeclaration":247,"src":"10468:16:3","typeDescriptions":{"typeIdentifier":"t_enum$_ClaimStatus_$248","typeString":"enum ClaimsProcessor.ClaimStatus"}},"src":"10453:31:3","typeDescriptions":{"typeIdentifier":"t_enum$_ClaimStatus_$248","typeString":"enum ClaimsProcessor.ClaimStatus"}},"id":915,"nodeType":"ExpressionStatement","src":"10453:31:3"},{"eventCall":{"arguments":[{"id":917,"name":"_claimId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":847,"src":"10513:8:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":916,"name":"ClaimPaid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":331,"src":"10503:9:3","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":918,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10503:19:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":919,"nodeType":"EmitStatement","src":"10498:24:3"}]}}]},"documentation":{"id":845,"nodeType":"StructuredDocumentation","src":"9648:144:3","text":" @dev Internal function to approve a claim\n @param _claimId ID of the claim\n @param _payout Approved payout amount"},"id":923,"implemented":true,"kind":"function","modifiers":[],"name":"_approveClaim","nameLocation":"9806:13:3","nodeType":"FunctionDefinition","parameters":{"id":850,"nodeType":"ParameterList","parameters":[{"constant":false,"id":847,"mutability":"mutable","name":"_claimId","nameLocation":"9828:8:3","nodeType":"VariableDeclaration","scope":923,"src":"9820:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":846,"name":"uint256","nodeType":"ElementaryTypeName","src":"9820:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":849,"mutability":"mutable","name":"_payout","nameLocation":"9846:7:3","nodeType":"VariableDeclaration","scope":923,"src":"9838:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":848,"name":"uint256","nodeType":"ElementaryTypeName","src":"9838:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9819:35:3"},"returnParameters":{"id":851,"nodeType":"ParameterList","parameters":[],"src":"9864:0:3"},"scope":1242,"src":"9797:742:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":962,"nodeType":"Block","src":"10722:430:3","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":933,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":930,"name":"activeReviewers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":264,"src":"10740:15:3","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":931,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10756:6:3","memberName":"length","nodeType":"MemberAccess","src":"10740:22:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":932,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10765:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10740:26:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e6f2061637469766520726576696577657273","id":934,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10768:21:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_939bbbe0ab6bbecf5f08fc2bfe58c5c430d3320aab2ef92689c212873ceffe32","typeString":"literal_string \"No active reviewers\""},"value":"No active reviewers"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_939bbbe0ab6bbecf5f08fc2bfe58c5c430d3320aab2ef92689c212873ceffe32","typeString":"literal_string \"No active reviewers\""}],"id":929,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"10732:7:3","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":935,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10732:58:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":936,"nodeType":"ExpressionStatement","src":"10732:58:3"},{"expression":{"id":943,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":937,"name":"claims","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":253,"src":"10809:6:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Claim_$241_storage_$","typeString":"mapping(uint256 => struct ClaimsProcessor.Claim storage ref)"}},"id":939,"indexExpression":{"id":938,"name":"_claimId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":926,"src":"10816:8:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10809:16:3","typeDescriptions":{"typeIdentifier":"t_struct$_Claim_$241_storage","typeString":"struct ClaimsProcessor.Claim storage ref"}},"id":940,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"10826:6:3","memberName":"status","nodeType":"MemberAccess","referencedDeclaration":224,"src":"10809:23:3","typeDescriptions":{"typeIdentifier":"t_enum$_ClaimStatus_$248","typeString":"enum ClaimsProcessor.ClaimStatus"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":941,"name":"ClaimStatus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":248,"src":"10835:11:3","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_ClaimStatus_$248_$","typeString":"type(enum ClaimsProcessor.ClaimStatus)"}},"id":942,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10847:11:3","memberName":"UnderReview","nodeType":"MemberAccess","referencedDeclaration":244,"src":"10835:23:3","typeDescriptions":{"typeIdentifier":"t_enum$_ClaimStatus_$248","typeString":"enum ClaimsProcessor.ClaimStatus"}},"src":"10809:49:3","typeDescriptions":{"typeIdentifier":"t_enum$_ClaimStatus_$248","typeString":"enum ClaimsProcessor.ClaimStatus"}},"id":944,"nodeType":"ExpressionStatement","src":"10809:49:3"},{"assignments":[946],"declarations":[{"constant":false,"id":946,"mutability":"mutable","name":"requestId","nameLocation":"10885:9:3","nodeType":"VariableDeclaration","scope":962,"src":"10877:17:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":945,"name":"uint256","nodeType":"ElementaryTypeName","src":"10877:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":955,"initialValue":{"arguments":[{"id":949,"name":"vrfKeyHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":274,"src":"10944:10:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":950,"name":"vrfSubscriptionId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":272,"src":"10968:17:3","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"id":951,"name":"vrfRequestConfirmations","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":280,"src":"10999:23:3","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},{"id":952,"name":"vrfCallbackGasLimit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":277,"src":"11036:19:3","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"id":953,"name":"numWords","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":283,"src":"11069:8:3","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_uint16","typeString":"uint16"},{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_uint32","typeString":"uint32"}],"expression":{"id":947,"name":"vrfCoordinator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":270,"src":"10897:14:3","typeDescriptions":{"typeIdentifier":"t_contract$_VRFCoordinatorV2Interface_$199","typeString":"contract VRFCoordinatorV2Interface"}},"id":948,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10912:18:3","memberName":"requestRandomWords","nodeType":"MemberAccess","referencedDeclaration":132,"src":"10897:33:3","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_bytes32_$_t_uint64_$_t_uint16_$_t_uint32_$_t_uint32_$returns$_t_uint256_$","typeString":"function (bytes32,uint64,uint16,uint32,uint32) external returns (uint256)"}},"id":954,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10897:190:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10877:210:3"},{"expression":{"id":960,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":956,"name":"vrfRequestToClaim","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":257,"src":"11106:17:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":958,"indexExpression":{"id":957,"name":"requestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":946,"src":"11124:9:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"11106:28:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":959,"name":"_claimId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":926,"src":"11137:8:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11106:39:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":961,"nodeType":"ExpressionStatement","src":"11106:39:3"}]},"documentation":{"id":924,"nodeType":"StructuredDocumentation","src":"10549:109:3","text":" @dev Requests a random reviewer using Chainlink VRF\n @param _claimId ID of the claim"},"id":963,"implemented":true,"kind":"function","modifiers":[],"name":"_requestRandomReviewer","nameLocation":"10672:22:3","nodeType":"FunctionDefinition","parameters":{"id":927,"nodeType":"ParameterList","parameters":[{"constant":false,"id":926,"mutability":"mutable","name":"_claimId","nameLocation":"10703:8:3","nodeType":"VariableDeclaration","scope":963,"src":"10695:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":925,"name":"uint256","nodeType":"ElementaryTypeName","src":"10695:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10694:18:3"},"returnParameters":{"id":928,"nodeType":"ParameterList","parameters":[],"src":"10722:0:3"},"scope":1242,"src":"10663:489:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[30],"body":{"id":1032,"nodeType":"Block","src":"11428:705:3","statements":[{"assignments":[974],"declarations":[{"constant":false,"id":974,"mutability":"mutable","name":"claimId","nameLocation":"11446:7:3","nodeType":"VariableDeclaration","scope":1032,"src":"11438:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":973,"name":"uint256","nodeType":"ElementaryTypeName","src":"11438:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":978,"initialValue":{"baseExpression":{"id":975,"name":"vrfRequestToClaim","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":257,"src":"11456:17:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":977,"indexExpression":{"id":976,"name":"requestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":966,"src":"11474:9:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11456:28:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"11438:46:3"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":982,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":980,"name":"claimId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":974,"src":"11502:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":981,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11512:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11502:11:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"436c61696d206e6f7420666f756e64","id":983,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11515:17:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_a52fe57d7e8b59c21e4296ece9ccb6ee31a1612e4ebd5b995b667e1cfcf090fd","typeString":"literal_string \"Claim not found\""},"value":"Claim not found"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_a52fe57d7e8b59c21e4296ece9ccb6ee31a1612e4ebd5b995b667e1cfcf090fd","typeString":"literal_string \"Claim not found\""}],"id":979,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"11494:7:3","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":984,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11494:39:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":985,"nodeType":"ExpressionStatement","src":"11494:39:3"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":989,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":986,"name":"activeReviewers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":264,"src":"11599:15:3","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":987,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11615:6:3","memberName":"length","nodeType":"MemberAccess","src":"11599:22:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":988,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11625:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11599:27:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1004,"nodeType":"IfStatement","src":"11595:225:3","trueBody":{"id":1003,"nodeType":"Block","src":"11628:192:3","statements":[{"expression":{"id":995,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":990,"name":"claims","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":253,"src":"11698:6:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Claim_$241_storage_$","typeString":"mapping(uint256 => struct ClaimsProcessor.Claim storage ref)"}},"id":992,"indexExpression":{"id":991,"name":"claimId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":974,"src":"11705:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11698:15:3","typeDescriptions":{"typeIdentifier":"t_struct$_Claim_$241_storage","typeString":"struct ClaimsProcessor.Claim storage ref"}},"id":993,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"11714:16:3","memberName":"assignedReviewer","nodeType":"MemberAccess","referencedDeclaration":240,"src":"11698:32:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":994,"name":"admin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":291,"src":"11733:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"11698:40:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":996,"nodeType":"ExpressionStatement","src":"11698:40:3"},{"eventCall":{"arguments":[{"id":998,"name":"claimId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":974,"src":"11774:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":999,"name":"admin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":291,"src":"11783:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":997,"name":"ReviewerAssigned","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":315,"src":"11757:16:3","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_address_$returns$__$","typeString":"function (uint256,address)"}},"id":1000,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11757:32:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1001,"nodeType":"EmitStatement","src":"11752:37:3"},{"functionReturnParameters":972,"id":1002,"nodeType":"Return","src":"11803:7:3"}]}},{"assignments":[1006],"declarations":[{"constant":false,"id":1006,"mutability":"mutable","name":"reviewerIndex","nameLocation":"11846:13:3","nodeType":"VariableDeclaration","scope":1032,"src":"11838:21:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1005,"name":"uint256","nodeType":"ElementaryTypeName","src":"11838:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1013,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1012,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":1007,"name":"randomWords","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":969,"src":"11862:11:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":1009,"indexExpression":{"hexValue":"30","id":1008,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11874:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11862:14:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"expression":{"id":1010,"name":"activeReviewers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":264,"src":"11879:15:3","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":1011,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11895:6:3","memberName":"length","nodeType":"MemberAccess","src":"11879:22:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11862:39:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"11838:63:3"},{"assignments":[1015],"declarations":[{"constant":false,"id":1015,"mutability":"mutable","name":"selectedReviewer","nameLocation":"11919:16:3","nodeType":"VariableDeclaration","scope":1032,"src":"11911:24:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1014,"name":"address","nodeType":"ElementaryTypeName","src":"11911:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1019,"initialValue":{"baseExpression":{"id":1016,"name":"activeReviewers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":264,"src":"11938:15:3","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":1018,"indexExpression":{"id":1017,"name":"reviewerIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1006,"src":"11954:13:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11938:30:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"11911:57:3"},{"expression":{"id":1025,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":1020,"name":"claims","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":253,"src":"12017:6:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Claim_$241_storage_$","typeString":"mapping(uint256 => struct ClaimsProcessor.Claim storage ref)"}},"id":1022,"indexExpression":{"id":1021,"name":"claimId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":974,"src":"12024:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12017:15:3","typeDescriptions":{"typeIdentifier":"t_struct$_Claim_$241_storage","typeString":"struct ClaimsProcessor.Claim storage ref"}},"id":1023,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"12033:16:3","memberName":"assignedReviewer","nodeType":"MemberAccess","referencedDeclaration":240,"src":"12017:32:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1024,"name":"selectedReviewer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1015,"src":"12052:16:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"12017:51:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1026,"nodeType":"ExpressionStatement","src":"12017:51:3"},{"eventCall":{"arguments":[{"id":1028,"name":"claimId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":974,"src":"12100:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1029,"name":"selectedReviewer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1015,"src":"12109:16:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1027,"name":"ReviewerAssigned","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":315,"src":"12083:16:3","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_address_$returns$__$","typeString":"function (uint256,address)"}},"id":1030,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12083:43:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1031,"nodeType":"EmitStatement","src":"12078:48:3"}]},"documentation":{"id":964,"nodeType":"StructuredDocumentation","src":"11162:166:3","text":" @dev Callback function used by VRF Coordinator\n @param requestId ID of the VRF request\n @param randomWords Random words returned by VRF"},"id":1033,"implemented":true,"kind":"function","modifiers":[],"name":"fulfillRandomWords","nameLocation":"11342:18:3","nodeType":"FunctionDefinition","overrides":{"id":971,"nodeType":"OverrideSpecifier","overrides":[],"src":"11419:8:3"},"parameters":{"id":970,"nodeType":"ParameterList","parameters":[{"constant":false,"id":966,"mutability":"mutable","name":"requestId","nameLocation":"11369:9:3","nodeType":"VariableDeclaration","scope":1033,"src":"11361:17:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":965,"name":"uint256","nodeType":"ElementaryTypeName","src":"11361:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":969,"mutability":"mutable","name":"randomWords","nameLocation":"11397:11:3","nodeType":"VariableDeclaration","scope":1033,"src":"11380:28:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":967,"name":"uint256","nodeType":"ElementaryTypeName","src":"11380:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":968,"nodeType":"ArrayTypeName","src":"11380:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"11360:49:3"},"returnParameters":{"id":972,"nodeType":"ParameterList","parameters":[],"src":"11428:0:3"},"scope":1242,"src":"11333:800:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1115,"nodeType":"Block","src":"12369:612:3","statements":[{"assignments":[1043],"declarations":[{"constant":false,"id":1043,"mutability":"mutable","name":"count","nameLocation":"12387:5:3","nodeType":"VariableDeclaration","scope":1115,"src":"12379:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1042,"name":"uint256","nodeType":"ElementaryTypeName","src":"12379:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1045,"initialValue":{"hexValue":"30","id":1044,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12395:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"12379:17:3"},{"body":{"id":1067,"nodeType":"Block","src":"12515:97:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1061,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":1056,"name":"claims","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":253,"src":"12533:6:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Claim_$241_storage_$","typeString":"mapping(uint256 => struct ClaimsProcessor.Claim storage ref)"}},"id":1058,"indexExpression":{"id":1057,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1047,"src":"12540:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12533:9:3","typeDescriptions":{"typeIdentifier":"t_struct$_Claim_$241_storage","typeString":"struct ClaimsProcessor.Claim storage ref"}},"id":1059,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12543:8:3","memberName":"claimant","nodeType":"MemberAccess","referencedDeclaration":214,"src":"12533:18:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1060,"name":"_user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1036,"src":"12555:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"12533:27:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1066,"nodeType":"IfStatement","src":"12529:73:3","trueBody":{"id":1065,"nodeType":"Block","src":"12562:40:3","statements":[{"expression":{"id":1063,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"12580:7:3","subExpression":{"id":1062,"name":"count","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1043,"src":"12580:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1064,"nodeType":"ExpressionStatement","src":"12580:7:3"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1052,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1050,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1047,"src":"12493:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1051,"name":"nextClaimId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":267,"src":"12497:11:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12493:15:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1068,"initializationExpression":{"assignments":[1047],"declarations":[{"constant":false,"id":1047,"mutability":"mutable","name":"i","nameLocation":"12486:1:3","nodeType":"VariableDeclaration","scope":1068,"src":"12478:9:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1046,"name":"uint256","nodeType":"ElementaryTypeName","src":"12478:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1049,"initialValue":{"hexValue":"31","id":1048,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12490:1:3","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"VariableDeclarationStatement","src":"12478:13:3"},"loopExpression":{"expression":{"id":1054,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"12510:3:3","subExpression":{"id":1053,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1047,"src":"12510:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1055,"nodeType":"ExpressionStatement","src":"12510:3:3"},"nodeType":"ForStatement","src":"12473:139:3"},{"assignments":[1073],"declarations":[{"constant":false,"id":1073,"mutability":"mutable","name":"claimIds","nameLocation":"12647:8:3","nodeType":"VariableDeclaration","scope":1115,"src":"12630:25:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1071,"name":"uint256","nodeType":"ElementaryTypeName","src":"12630:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1072,"nodeType":"ArrayTypeName","src":"12630:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":1079,"initialValue":{"arguments":[{"id":1077,"name":"count","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1043,"src":"12672:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1076,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"12658:13:3","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"},"typeName":{"baseType":{"id":1074,"name":"uint256","nodeType":"ElementaryTypeName","src":"12662:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1075,"nodeType":"ArrayTypeName","src":"12662:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"id":1078,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12658:20:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"nodeType":"VariableDeclarationStatement","src":"12630:48:3"},{"assignments":[1081],"declarations":[{"constant":false,"id":1081,"mutability":"mutable","name":"index","nameLocation":"12696:5:3","nodeType":"VariableDeclaration","scope":1115,"src":"12688:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1080,"name":"uint256","nodeType":"ElementaryTypeName","src":"12688:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1083,"initialValue":{"hexValue":"30","id":1082,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12704:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"12688:17:3"},{"body":{"id":1111,"nodeType":"Block","src":"12807:134:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1099,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":1094,"name":"claims","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":253,"src":"12825:6:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Claim_$241_storage_$","typeString":"mapping(uint256 => struct ClaimsProcessor.Claim storage ref)"}},"id":1096,"indexExpression":{"id":1095,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1085,"src":"12832:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12825:9:3","typeDescriptions":{"typeIdentifier":"t_struct$_Claim_$241_storage","typeString":"struct ClaimsProcessor.Claim storage ref"}},"id":1097,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12835:8:3","memberName":"claimant","nodeType":"MemberAccess","referencedDeclaration":214,"src":"12825:18:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1098,"name":"_user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1036,"src":"12847:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"12825:27:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1110,"nodeType":"IfStatement","src":"12821:110:3","trueBody":{"id":1109,"nodeType":"Block","src":"12854:77:3","statements":[{"expression":{"id":1104,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1100,"name":"claimIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1073,"src":"12872:8:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":1102,"indexExpression":{"id":1101,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1081,"src":"12881:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"12872:15:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1103,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1085,"src":"12890:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12872:19:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1105,"nodeType":"ExpressionStatement","src":"12872:19:3"},{"expression":{"id":1107,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"12909:7:3","subExpression":{"id":1106,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1081,"src":"12909:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1108,"nodeType":"ExpressionStatement","src":"12909:7:3"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1090,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1088,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1085,"src":"12785:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1089,"name":"nextClaimId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":267,"src":"12789:11:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12785:15:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1112,"initializationExpression":{"assignments":[1085],"declarations":[{"constant":false,"id":1085,"mutability":"mutable","name":"i","nameLocation":"12778:1:3","nodeType":"VariableDeclaration","scope":1112,"src":"12770:9:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1084,"name":"uint256","nodeType":"ElementaryTypeName","src":"12770:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1087,"initialValue":{"hexValue":"31","id":1086,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12782:1:3","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"VariableDeclarationStatement","src":"12770:13:3"},"loopExpression":{"expression":{"id":1092,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"12802:3:3","subExpression":{"id":1091,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1085,"src":"12802:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1093,"nodeType":"ExpressionStatement","src":"12802:3:3"},"nodeType":"ForStatement","src":"12765:176:3"},{"expression":{"id":1113,"name":"claimIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1073,"src":"12966:8:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"functionReturnParameters":1041,"id":1114,"nodeType":"Return","src":"12959:15:3"}]},"documentation":{"id":1034,"nodeType":"StructuredDocumentation","src":"12143:142:3","text":" @dev Gets all claims submitted by a user\n @param _user Address of the user\n @return claimIds Array of claim IDs"},"functionSelector":"7bcb4a64","id":1116,"implemented":true,"kind":"function","modifiers":[],"name":"getUserClaims","nameLocation":"12299:13:3","nodeType":"FunctionDefinition","parameters":{"id":1037,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1036,"mutability":"mutable","name":"_user","nameLocation":"12321:5:3","nodeType":"VariableDeclaration","scope":1116,"src":"12313:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1035,"name":"address","nodeType":"ElementaryTypeName","src":"12313:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"12312:15:3"},"returnParameters":{"id":1041,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1040,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1116,"src":"12351:16:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1038,"name":"uint256","nodeType":"ElementaryTypeName","src":"12351:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1039,"nodeType":"ArrayTypeName","src":"12351:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"12350:18:3"},"scope":1242,"src":"12290:691:3","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":1216,"nodeType":"Block","src":"13184:763:3","statements":[{"assignments":[1126],"declarations":[{"constant":false,"id":1126,"mutability":"mutable","name":"count","nameLocation":"13202:5:3","nodeType":"VariableDeclaration","scope":1216,"src":"13194:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1125,"name":"uint256","nodeType":"ElementaryTypeName","src":"13194:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1128,"initialValue":{"hexValue":"30","id":1127,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13210:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"13194:17:3"},{"body":{"id":1159,"nodeType":"Block","src":"13327:174:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1153,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_ClaimStatus_$248","typeString":"enum ClaimsProcessor.ClaimStatus"},"id":1145,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":1139,"name":"claims","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":253,"src":"13345:6:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Claim_$241_storage_$","typeString":"mapping(uint256 => struct ClaimsProcessor.Claim storage ref)"}},"id":1141,"indexExpression":{"id":1140,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1130,"src":"13352:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"13345:9:3","typeDescriptions":{"typeIdentifier":"t_struct$_Claim_$241_storage","typeString":"struct ClaimsProcessor.Claim storage ref"}},"id":1142,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"13355:6:3","memberName":"status","nodeType":"MemberAccess","referencedDeclaration":224,"src":"13345:16:3","typeDescriptions":{"typeIdentifier":"t_enum$_ClaimStatus_$248","typeString":"enum ClaimsProcessor.ClaimStatus"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":1143,"name":"ClaimStatus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":248,"src":"13365:11:3","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_ClaimStatus_$248_$","typeString":"type(enum ClaimsProcessor.ClaimStatus)"}},"id":1144,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"13377:11:3","memberName":"UnderReview","nodeType":"MemberAccess","referencedDeclaration":244,"src":"13365:23:3","typeDescriptions":{"typeIdentifier":"t_enum$_ClaimStatus_$248","typeString":"enum ClaimsProcessor.ClaimStatus"}},"src":"13345:43:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1152,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":1146,"name":"claims","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":253,"src":"13409:6:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Claim_$241_storage_$","typeString":"mapping(uint256 => struct ClaimsProcessor.Claim storage ref)"}},"id":1148,"indexExpression":{"id":1147,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1130,"src":"13416:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"13409:9:3","typeDescriptions":{"typeIdentifier":"t_struct$_Claim_$241_storage","typeString":"struct ClaimsProcessor.Claim storage ref"}},"id":1149,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"13419:16:3","memberName":"assignedReviewer","nodeType":"MemberAccess","referencedDeclaration":240,"src":"13409:26:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":1150,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"13439:3:3","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1151,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13443:6:3","memberName":"sender","nodeType":"MemberAccess","src":"13439:10:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"13409:40:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"13345:104:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1158,"nodeType":"IfStatement","src":"13341:150:3","trueBody":{"id":1157,"nodeType":"Block","src":"13451:40:3","statements":[{"expression":{"id":1155,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"13469:7:3","subExpression":{"id":1154,"name":"count","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1126,"src":"13469:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1156,"nodeType":"ExpressionStatement","src":"13469:7:3"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1135,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1133,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1130,"src":"13305:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1134,"name":"nextClaimId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":267,"src":"13309:11:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13305:15:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1160,"initializationExpression":{"assignments":[1130],"declarations":[{"constant":false,"id":1130,"mutability":"mutable","name":"i","nameLocation":"13298:1:3","nodeType":"VariableDeclaration","scope":1160,"src":"13290:9:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1129,"name":"uint256","nodeType":"ElementaryTypeName","src":"13290:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1132,"initialValue":{"hexValue":"31","id":1131,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13302:1:3","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"VariableDeclarationStatement","src":"13290:13:3"},"loopExpression":{"expression":{"id":1137,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"13322:3:3","subExpression":{"id":1136,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1130,"src":"13322:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1138,"nodeType":"ExpressionStatement","src":"13322:3:3"},"nodeType":"ForStatement","src":"13285:216:3"},{"assignments":[1165],"declarations":[{"constant":false,"id":1165,"mutability":"mutable","name":"claimIds","nameLocation":"13536:8:3","nodeType":"VariableDeclaration","scope":1216,"src":"13519:25:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1163,"name":"uint256","nodeType":"ElementaryTypeName","src":"13519:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1164,"nodeType":"ArrayTypeName","src":"13519:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":1171,"initialValue":{"arguments":[{"id":1169,"name":"count","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1126,"src":"13561:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1168,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"13547:13:3","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"},"typeName":{"baseType":{"id":1166,"name":"uint256","nodeType":"ElementaryTypeName","src":"13551:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1167,"nodeType":"ArrayTypeName","src":"13551:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"id":1170,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13547:20:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"nodeType":"VariableDeclarationStatement","src":"13519:48:3"},{"assignments":[1173],"declarations":[{"constant":false,"id":1173,"mutability":"mutable","name":"index","nameLocation":"13585:5:3","nodeType":"VariableDeclaration","scope":1216,"src":"13577:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1172,"name":"uint256","nodeType":"ElementaryTypeName","src":"13577:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1175,"initialValue":{"hexValue":"30","id":1174,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13593:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"13577:17:3"},{"body":{"id":1212,"nodeType":"Block","src":"13696:211:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1200,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_ClaimStatus_$248","typeString":"enum ClaimsProcessor.ClaimStatus"},"id":1192,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":1186,"name":"claims","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":253,"src":"13714:6:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Claim_$241_storage_$","typeString":"mapping(uint256 => struct ClaimsProcessor.Claim storage ref)"}},"id":1188,"indexExpression":{"id":1187,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1177,"src":"13721:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"13714:9:3","typeDescriptions":{"typeIdentifier":"t_struct$_Claim_$241_storage","typeString":"struct ClaimsProcessor.Claim storage ref"}},"id":1189,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"13724:6:3","memberName":"status","nodeType":"MemberAccess","referencedDeclaration":224,"src":"13714:16:3","typeDescriptions":{"typeIdentifier":"t_enum$_ClaimStatus_$248","typeString":"enum ClaimsProcessor.ClaimStatus"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":1190,"name":"ClaimStatus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":248,"src":"13734:11:3","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_ClaimStatus_$248_$","typeString":"type(enum ClaimsProcessor.ClaimStatus)"}},"id":1191,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"13746:11:3","memberName":"UnderReview","nodeType":"MemberAccess","referencedDeclaration":244,"src":"13734:23:3","typeDescriptions":{"typeIdentifier":"t_enum$_ClaimStatus_$248","typeString":"enum ClaimsProcessor.ClaimStatus"}},"src":"13714:43:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1199,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":1193,"name":"claims","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":253,"src":"13778:6:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Claim_$241_storage_$","typeString":"mapping(uint256 => struct ClaimsProcessor.Claim storage ref)"}},"id":1195,"indexExpression":{"id":1194,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1177,"src":"13785:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"13778:9:3","typeDescriptions":{"typeIdentifier":"t_struct$_Claim_$241_storage","typeString":"struct ClaimsProcessor.Claim storage ref"}},"id":1196,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"13788:16:3","memberName":"assignedReviewer","nodeType":"MemberAccess","referencedDeclaration":240,"src":"13778:26:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":1197,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"13808:3:3","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1198,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13812:6:3","memberName":"sender","nodeType":"MemberAccess","src":"13808:10:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"13778:40:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"13714:104:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1211,"nodeType":"IfStatement","src":"13710:187:3","trueBody":{"id":1210,"nodeType":"Block","src":"13820:77:3","statements":[{"expression":{"id":1205,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1201,"name":"claimIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1165,"src":"13838:8:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":1203,"indexExpression":{"id":1202,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1173,"src":"13847:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"13838:15:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1204,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1177,"src":"13856:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13838:19:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1206,"nodeType":"ExpressionStatement","src":"13838:19:3"},{"expression":{"id":1208,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"13875:7:3","subExpression":{"id":1207,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1173,"src":"13875:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1209,"nodeType":"ExpressionStatement","src":"13875:7:3"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1182,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1180,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1177,"src":"13674:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1181,"name":"nextClaimId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":267,"src":"13678:11:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13674:15:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1213,"initializationExpression":{"assignments":[1177],"declarations":[{"constant":false,"id":1177,"mutability":"mutable","name":"i","nameLocation":"13667:1:3","nodeType":"VariableDeclaration","scope":1213,"src":"13659:9:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1176,"name":"uint256","nodeType":"ElementaryTypeName","src":"13659:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1179,"initialValue":{"hexValue":"31","id":1178,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13671:1:3","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"VariableDeclarationStatement","src":"13659:13:3"},"loopExpression":{"expression":{"id":1184,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"13691:3:3","subExpression":{"id":1183,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1177,"src":"13691:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1185,"nodeType":"ExpressionStatement","src":"13691:3:3"},"nodeType":"ForStatement","src":"13654:253:3"},{"expression":{"id":1214,"name":"claimIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1165,"src":"13932:8:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"functionReturnParameters":1124,"id":1215,"nodeType":"Return","src":"13925:15:3"}]},"documentation":{"id":1117,"nodeType":"StructuredDocumentation","src":"12991:104:3","text":" @dev Gets claims that require human review\n @return claimIds Array of claim IDs"},"functionSelector":"8c50fa1f","id":1217,"implemented":true,"kind":"function","modifiers":[{"id":1120,"kind":"modifierInvocation","modifierName":{"id":1119,"name":"onlyReviewer","nameLocations":["13144:12:3"],"nodeType":"IdentifierPath","referencedDeclaration":367,"src":"13144:12:3"},"nodeType":"ModifierInvocation","src":"13144:12:3"}],"name":"getClaimsForReview","nameLocation":"13109:18:3","nodeType":"FunctionDefinition","parameters":{"id":1118,"nodeType":"ParameterList","parameters":[],"src":"13127:2:3"},"returnParameters":{"id":1124,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1123,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1217,"src":"13166:16:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1121,"name":"uint256","nodeType":"ElementaryTypeName","src":"13166:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1122,"nodeType":"ArrayTypeName","src":"13166:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"13165:18:3"},"scope":1242,"src":"13100:847:3","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":1230,"nodeType":"Block","src":"14149:40:3","statements":[{"expression":{"baseExpression":{"id":1226,"name":"claims","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":253,"src":"14166:6:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Claim_$241_storage_$","typeString":"mapping(uint256 => struct ClaimsProcessor.Claim storage ref)"}},"id":1228,"indexExpression":{"id":1227,"name":"_claimId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1220,"src":"14173:8:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"14166:16:3","typeDescriptions":{"typeIdentifier":"t_struct$_Claim_$241_storage","typeString":"struct ClaimsProcessor.Claim storage ref"}},"functionReturnParameters":1225,"id":1229,"nodeType":"Return","src":"14159:23:3"}]},"documentation":{"id":1218,"nodeType":"StructuredDocumentation","src":"13957:114:3","text":" @dev Gets the claim details\n @param _claimId ID of the claim\n @return Claim details"},"functionSelector":"5aef2447","id":1231,"implemented":true,"kind":"function","modifiers":[],"name":"getClaim","nameLocation":"14085:8:3","nodeType":"FunctionDefinition","parameters":{"id":1221,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1220,"mutability":"mutable","name":"_claimId","nameLocation":"14102:8:3","nodeType":"VariableDeclaration","scope":1231,"src":"14094:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1219,"name":"uint256","nodeType":"ElementaryTypeName","src":"14094:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14093:18:3"},"returnParameters":{"id":1225,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1224,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1231,"src":"14135:12:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Claim_$241_memory_ptr","typeString":"struct ClaimsProcessor.Claim"},"typeName":{"id":1223,"nodeType":"UserDefinedTypeName","pathNode":{"id":1222,"name":"Claim","nameLocations":["14135:5:3"],"nodeType":"IdentifierPath","referencedDeclaration":241,"src":"14135:5:3"},"referencedDeclaration":241,"src":"14135:5:3","typeDescriptions":{"typeIdentifier":"t_struct$_Claim_$241_storage_ptr","typeString":"struct ClaimsProcessor.Claim"}},"visibility":"internal"}],"src":"14134:14:3"},"scope":1242,"src":"14076:113:3","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":1240,"nodeType":"Block","src":"14377:46:3","statements":[{"expression":{"expression":{"id":1237,"name":"activeReviewers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":264,"src":"14394:15:3","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":1238,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14410:6:3","memberName":"length","nodeType":"MemberAccess","src":"14394:22:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1236,"id":1239,"nodeType":"Return","src":"14387:29:3"}]},"documentation":{"id":1232,"nodeType":"StructuredDocumentation","src":"14199:109:3","text":" @dev Gets the number of active reviewers\n @return uint256 Number of active reviewers"},"functionSelector":"6ae2a1c9","id":1241,"implemented":true,"kind":"function","modifiers":[],"name":"getActiveReviewerCount","nameLocation":"14322:22:3","nodeType":"FunctionDefinition","parameters":{"id":1233,"nodeType":"ParameterList","parameters":[],"src":"14344:2:3"},"returnParameters":{"id":1236,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1235,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1241,"src":"14368:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1234,"name":"uint256","nodeType":"ElementaryTypeName","src":"14368:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14367:9:3"},"scope":1242,"src":"14313:110:3","stateMutability":"view","virtual":false,"visibility":"public"}],"scope":1243,"src":"388:14037:3","usedErrors":[8]}],"src":"32:14394:3"},"id":3},"contracts/PayoutManager.sol":{"ast":{"absolutePath":"contracts/PayoutManager.sol","exportedSymbols":{"AggregatorV3Interface":[103],"ClaimsProcessor":[1242],"PayoutManager":[1690]},"id":1691,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1244,"literals":["solidity","^","0.8",".19"],"nodeType":"PragmaDirective","src":"32:24:4"},{"absolutePath":"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol","file":"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol","id":1245,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1691,"sourceUnit":104,"src":"58:76:4","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/ClaimsProcessor.sol","file":"./ClaimsProcessor.sol","id":1246,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1691,"sourceUnit":1243,"src":"135:31:4","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"PayoutManager","contractDependencies":[],"contractKind":"contract","documentation":{"id":1247,"nodeType":"StructuredDocumentation","src":"168:85:4","text":" @title PayoutManager\n @dev Manages payouts for approved insurance claims"},"fullyImplemented":true,"id":1690,"linearizedBaseContracts":[1690],"name":"PayoutManager","nameLocation":"263:13:4","nodeType":"ContractDefinition","nodes":[{"canonicalName":"PayoutManager.Payout","id":1262,"members":[{"constant":false,"id":1249,"mutability":"mutable","name":"claimId","nameLocation":"315:7:4","nodeType":"VariableDeclaration","scope":1262,"src":"307:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1248,"name":"uint256","nodeType":"ElementaryTypeName","src":"307:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1251,"mutability":"mutable","name":"recipient","nameLocation":"340:9:4","nodeType":"VariableDeclaration","scope":1262,"src":"332:17:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1250,"name":"address","nodeType":"ElementaryTypeName","src":"332:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1253,"mutability":"mutable","name":"usdAmount","nameLocation":"367:9:4","nodeType":"VariableDeclaration","scope":1262,"src":"359:17:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1252,"name":"uint256","nodeType":"ElementaryTypeName","src":"359:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1255,"mutability":"mutable","name":"avaxAmount","nameLocation":"394:10:4","nodeType":"VariableDeclaration","scope":1262,"src":"386:18:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1254,"name":"uint256","nodeType":"ElementaryTypeName","src":"386:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1257,"mutability":"mutable","name":"timestamp","nameLocation":"422:9:4","nodeType":"VariableDeclaration","scope":1262,"src":"414:17:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1256,"name":"uint256","nodeType":"ElementaryTypeName","src":"414:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1259,"mutability":"mutable","name":"processed","nameLocation":"446:9:4","nodeType":"VariableDeclaration","scope":1262,"src":"441:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1258,"name":"bool","nodeType":"ElementaryTypeName","src":"441:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1261,"mutability":"mutable","name":"withdrawn","nameLocation":"470:9:4","nodeType":"VariableDeclaration","scope":1262,"src":"465:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1260,"name":"bool","nodeType":"ElementaryTypeName","src":"465:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"Payout","nameLocation":"290:6:4","nodeType":"StructDefinition","scope":1690,"src":"283:203:4","visibility":"public"},{"constant":false,"functionSelector":"29652e86","id":1267,"mutability":"mutable","name":"payouts","nameLocation":"530:7:4","nodeType":"VariableDeclaration","scope":1690,"src":"496:41:4","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Payout_$1262_storage_$","typeString":"mapping(uint256 => struct PayoutManager.Payout)"},"typeName":{"id":1266,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":1263,"name":"uint256","nodeType":"ElementaryTypeName","src":"504:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"496:26:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Payout_$1262_storage_$","typeString":"mapping(uint256 => struct PayoutManager.Payout)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":1265,"nodeType":"UserDefinedTypeName","pathNode":{"id":1264,"name":"Payout","nameLocations":["515:6:4"],"nodeType":"IdentifierPath","referencedDeclaration":1262,"src":"515:6:4"},"referencedDeclaration":1262,"src":"515:6:4","typeDescriptions":{"typeIdentifier":"t_struct$_Payout_$1262_storage_ptr","typeString":"struct PayoutManager.Payout"}}},"visibility":"public"},{"constant":false,"functionSelector":"27e235e3","id":1271,"mutability":"mutable","name":"balances","nameLocation":"578:8:4","nodeType":"VariableDeclaration","scope":1690,"src":"543:43:4","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":1270,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":1268,"name":"address","nodeType":"ElementaryTypeName","src":"551:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"543:27:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":1269,"name":"uint256","nodeType":"ElementaryTypeName","src":"562:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"public"},{"constant":false,"functionSelector":"536a7e4f","id":1273,"mutability":"mutable","name":"claimsProcessor","nameLocation":"612:15:4","nodeType":"VariableDeclaration","scope":1690,"src":"597:30:4","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1272,"name":"address","nodeType":"ElementaryTypeName","src":"597:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"constant":false,"functionSelector":"f851a440","id":1275,"mutability":"mutable","name":"admin","nameLocation":"648:5:4","nodeType":"VariableDeclaration","scope":1690,"src":"633:20:4","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1274,"name":"address","nodeType":"ElementaryTypeName","src":"633:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"constant":false,"functionSelector":"61d027b3","id":1277,"mutability":"mutable","name":"treasury","nameLocation":"674:8:4","nodeType":"VariableDeclaration","scope":1690,"src":"659:23:4","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1276,"name":"address","nodeType":"ElementaryTypeName","src":"659:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"constant":false,"functionSelector":"741bef1a","id":1280,"mutability":"mutable","name":"priceFeed","nameLocation":"717:9:4","nodeType":"VariableDeclaration","scope":1690,"src":"688:38:4","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_AggregatorV3Interface_$103","typeString":"contract AggregatorV3Interface"},"typeName":{"id":1279,"nodeType":"UserDefinedTypeName","pathNode":{"id":1278,"name":"AggregatorV3Interface","nameLocations":["688:21:4"],"nodeType":"IdentifierPath","referencedDeclaration":103,"src":"688:21:4"},"referencedDeclaration":103,"src":"688:21:4","typeDescriptions":{"typeIdentifier":"t_contract$_AggregatorV3Interface_$103","typeString":"contract AggregatorV3Interface"}},"visibility":"public"},{"constant":false,"functionSelector":"4089b170","id":1282,"mutability":"mutable","name":"totalPayouts","nameLocation":"779:12:4","nodeType":"VariableDeclaration","scope":1690,"src":"764:27:4","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1281,"name":"uint256","nodeType":"ElementaryTypeName","src":"764:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"4b319713","id":1284,"mutability":"mutable","name":"totalWithdrawn","nameLocation":"812:14:4","nodeType":"VariableDeclaration","scope":1690,"src":"797:29:4","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1283,"name":"uint256","nodeType":"ElementaryTypeName","src":"797:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"46fcff4c","id":1286,"mutability":"mutable","name":"availableFunds","nameLocation":"847:14:4","nodeType":"VariableDeclaration","scope":1690,"src":"832:29:4","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1285,"name":"uint256","nodeType":"ElementaryTypeName","src":"832:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"anonymous":false,"eventSelector":"b4aeb9fb59644d1c26001b986295cde5bbfae34be7c5240fbccf4c37308e20fe","id":1296,"name":"PayoutProcessed","nameLocation":"878:15:4","nodeType":"EventDefinition","parameters":{"id":1295,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1288,"indexed":true,"mutability":"mutable","name":"claimId","nameLocation":"910:7:4","nodeType":"VariableDeclaration","scope":1296,"src":"894:23:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1287,"name":"uint256","nodeType":"ElementaryTypeName","src":"894:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1290,"indexed":true,"mutability":"mutable","name":"recipient","nameLocation":"935:9:4","nodeType":"VariableDeclaration","scope":1296,"src":"919:25:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1289,"name":"address","nodeType":"ElementaryTypeName","src":"919:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1292,"indexed":false,"mutability":"mutable","name":"usdAmount","nameLocation":"954:9:4","nodeType":"VariableDeclaration","scope":1296,"src":"946:17:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1291,"name":"uint256","nodeType":"ElementaryTypeName","src":"946:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1294,"indexed":false,"mutability":"mutable","name":"avaxAmount","nameLocation":"973:10:4","nodeType":"VariableDeclaration","scope":1296,"src":"965:18:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1293,"name":"uint256","nodeType":"ElementaryTypeName","src":"965:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"893:91:4"},"src":"872:113:4"},{"anonymous":false,"eventSelector":"543ba50a5eec5e6178218e364b1d0f396157b3c8fa278522c2cb7fd99407d474","id":1302,"name":"FundsDeposited","nameLocation":"996:14:4","nodeType":"EventDefinition","parameters":{"id":1301,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1298,"indexed":true,"mutability":"mutable","name":"depositor","nameLocation":"1027:9:4","nodeType":"VariableDeclaration","scope":1302,"src":"1011:25:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1297,"name":"address","nodeType":"ElementaryTypeName","src":"1011:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1300,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"1046:6:4","nodeType":"VariableDeclaration","scope":1302,"src":"1038:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1299,"name":"uint256","nodeType":"ElementaryTypeName","src":"1038:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1010:43:4"},"src":"990:64:4"},{"anonymous":false,"eventSelector":"eaff4b37086828766ad3268786972c0cd24259d4c87a80f9d3963a3c3d999b0d","id":1308,"name":"FundsWithdrawn","nameLocation":"1065:14:4","nodeType":"EventDefinition","parameters":{"id":1307,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1304,"indexed":true,"mutability":"mutable","name":"recipient","nameLocation":"1096:9:4","nodeType":"VariableDeclaration","scope":1308,"src":"1080:25:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1303,"name":"address","nodeType":"ElementaryTypeName","src":"1080:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1306,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"1115:6:4","nodeType":"VariableDeclaration","scope":1308,"src":"1107:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1305,"name":"uint256","nodeType":"ElementaryTypeName","src":"1107:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1079:43:4"},"src":"1059:64:4"},{"body":{"id":1319,"nodeType":"Block","src":"1164:91:4","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1314,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1311,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1182:3:4","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1312,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1186:6:4","memberName":"sender","nodeType":"MemberAccess","src":"1182:10:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1313,"name":"claimsProcessor","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1273,"src":"1196:15:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1182:29:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f6e6c7920636c61696d732070726f636573736f72","id":1315,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1213:23:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_d946e8efee2ed894a02629bf2e61298eaf955afa8059b34b767c7a48ccd6d9f5","typeString":"literal_string \"Only claims processor\""},"value":"Only claims processor"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_d946e8efee2ed894a02629bf2e61298eaf955afa8059b34b767c7a48ccd6d9f5","typeString":"literal_string \"Only claims processor\""}],"id":1310,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1174:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1316,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1174:63:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1317,"nodeType":"ExpressionStatement","src":"1174:63:4"},{"id":1318,"nodeType":"PlaceholderStatement","src":"1247:1:4"}]},"id":1320,"name":"onlyClaimsProcessor","nameLocation":"1142:19:4","nodeType":"ModifierDefinition","parameters":{"id":1309,"nodeType":"ParameterList","parameters":[],"src":"1161:2:4"},"src":"1133:122:4","virtual":false,"visibility":"internal"},{"body":{"id":1331,"nodeType":"Block","src":"1286:70:4","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1326,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1323,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1304:3:4","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1324,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1308:6:4","memberName":"sender","nodeType":"MemberAccess","src":"1304:10:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1325,"name":"admin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1275,"src":"1318:5:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1304:19:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f6e6c792061646d696e","id":1327,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1325:12:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_519e47aa5cfea80d7d23bd065db30ac1713503a8d5ea05db2d0c02f784e636db","typeString":"literal_string \"Only admin\""},"value":"Only admin"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_519e47aa5cfea80d7d23bd065db30ac1713503a8d5ea05db2d0c02f784e636db","typeString":"literal_string \"Only admin\""}],"id":1322,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1296:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1328,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1296:42:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1329,"nodeType":"ExpressionStatement","src":"1296:42:4"},{"id":1330,"nodeType":"PlaceholderStatement","src":"1348:1:4"}]},"id":1332,"name":"onlyAdmin","nameLocation":"1274:9:4","nodeType":"ModifierDefinition","parameters":{"id":1321,"nodeType":"ParameterList","parameters":[],"src":"1283:2:4"},"src":"1265:91:4","virtual":false,"visibility":"internal"},{"body":{"id":1360,"nodeType":"Block","src":"1627:165:4","statements":[{"expression":{"id":1342,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1340,"name":"claimsProcessor","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1273,"src":"1637:15:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1341,"name":"_claimsProcessor","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1335,"src":"1655:16:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1637:34:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1343,"nodeType":"ExpressionStatement","src":"1637:34:4"},{"expression":{"id":1348,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1344,"name":"priceFeed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1280,"src":"1681:9:4","typeDescriptions":{"typeIdentifier":"t_contract$_AggregatorV3Interface_$103","typeString":"contract AggregatorV3Interface"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":1346,"name":"_priceFeed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1337,"src":"1715:10:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1345,"name":"AggregatorV3Interface","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":103,"src":"1693:21:4","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_AggregatorV3Interface_$103_$","typeString":"type(contract AggregatorV3Interface)"}},"id":1347,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1693:33:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_AggregatorV3Interface_$103","typeString":"contract AggregatorV3Interface"}},"src":"1681:45:4","typeDescriptions":{"typeIdentifier":"t_contract$_AggregatorV3Interface_$103","typeString":"contract AggregatorV3Interface"}},"id":1349,"nodeType":"ExpressionStatement","src":"1681:45:4"},{"expression":{"id":1353,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1350,"name":"admin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1275,"src":"1736:5:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":1351,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1744:3:4","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1352,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1748:6:4","memberName":"sender","nodeType":"MemberAccess","src":"1744:10:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1736:18:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1354,"nodeType":"ExpressionStatement","src":"1736:18:4"},{"expression":{"id":1358,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1355,"name":"treasury","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1277,"src":"1764:8:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":1356,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1775:3:4","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1357,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1779:6:4","memberName":"sender","nodeType":"MemberAccess","src":"1775:10:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1764:21:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1359,"nodeType":"ExpressionStatement","src":"1764:21:4"}]},"documentation":{"id":1333,"nodeType":"StructuredDocumentation","src":"1366:198:4","text":" @dev Constructor for PayoutManager\n @param _claimsProcessor Address of the ClaimsProcessor contract\n @param _priceFeed Address of the Chainlink Price Feed for AVAX/USD"},"id":1361,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":1338,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1335,"mutability":"mutable","name":"_claimsProcessor","nameLocation":"1589:16:4","nodeType":"VariableDeclaration","scope":1361,"src":"1581:24:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1334,"name":"address","nodeType":"ElementaryTypeName","src":"1581:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1337,"mutability":"mutable","name":"_priceFeed","nameLocation":"1615:10:4","nodeType":"VariableDeclaration","scope":1361,"src":"1607:18:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1336,"name":"address","nodeType":"ElementaryTypeName","src":"1607:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1580:46:4"},"returnParameters":{"id":1339,"nodeType":"ParameterList","parameters":[],"src":"1627:0:4"},"scope":1690,"src":"1569:223:4","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":1373,"nodeType":"Block","src":"1960:37:4","statements":[{"expression":{"id":1371,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1369,"name":"treasury","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1277,"src":"1970:8:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1370,"name":"_treasury","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1364,"src":"1981:9:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1970:20:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1372,"nodeType":"ExpressionStatement","src":"1970:20:4"}]},"documentation":{"id":1362,"nodeType":"StructuredDocumentation","src":"1802:94:4","text":" @dev Sets the treasury address\n @param _treasury New treasury address"},"functionSelector":"f0f44260","id":1374,"implemented":true,"kind":"function","modifiers":[{"id":1367,"kind":"modifierInvocation","modifierName":{"id":1366,"name":"onlyAdmin","nameLocations":["1950:9:4"],"nodeType":"IdentifierPath","referencedDeclaration":1332,"src":"1950:9:4"},"nodeType":"ModifierInvocation","src":"1950:9:4"}],"name":"setTreasury","nameLocation":"1910:11:4","nodeType":"FunctionDefinition","parameters":{"id":1365,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1364,"mutability":"mutable","name":"_treasury","nameLocation":"1930:9:4","nodeType":"VariableDeclaration","scope":1374,"src":"1922:17:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1363,"name":"address","nodeType":"ElementaryTypeName","src":"1922:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1921:19:4"},"returnParameters":{"id":1368,"nodeType":"ParameterList","parameters":[],"src":"1960:0:4"},"scope":1690,"src":"1901:96:4","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":1388,"nodeType":"Block","src":"2175:62:4","statements":[{"expression":{"id":1386,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1382,"name":"priceFeed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1280,"src":"2185:9:4","typeDescriptions":{"typeIdentifier":"t_contract$_AggregatorV3Interface_$103","typeString":"contract AggregatorV3Interface"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":1384,"name":"_priceFeed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1377,"src":"2219:10:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1383,"name":"AggregatorV3Interface","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":103,"src":"2197:21:4","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_AggregatorV3Interface_$103_$","typeString":"type(contract AggregatorV3Interface)"}},"id":1385,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2197:33:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_AggregatorV3Interface_$103","typeString":"contract AggregatorV3Interface"}},"src":"2185:45:4","typeDescriptions":{"typeIdentifier":"t_contract$_AggregatorV3Interface_$103","typeString":"contract AggregatorV3Interface"}},"id":1387,"nodeType":"ExpressionStatement","src":"2185:45:4"}]},"documentation":{"id":1375,"nodeType":"StructuredDocumentation","src":"2007:102:4","text":" @dev Updates the price feed address\n @param _priceFeed New price feed address"},"functionSelector":"724e78da","id":1389,"implemented":true,"kind":"function","modifiers":[{"id":1380,"kind":"modifierInvocation","modifierName":{"id":1379,"name":"onlyAdmin","nameLocations":["2165:9:4"],"nodeType":"IdentifierPath","referencedDeclaration":1332,"src":"2165:9:4"},"nodeType":"ModifierInvocation","src":"2165:9:4"}],"name":"setPriceFeed","nameLocation":"2123:12:4","nodeType":"FunctionDefinition","parameters":{"id":1378,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1377,"mutability":"mutable","name":"_priceFeed","nameLocation":"2144:10:4","nodeType":"VariableDeclaration","scope":1389,"src":"2136:18:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1376,"name":"address","nodeType":"ElementaryTypeName","src":"2136:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2135:20:4"},"returnParameters":{"id":1381,"nodeType":"ParameterList","parameters":[],"src":"2175:0:4"},"scope":1690,"src":"2114:123:4","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":1467,"nodeType":"Block","src":"2613:943:4","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1407,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":1402,"name":"payouts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1267,"src":"2631:7:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Payout_$1262_storage_$","typeString":"mapping(uint256 => struct PayoutManager.Payout storage ref)"}},"id":1404,"indexExpression":{"id":1403,"name":"_claimId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1392,"src":"2639:8:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2631:17:4","typeDescriptions":{"typeIdentifier":"t_struct$_Payout_$1262_storage","typeString":"struct PayoutManager.Payout storage ref"}},"id":1405,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2649:7:4","memberName":"claimId","nodeType":"MemberAccess","referencedDeclaration":1249,"src":"2631:25:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1406,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2660:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2631:30:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5061796f757420616c72656164792070726f636573736564","id":1408,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2663:26:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_f54947460f3c5ed63ec51da5aba0bfb5aafbc85ac94a1eb44438c9cc9bb52adf","typeString":"literal_string \"Payout already processed\""},"value":"Payout already processed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_f54947460f3c5ed63ec51da5aba0bfb5aafbc85ac94a1eb44438c9cc9bb52adf","typeString":"literal_string \"Payout already processed\""}],"id":1401,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2623:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1409,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2623:67:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1410,"nodeType":"ExpressionStatement","src":"2623:67:4"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1414,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1412,"name":"_usdAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1396,"src":"2708:10:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1413,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2721:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2708:14:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416d6f756e74206d75737420626520706f736974697665","id":1415,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2724:25:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_fbff1a1f6c2af74648d360c36de5f47b5c561797f493e9c58d33289d0ad24acc","typeString":"literal_string \"Amount must be positive\""},"value":"Amount must be positive"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_fbff1a1f6c2af74648d360c36de5f47b5c561797f493e9c58d33289d0ad24acc","typeString":"literal_string \"Amount must be positive\""}],"id":1411,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2700:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1416,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2700:50:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1417,"nodeType":"ExpressionStatement","src":"2700:50:4"},{"assignments":[1419],"declarations":[{"constant":false,"id":1419,"mutability":"mutable","name":"avaxAmount","nameLocation":"2835:10:4","nodeType":"VariableDeclaration","scope":1467,"src":"2827:18:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1418,"name":"uint256","nodeType":"ElementaryTypeName","src":"2827:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1423,"initialValue":{"arguments":[{"id":1421,"name":"_usdAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1396,"src":"2865:10:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1420,"name":"convertUSDToAVAX","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1511,"src":"2848:16:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) view returns (uint256)"}},"id":1422,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2848:28:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2827:49:4"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1427,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1425,"name":"availableFunds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1286,"src":"2960:14:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":1426,"name":"avaxAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1419,"src":"2978:10:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2960:28:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e73756666696369656e742066756e6473","id":1428,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2990:20:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_63452317cb6d597bef833f023ed2962a84dbd24c571e27629ed1e3056d6cfd8d","typeString":"literal_string \"Insufficient funds\""},"value":"Insufficient funds"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_63452317cb6d597bef833f023ed2962a84dbd24c571e27629ed1e3056d6cfd8d","typeString":"literal_string \"Insufficient funds\""}],"id":1424,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2952:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1429,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2952:59:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1430,"nodeType":"ExpressionStatement","src":"2952:59:4"},{"expression":{"id":1444,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1431,"name":"payouts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1267,"src":"3030:7:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Payout_$1262_storage_$","typeString":"mapping(uint256 => struct PayoutManager.Payout storage ref)"}},"id":1433,"indexExpression":{"id":1432,"name":"_claimId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1392,"src":"3038:8:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3030:17:4","typeDescriptions":{"typeIdentifier":"t_struct$_Payout_$1262_storage","typeString":"struct PayoutManager.Payout storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":1435,"name":"_claimId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1392,"src":"3080:8:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1436,"name":"_recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1394,"src":"3113:10:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1437,"name":"_usdAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1396,"src":"3148:10:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1438,"name":"avaxAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1419,"src":"3184:10:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":1439,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"3219:5:4","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":1440,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3225:9:4","memberName":"timestamp","nodeType":"MemberAccess","src":"3219:15:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"74727565","id":1441,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3259:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"hexValue":"66616c7365","id":1442,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3288:5:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":1434,"name":"Payout","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1262,"src":"3050:6:4","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Payout_$1262_storage_ptr_$","typeString":"type(struct PayoutManager.Payout storage pointer)"}},"id":1443,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["3071:7:4","3102:9:4","3137:9:4","3172:10:4","3208:9:4","3248:9:4","3277:9:4"],"names":["claimId","recipient","usdAmount","avaxAmount","timestamp","processed","withdrawn"],"nodeType":"FunctionCall","src":"3050:254:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Payout_$1262_memory_ptr","typeString":"struct PayoutManager.Payout memory"}},"src":"3030:274:4","typeDescriptions":{"typeIdentifier":"t_struct$_Payout_$1262_storage","typeString":"struct PayoutManager.Payout storage ref"}},"id":1445,"nodeType":"ExpressionStatement","src":"3030:274:4"},{"expression":{"id":1450,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1446,"name":"balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1271,"src":"3356:8:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1448,"indexExpression":{"id":1447,"name":"_recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1394,"src":"3365:10:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3356:20:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":1449,"name":"avaxAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1419,"src":"3380:10:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3356:34:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1451,"nodeType":"ExpressionStatement","src":"3356:34:4"},{"expression":{"id":1454,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1452,"name":"availableFunds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1286,"src":"3400:14:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":1453,"name":"avaxAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1419,"src":"3418:10:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3400:28:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1455,"nodeType":"ExpressionStatement","src":"3400:28:4"},{"expression":{"id":1458,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1456,"name":"totalPayouts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1282,"src":"3438:12:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":1457,"name":"avaxAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1419,"src":"3454:10:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3438:26:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1459,"nodeType":"ExpressionStatement","src":"3438:26:4"},{"eventCall":{"arguments":[{"id":1461,"name":"_claimId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1392,"src":"3504:8:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1462,"name":"_recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1394,"src":"3514:10:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1463,"name":"_usdAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1396,"src":"3526:10:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1464,"name":"avaxAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1419,"src":"3538:10:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1460,"name":"PayoutProcessed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1296,"src":"3488:15:4","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,address,uint256,uint256)"}},"id":1465,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3488:61:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1466,"nodeType":"EmitStatement","src":"3483:66:4"}]},"documentation":{"id":1390,"nodeType":"StructuredDocumentation","src":"2247:251:4","text":" @dev Process payout for an approved claim\n @param _claimId ID of the approved claim\n @param _recipient Address of the claim recipient\n @param _usdAmount Payout amount in USD (with 6 decimals, e.g., 1000000 = 1 USD)"},"functionSelector":"ca4c3346","id":1468,"implemented":true,"kind":"function","modifiers":[{"id":1399,"kind":"modifierInvocation","modifierName":{"id":1398,"name":"onlyClaimsProcessor","nameLocations":["2593:19:4"],"nodeType":"IdentifierPath","referencedDeclaration":1320,"src":"2593:19:4"},"nodeType":"ModifierInvocation","src":"2593:19:4"}],"name":"processPayout","nameLocation":"2512:13:4","nodeType":"FunctionDefinition","parameters":{"id":1397,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1392,"mutability":"mutable","name":"_claimId","nameLocation":"2534:8:4","nodeType":"VariableDeclaration","scope":1468,"src":"2526:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1391,"name":"uint256","nodeType":"ElementaryTypeName","src":"2526:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1394,"mutability":"mutable","name":"_recipient","nameLocation":"2552:10:4","nodeType":"VariableDeclaration","scope":1468,"src":"2544:18:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1393,"name":"address","nodeType":"ElementaryTypeName","src":"2544:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1396,"mutability":"mutable","name":"_usdAmount","nameLocation":"2572:10:4","nodeType":"VariableDeclaration","scope":1468,"src":"2564:18:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1395,"name":"uint256","nodeType":"ElementaryTypeName","src":"2564:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2525:58:4"},"returnParameters":{"id":1400,"nodeType":"ParameterList","parameters":[],"src":"2613:0:4"},"scope":1690,"src":"2503:1053:4","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":1510,"nodeType":"Block","src":"3852:628:4","statements":[{"assignments":[null,1477,null,null,null],"declarations":[null,{"constant":false,"id":1477,"mutability":"mutable","name":"price","nameLocation":"3926:5:4","nodeType":"VariableDeclaration","scope":1510,"src":"3919:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1476,"name":"int256","nodeType":"ElementaryTypeName","src":"3919:6:4","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},null,null,null],"id":1481,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":1478,"name":"priceFeed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1280,"src":"3940:9:4","typeDescriptions":{"typeIdentifier":"t_contract$_AggregatorV3Interface_$103","typeString":"contract AggregatorV3Interface"}},"id":1479,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3950:15:4","memberName":"latestRoundData","nodeType":"MemberAccess","referencedDeclaration":102,"src":"3940:25:4","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$","typeString":"function () view external returns (uint80,int256,uint256,uint256,uint80)"}},"id":1480,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3940:27:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$","typeString":"tuple(uint80,int256,uint256,uint256,uint80)"}},"nodeType":"VariableDeclarationStatement","src":"3916:51:4"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":1485,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1483,"name":"price","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1477,"src":"3985:5:4","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1484,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3993:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3985:9:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c69642070726963652064617461","id":1486,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3996:20:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_9fb8ed8f4f63eaf6404a5db76e72f8628610323cc9bbf9508fa3e6e9045a6dcb","typeString":"literal_string \"Invalid price data\""},"value":"Invalid price data"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9fb8ed8f4f63eaf6404a5db76e72f8628610323cc9bbf9508fa3e6e9045a6dcb","typeString":"literal_string \"Invalid price data\""}],"id":1482,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3977:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1487,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3977:40:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1488,"nodeType":"ExpressionStatement","src":"3977:40:4"},{"assignments":[1490],"declarations":[{"constant":false,"id":1490,"mutability":"mutable","name":"avaxUsdPrice","nameLocation":"4130:12:4","nodeType":"VariableDeclaration","scope":1510,"src":"4122:20:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1489,"name":"uint256","nodeType":"ElementaryTypeName","src":"4122:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1495,"initialValue":{"arguments":[{"id":1493,"name":"price","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1477,"src":"4153:5:4","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":1492,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4145:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1491,"name":"uint256","nodeType":"ElementaryTypeName","src":"4145:7:4","typeDescriptions":{}}},"id":1494,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4145:14:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4122:37:4"},{"assignments":[1497],"declarations":[{"constant":false,"id":1497,"mutability":"mutable","name":"avaxAmount","nameLocation":"4382:10:4","nodeType":"VariableDeclaration","scope":1510,"src":"4374:18:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1496,"name":"uint256","nodeType":"ElementaryTypeName","src":"4374:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1507,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1506,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1500,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1498,"name":"_usdAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1471,"src":"4396:10:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"31653138","id":1499,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4409:4:4","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"},"value":"1e18"},"src":"4396:17:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1501,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4395:19:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1504,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1502,"name":"avaxUsdPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1490,"src":"4418:12:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"316532","id":1503,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4433:3:4","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"value":"1e2"},"src":"4418:18:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1505,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4417:20:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4395:42:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4374:63:4"},{"expression":{"id":1508,"name":"avaxAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1497,"src":"4463:10:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1475,"id":1509,"nodeType":"Return","src":"4456:17:4"}]},"documentation":{"id":1469,"nodeType":"StructuredDocumentation","src":"3566:205:4","text":" @dev Convert USD amount to AVAX using Chainlink price feed\n @param _usdAmount Amount in USD (with 6 decimals)\n @return avaxAmount Equivalent amount in AVAX (with 18 decimals)"},"functionSelector":"c0348b07","id":1511,"implemented":true,"kind":"function","modifiers":[],"name":"convertUSDToAVAX","nameLocation":"3785:16:4","nodeType":"FunctionDefinition","parameters":{"id":1472,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1471,"mutability":"mutable","name":"_usdAmount","nameLocation":"3810:10:4","nodeType":"VariableDeclaration","scope":1511,"src":"3802:18:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1470,"name":"uint256","nodeType":"ElementaryTypeName","src":"3802:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3801:20:4"},"returnParameters":{"id":1475,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1474,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1511,"src":"3843:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1473,"name":"uint256","nodeType":"ElementaryTypeName","src":"3843:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3842:9:4"},"scope":1690,"src":"3776:704:4","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":1564,"nodeType":"Block","src":"4585:467:4","statements":[{"assignments":[1516],"declarations":[{"constant":false,"id":1516,"mutability":"mutable","name":"amount","nameLocation":"4603:6:4","nodeType":"VariableDeclaration","scope":1564,"src":"4595:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1515,"name":"uint256","nodeType":"ElementaryTypeName","src":"4595:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1521,"initialValue":{"baseExpression":{"id":1517,"name":"balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1271,"src":"4612:8:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1520,"indexExpression":{"expression":{"id":1518,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4621:3:4","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1519,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4625:6:4","memberName":"sender","nodeType":"MemberAccess","src":"4621:10:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4612:20:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4595:37:4"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1525,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1523,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1516,"src":"4650:6:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1524,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4659:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4650:10:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e6f2062616c616e636520746f207769746864726177","id":1526,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4662:24:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_af08831b689a6e21ff2a1d61127eae3e817b5eace5682b882b19cef960f308a5","typeString":"literal_string \"No balance to withdraw\""},"value":"No balance to withdraw"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_af08831b689a6e21ff2a1d61127eae3e817b5eace5682b882b19cef960f308a5","typeString":"literal_string \"No balance to withdraw\""}],"id":1522,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4642:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1527,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4642:45:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1528,"nodeType":"ExpressionStatement","src":"4642:45:4"},{"expression":{"id":1534,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1529,"name":"balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1271,"src":"4769:8:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1532,"indexExpression":{"expression":{"id":1530,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4778:3:4","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1531,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4782:6:4","memberName":"sender","nodeType":"MemberAccess","src":"4778:10:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4769:20:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":1533,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4792:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4769:24:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1535,"nodeType":"ExpressionStatement","src":"4769:24:4"},{"assignments":[1537,null],"declarations":[{"constant":false,"id":1537,"mutability":"mutable","name":"success","nameLocation":"4843:7:4","nodeType":"VariableDeclaration","scope":1564,"src":"4838:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1536,"name":"bool","nodeType":"ElementaryTypeName","src":"4838:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":1548,"initialValue":{"arguments":[{"hexValue":"","id":1546,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4896:2:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"arguments":[{"expression":{"id":1540,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4864:3:4","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1541,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4868:6:4","memberName":"sender","nodeType":"MemberAccess","src":"4864:10:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1539,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4856:8:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_payable_$","typeString":"type(address payable)"},"typeName":{"id":1538,"name":"address","nodeType":"ElementaryTypeName","src":"4856:8:4","stateMutability":"payable","typeDescriptions":{}}},"id":1542,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4856:19:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":1543,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4876:4:4","memberName":"call","nodeType":"MemberAccess","src":"4856:24:4","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1545,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":1544,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1516,"src":"4888:6:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"4856:39:4","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1547,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4856:43:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"4837:62:4"},{"expression":{"arguments":[{"id":1550,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1537,"src":"4917:7:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5472616e73666572206661696c6564","id":1551,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4926:17:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51","typeString":"literal_string \"Transfer failed\""},"value":"Transfer failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51","typeString":"literal_string \"Transfer failed\""}],"id":1549,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4909:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1552,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4909:35:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1553,"nodeType":"ExpressionStatement","src":"4909:35:4"},{"expression":{"id":1556,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1554,"name":"totalWithdrawn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1284,"src":"4963:14:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":1555,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1516,"src":"4981:6:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4963:24:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1557,"nodeType":"ExpressionStatement","src":"4963:24:4"},{"eventCall":{"arguments":[{"expression":{"id":1559,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5026:3:4","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1560,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5030:6:4","memberName":"sender","nodeType":"MemberAccess","src":"5026:10:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1561,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1516,"src":"5038:6:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1558,"name":"FundsWithdrawn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1308,"src":"5011:14:4","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":1562,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5011:34:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1563,"nodeType":"EmitStatement","src":"5006:39:4"}]},"documentation":{"id":1512,"nodeType":"StructuredDocumentation","src":"4490:61:4","text":" @dev Allow users to withdraw their balance"},"functionSelector":"3ccfd60b","id":1565,"implemented":true,"kind":"function","modifiers":[],"name":"withdraw","nameLocation":"4565:8:4","nodeType":"FunctionDefinition","parameters":{"id":1513,"nodeType":"ParameterList","parameters":[],"src":"4573:2:4"},"returnParameters":{"id":1514,"nodeType":"ParameterList","parameters":[],"src":"4585:0:4"},"scope":1690,"src":"4556:496:4","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":1581,"nodeType":"Block","src":"5147:96:4","statements":[{"expression":{"id":1572,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1569,"name":"availableFunds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1286,"src":"5157:14:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"expression":{"id":1570,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5175:3:4","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1571,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5179:5:4","memberName":"value","nodeType":"MemberAccess","src":"5175:9:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5157:27:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1573,"nodeType":"ExpressionStatement","src":"5157:27:4"},{"eventCall":{"arguments":[{"expression":{"id":1575,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5214:3:4","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1576,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5218:6:4","memberName":"sender","nodeType":"MemberAccess","src":"5214:10:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":1577,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5226:3:4","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1578,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5230:5:4","memberName":"value","nodeType":"MemberAccess","src":"5226:9:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1574,"name":"FundsDeposited","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1302,"src":"5199:14:4","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":1579,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5199:37:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1580,"nodeType":"EmitStatement","src":"5194:42:4"}]},"documentation":{"id":1566,"nodeType":"StructuredDocumentation","src":"5062:53:4","text":" @dev Deposit funds to the contract"},"id":1582,"implemented":true,"kind":"receive","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":1567,"nodeType":"ParameterList","parameters":[],"src":"5127:2:4"},"returnParameters":{"id":1568,"nodeType":"ParameterList","parameters":[],"src":"5147:0:4"},"scope":1690,"src":"5120:123:4","stateMutability":"payable","virtual":false,"visibility":"external"},{"body":{"id":1598,"nodeType":"Block","src":"5347:96:4","statements":[{"expression":{"id":1589,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1586,"name":"availableFunds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1286,"src":"5357:14:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"expression":{"id":1587,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5375:3:4","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1588,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5379:5:4","memberName":"value","nodeType":"MemberAccess","src":"5375:9:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5357:27:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1590,"nodeType":"ExpressionStatement","src":"5357:27:4"},{"eventCall":{"arguments":[{"expression":{"id":1592,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5414:3:4","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1593,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5418:6:4","memberName":"sender","nodeType":"MemberAccess","src":"5414:10:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":1594,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5426:3:4","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1595,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5430:5:4","memberName":"value","nodeType":"MemberAccess","src":"5426:9:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1591,"name":"FundsDeposited","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1302,"src":"5399:14:4","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":1596,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5399:37:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1597,"nodeType":"EmitStatement","src":"5394:42:4"}]},"documentation":{"id":1583,"nodeType":"StructuredDocumentation","src":"5253:53:4","text":" @dev Allows admin to deposit funds"},"functionSelector":"d0e30db0","id":1599,"implemented":true,"kind":"function","modifiers":[],"name":"deposit","nameLocation":"5320:7:4","nodeType":"FunctionDefinition","parameters":{"id":1584,"nodeType":"ParameterList","parameters":[],"src":"5327:2:4"},"returnParameters":{"id":1585,"nodeType":"ParameterList","parameters":[],"src":"5347:0:4"},"scope":1690,"src":"5311:132:4","stateMutability":"payable","virtual":false,"visibility":"external"},{"body":{"id":1648,"nodeType":"Block","src":"5636:343:4","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1618,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1608,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1602,"src":"5654:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1617,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1615,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":1611,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"5673:4:4","typeDescriptions":{"typeIdentifier":"t_contract$_PayoutManager_$1690","typeString":"contract PayoutManager"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_PayoutManager_$1690","typeString":"contract PayoutManager"}],"id":1610,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5665:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1609,"name":"address","nodeType":"ElementaryTypeName","src":"5665:7:4","typeDescriptions":{}}},"id":1612,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5665:13:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1613,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5679:7:4","memberName":"balance","nodeType":"MemberAccess","src":"5665:21:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":1614,"name":"totalPayouts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1282,"src":"5689:12:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5665:36:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":1616,"name":"totalWithdrawn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1284,"src":"5704:14:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5665:53:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5654:64:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4578636565647320617661696c61626c652066756e6473","id":1619,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5720:25:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_4f053e2eb7382a639ae44876ccda3e2d10d3826253a2603258d257b7de6375f8","typeString":"literal_string \"Exceeds available funds\""},"value":"Exceeds available funds"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_4f053e2eb7382a639ae44876ccda3e2d10d3826253a2603258d257b7de6375f8","typeString":"literal_string \"Exceeds available funds\""}],"id":1607,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5646:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1620,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5646:100:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1621,"nodeType":"ExpressionStatement","src":"5646:100:4"},{"expression":{"id":1624,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1622,"name":"availableFunds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1286,"src":"5765:14:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":1623,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1602,"src":"5783:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5765:25:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1625,"nodeType":"ExpressionStatement","src":"5765:25:4"},{"assignments":[1627,null],"declarations":[{"constant":false,"id":1627,"mutability":"mutable","name":"success","nameLocation":"5815:7:4","nodeType":"VariableDeclaration","scope":1648,"src":"5810:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1626,"name":"bool","nodeType":"ElementaryTypeName","src":"5810:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":1637,"initialValue":{"arguments":[{"hexValue":"","id":1635,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5867:2:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"arguments":[{"id":1630,"name":"treasury","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1277,"src":"5836:8:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1629,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5828:8:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_payable_$","typeString":"type(address payable)"},"typeName":{"id":1628,"name":"address","nodeType":"ElementaryTypeName","src":"5828:8:4","stateMutability":"payable","typeDescriptions":{}}},"id":1631,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5828:17:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":1632,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5846:4:4","memberName":"call","nodeType":"MemberAccess","src":"5828:22:4","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1634,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":1633,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1602,"src":"5858:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"5828:38:4","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1636,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5828:42:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"5809:61:4"},{"expression":{"arguments":[{"id":1639,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1627,"src":"5888:7:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5472616e73666572206661696c6564","id":1640,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5897:17:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51","typeString":"literal_string \"Transfer failed\""},"value":"Transfer failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51","typeString":"literal_string \"Transfer failed\""}],"id":1638,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5880:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1641,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5880:35:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1642,"nodeType":"ExpressionStatement","src":"5880:35:4"},{"eventCall":{"arguments":[{"id":1644,"name":"treasury","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1277,"src":"5954:8:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1645,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1602,"src":"5964:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1643,"name":"FundsWithdrawn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1308,"src":"5939:14:4","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":1646,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5939:33:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1647,"nodeType":"EmitStatement","src":"5934:38:4"}]},"documentation":{"id":1600,"nodeType":"StructuredDocumentation","src":"5453:114:4","text":" @dev Allows admin to withdraw excess funds to treasury\n @param _amount Amount to withdraw"},"functionSelector":"abae70c5","id":1649,"implemented":true,"kind":"function","modifiers":[{"id":1605,"kind":"modifierInvocation","modifierName":{"id":1604,"name":"onlyAdmin","nameLocations":["5626:9:4"],"nodeType":"IdentifierPath","referencedDeclaration":1332,"src":"5626:9:4"},"nodeType":"ModifierInvocation","src":"5626:9:4"}],"name":"withdrawToTreasury","nameLocation":"5581:18:4","nodeType":"FunctionDefinition","parameters":{"id":1603,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1602,"mutability":"mutable","name":"_amount","nameLocation":"5608:7:4","nodeType":"VariableDeclaration","scope":1649,"src":"5600:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1601,"name":"uint256","nodeType":"ElementaryTypeName","src":"5600:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5599:17:4"},"returnParameters":{"id":1606,"nodeType":"ParameterList","parameters":[],"src":"5636:0:4"},"scope":1690,"src":"5572:407:4","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":1662,"nodeType":"Block","src":"6199:41:4","statements":[{"expression":{"baseExpression":{"id":1658,"name":"payouts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1267,"src":"6216:7:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Payout_$1262_storage_$","typeString":"mapping(uint256 => struct PayoutManager.Payout storage ref)"}},"id":1660,"indexExpression":{"id":1659,"name":"_claimId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1652,"src":"6224:8:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6216:17:4","typeDescriptions":{"typeIdentifier":"t_struct$_Payout_$1262_storage","typeString":"struct PayoutManager.Payout storage ref"}},"functionReturnParameters":1657,"id":1661,"nodeType":"Return","src":"6209:24:4"}]},"documentation":{"id":1650,"nodeType":"StructuredDocumentation","src":"5989:123:4","text":" @dev Get payout details for a claim\n @param _claimId ID of the claim\n @return Payout details"},"functionSelector":"1faa0414","id":1663,"implemented":true,"kind":"function","modifiers":[],"name":"getPayoutDetails","nameLocation":"6126:16:4","nodeType":"FunctionDefinition","parameters":{"id":1653,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1652,"mutability":"mutable","name":"_claimId","nameLocation":"6151:8:4","nodeType":"VariableDeclaration","scope":1663,"src":"6143:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1651,"name":"uint256","nodeType":"ElementaryTypeName","src":"6143:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6142:18:4"},"returnParameters":{"id":1657,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1656,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1663,"src":"6184:13:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Payout_$1262_memory_ptr","typeString":"struct PayoutManager.Payout"},"typeName":{"id":1655,"nodeType":"UserDefinedTypeName","pathNode":{"id":1654,"name":"Payout","nameLocations":["6184:6:4"],"nodeType":"IdentifierPath","referencedDeclaration":1262,"src":"6184:6:4"},"referencedDeclaration":1262,"src":"6184:6:4","typeDescriptions":{"typeIdentifier":"t_struct$_Payout_$1262_storage_ptr","typeString":"struct PayoutManager.Payout"}},"visibility":"internal"}],"src":"6183:15:4"},"scope":1690,"src":"6117:123:4","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":1675,"nodeType":"Block","src":"6459:39:4","statements":[{"expression":{"baseExpression":{"id":1671,"name":"balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1271,"src":"6476:8:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1673,"indexExpression":{"id":1672,"name":"_user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1666,"src":"6485:5:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6476:15:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1670,"id":1674,"nodeType":"Return","src":"6469:22:4"}]},"documentation":{"id":1664,"nodeType":"StructuredDocumentation","src":"6250:133:4","text":" @dev Get user's withdrawable balance\n @param _user Address of the user\n @return balance User's balance"},"functionSelector":"47734892","id":1676,"implemented":true,"kind":"function","modifiers":[],"name":"getUserBalance","nameLocation":"6397:14:4","nodeType":"FunctionDefinition","parameters":{"id":1667,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1666,"mutability":"mutable","name":"_user","nameLocation":"6420:5:4","nodeType":"VariableDeclaration","scope":1676,"src":"6412:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1665,"name":"address","nodeType":"ElementaryTypeName","src":"6412:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6411:15:4"},"returnParameters":{"id":1670,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1669,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1676,"src":"6450:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1668,"name":"uint256","nodeType":"ElementaryTypeName","src":"6450:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6449:9:4"},"scope":1690,"src":"6388:110:4","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":1688,"nodeType":"Block","src":"6657:45:4","statements":[{"expression":{"expression":{"arguments":[{"id":1684,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"6682:4:4","typeDescriptions":{"typeIdentifier":"t_contract$_PayoutManager_$1690","typeString":"contract PayoutManager"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_PayoutManager_$1690","typeString":"contract PayoutManager"}],"id":1683,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6674:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1682,"name":"address","nodeType":"ElementaryTypeName","src":"6674:7:4","typeDescriptions":{}}},"id":1685,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6674:13:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1686,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6688:7:4","memberName":"balance","nodeType":"MemberAccess","src":"6674:21:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1681,"id":1687,"nodeType":"Return","src":"6667:28:4"}]},"documentation":{"id":1677,"nodeType":"StructuredDocumentation","src":"6508:82:4","text":" @dev Get contract balance\n @return Total contract balance"},"functionSelector":"6f9fb98a","id":1689,"implemented":true,"kind":"function","modifiers":[],"name":"getContractBalance","nameLocation":"6604:18:4","nodeType":"FunctionDefinition","parameters":{"id":1678,"nodeType":"ParameterList","parameters":[],"src":"6622:2:4"},"returnParameters":{"id":1681,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1680,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1689,"src":"6648:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1679,"name":"uint256","nodeType":"ElementaryTypeName","src":"6648:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6647:9:4"},"scope":1690,"src":"6595:107:4","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1691,"src":"254:6450:4","usedErrors":[]}],"src":"32:6673:4"},"id":4},"contracts/PolicyRegistry.sol":{"ast":{"absolutePath":"contracts/PolicyRegistry.sol","exportedSymbols":{"PolicyRegistry":[2136]},"id":2137,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1692,"literals":["solidity","^","0.8",".19"],"nodeType":"PragmaDirective","src":"32:24:5"},{"abstract":false,"baseContracts":[],"canonicalName":"PolicyRegistry","contractDependencies":[],"contractKind":"contract","documentation":{"id":1693,"nodeType":"StructuredDocumentation","src":"58:94:5","text":" @title PolicyRegistry\n @dev Stores insurance policies and manages their lifecycle"},"fullyImplemented":true,"id":2136,"linearizedBaseContracts":[2136],"name":"PolicyRegistry","nameLocation":"162:14:5","nodeType":"ContractDefinition","nodes":[{"canonicalName":"PolicyRegistry.Policy","id":1716,"members":[{"constant":false,"id":1695,"mutability":"mutable","name":"policyId","nameLocation":"215:8:5","nodeType":"VariableDeclaration","scope":1716,"src":"207:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1694,"name":"uint256","nodeType":"ElementaryTypeName","src":"207:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1697,"mutability":"mutable","name":"policyholder","nameLocation":"241:12:5","nodeType":"VariableDeclaration","scope":1716,"src":"233:20:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1696,"name":"address","nodeType":"ElementaryTypeName","src":"233:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1699,"mutability":"mutable","name":"premium","nameLocation":"271:7:5","nodeType":"VariableDeclaration","scope":1716,"src":"263:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1698,"name":"uint256","nodeType":"ElementaryTypeName","src":"263:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1701,"mutability":"mutable","name":"coverage","nameLocation":"296:8:5","nodeType":"VariableDeclaration","scope":1716,"src":"288:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1700,"name":"uint256","nodeType":"ElementaryTypeName","src":"288:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1703,"mutability":"mutable","name":"deductible","nameLocation":"322:10:5","nodeType":"VariableDeclaration","scope":1716,"src":"314:18:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1702,"name":"uint256","nodeType":"ElementaryTypeName","src":"314:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1705,"mutability":"mutable","name":"policyType","nameLocation":"349:10:5","nodeType":"VariableDeclaration","scope":1716,"src":"342:17:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":1704,"name":"string","nodeType":"ElementaryTypeName","src":"342:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1707,"mutability":"mutable","name":"startDate","nameLocation":"415:9:5","nodeType":"VariableDeclaration","scope":1716,"src":"407:17:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1706,"name":"uint256","nodeType":"ElementaryTypeName","src":"407:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1709,"mutability":"mutable","name":"endDate","nameLocation":"442:7:5","nodeType":"VariableDeclaration","scope":1716,"src":"434:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1708,"name":"uint256","nodeType":"ElementaryTypeName","src":"434:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1711,"mutability":"mutable","name":"isActive","nameLocation":"464:8:5","nodeType":"VariableDeclaration","scope":1716,"src":"459:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1710,"name":"bool","nodeType":"ElementaryTypeName","src":"459:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1713,"mutability":"mutable","name":"claimsCount","nameLocation":"490:11:5","nodeType":"VariableDeclaration","scope":1716,"src":"482:19:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1712,"name":"uint256","nodeType":"ElementaryTypeName","src":"482:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1715,"mutability":"mutable","name":"totalPayouts","nameLocation":"519:12:5","nodeType":"VariableDeclaration","scope":1716,"src":"511:20:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1714,"name":"uint256","nodeType":"ElementaryTypeName","src":"511:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"Policy","nameLocation":"190:6:5","nodeType":"StructDefinition","scope":2136,"src":"183:355:5","visibility":"public"},{"constant":false,"functionSelector":"d3e89483","id":1721,"mutability":"mutable","name":"policies","nameLocation":"582:8:5","nodeType":"VariableDeclaration","scope":2136,"src":"548:42:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Policy_$1716_storage_$","typeString":"mapping(uint256 => struct PolicyRegistry.Policy)"},"typeName":{"id":1720,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":1717,"name":"uint256","nodeType":"ElementaryTypeName","src":"556:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"548:26:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Policy_$1716_storage_$","typeString":"mapping(uint256 => struct PolicyRegistry.Policy)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":1719,"nodeType":"UserDefinedTypeName","pathNode":{"id":1718,"name":"Policy","nameLocations":["567:6:5"],"nodeType":"IdentifierPath","referencedDeclaration":1716,"src":"567:6:5"},"referencedDeclaration":1716,"src":"567:6:5","typeDescriptions":{"typeIdentifier":"t_struct$_Policy_$1716_storage_ptr","typeString":"struct PolicyRegistry.Policy"}}},"visibility":"public"},{"constant":false,"functionSelector":"3d36adc5","id":1726,"mutability":"mutable","name":"userPolicies","nameLocation":"633:12:5","nodeType":"VariableDeclaration","scope":2136,"src":"596:49:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$","typeString":"mapping(address => uint256[])"},"typeName":{"id":1725,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":1722,"name":"address","nodeType":"ElementaryTypeName","src":"604:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"596:29:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$","typeString":"mapping(address => uint256[])"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"baseType":{"id":1723,"name":"uint256","nodeType":"ElementaryTypeName","src":"615:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1724,"nodeType":"ArrayTypeName","src":"615:9:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"visibility":"public"},{"constant":false,"functionSelector":"cad0b8db","id":1729,"mutability":"mutable","name":"nextPolicyId","nameLocation":"671:12:5","nodeType":"VariableDeclaration","scope":2136,"src":"656:31:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1727,"name":"uint256","nodeType":"ElementaryTypeName","src":"656:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"31","id":1728,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"686:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"visibility":"public"},{"constant":false,"functionSelector":"f851a440","id":1731,"mutability":"mutable","name":"admin","nameLocation":"708:5:5","nodeType":"VariableDeclaration","scope":2136,"src":"693:20:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1730,"name":"address","nodeType":"ElementaryTypeName","src":"693:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"constant":false,"functionSelector":"536a7e4f","id":1733,"mutability":"mutable","name":"claimsProcessor","nameLocation":"734:15:5","nodeType":"VariableDeclaration","scope":2136,"src":"719:30:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1732,"name":"address","nodeType":"ElementaryTypeName","src":"719:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"anonymous":false,"eventSelector":"692975d6d42aec50e0f6ff672acde3bf011e71355ed86dd49de0a1f533950cba","id":1739,"name":"PolicyCreated","nameLocation":"766:13:5","nodeType":"EventDefinition","parameters":{"id":1738,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1735,"indexed":true,"mutability":"mutable","name":"policyId","nameLocation":"796:8:5","nodeType":"VariableDeclaration","scope":1739,"src":"780:24:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1734,"name":"uint256","nodeType":"ElementaryTypeName","src":"780:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1737,"indexed":true,"mutability":"mutable","name":"policyholder","nameLocation":"822:12:5","nodeType":"VariableDeclaration","scope":1739,"src":"806:28:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1736,"name":"address","nodeType":"ElementaryTypeName","src":"806:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"779:56:5"},"src":"760:76:5"},{"anonymous":false,"eventSelector":"912ce63c438aca9d2f50d1d12de5b42efbcc84ce223b08122e8c2e3c000ca1f8","id":1743,"name":"PolicyUpdated","nameLocation":"847:13:5","nodeType":"EventDefinition","parameters":{"id":1742,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1741,"indexed":true,"mutability":"mutable","name":"policyId","nameLocation":"877:8:5","nodeType":"VariableDeclaration","scope":1743,"src":"861:24:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1740,"name":"uint256","nodeType":"ElementaryTypeName","src":"861:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"860:26:5"},"src":"841:46:5"},{"anonymous":false,"eventSelector":"bb1ae509b65d9486a686f3f1b0435353031b5607109dc80aa4d063887e10f3e8","id":1747,"name":"PolicyCancelled","nameLocation":"898:15:5","nodeType":"EventDefinition","parameters":{"id":1746,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1745,"indexed":true,"mutability":"mutable","name":"policyId","nameLocation":"930:8:5","nodeType":"VariableDeclaration","scope":1747,"src":"914:24:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1744,"name":"uint256","nodeType":"ElementaryTypeName","src":"914:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"913:26:5"},"src":"892:48:5"},{"anonymous":false,"eventSelector":"de9d9328490fbf56bf6fb489ad69f4cc297e9642da86fbd4f5c823494a4e01f6","id":1753,"name":"ClaimCountUpdated","nameLocation":"951:17:5","nodeType":"EventDefinition","parameters":{"id":1752,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1749,"indexed":true,"mutability":"mutable","name":"policyId","nameLocation":"985:8:5","nodeType":"VariableDeclaration","scope":1753,"src":"969:24:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1748,"name":"uint256","nodeType":"ElementaryTypeName","src":"969:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1751,"indexed":false,"mutability":"mutable","name":"newCount","nameLocation":"1003:8:5","nodeType":"VariableDeclaration","scope":1753,"src":"995:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1750,"name":"uint256","nodeType":"ElementaryTypeName","src":"995:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"968:44:5"},"src":"945:68:5"},{"anonymous":false,"eventSelector":"899732479a7415c852b353630c0c7aa1a6f275d4e17e3196363d995b3e1da72f","id":1759,"name":"PayoutRecorded","nameLocation":"1024:14:5","nodeType":"EventDefinition","parameters":{"id":1758,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1755,"indexed":true,"mutability":"mutable","name":"policyId","nameLocation":"1055:8:5","nodeType":"VariableDeclaration","scope":1759,"src":"1039:24:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1754,"name":"uint256","nodeType":"ElementaryTypeName","src":"1039:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1757,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"1073:6:5","nodeType":"VariableDeclaration","scope":1759,"src":"1065:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1756,"name":"uint256","nodeType":"ElementaryTypeName","src":"1065:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1038:42:5"},"src":"1018:63:5"},{"body":{"id":1770,"nodeType":"Block","src":"1112:70:5","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1765,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1762,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1130:3:5","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1763,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1134:6:5","memberName":"sender","nodeType":"MemberAccess","src":"1130:10:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1764,"name":"admin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1731,"src":"1144:5:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1130:19:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f6e6c792061646d696e","id":1766,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1151:12:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_519e47aa5cfea80d7d23bd065db30ac1713503a8d5ea05db2d0c02f784e636db","typeString":"literal_string \"Only admin\""},"value":"Only admin"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_519e47aa5cfea80d7d23bd065db30ac1713503a8d5ea05db2d0c02f784e636db","typeString":"literal_string \"Only admin\""}],"id":1761,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1122:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1767,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1122:42:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1768,"nodeType":"ExpressionStatement","src":"1122:42:5"},{"id":1769,"nodeType":"PlaceholderStatement","src":"1174:1:5"}]},"id":1771,"name":"onlyAdmin","nameLocation":"1100:9:5","nodeType":"ModifierDefinition","parameters":{"id":1760,"nodeType":"ParameterList","parameters":[],"src":"1109:2:5"},"src":"1091:91:5","virtual":false,"visibility":"internal"},{"body":{"id":1782,"nodeType":"Block","src":"1223:91:5","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1777,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1774,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1241:3:5","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1775,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1245:6:5","memberName":"sender","nodeType":"MemberAccess","src":"1241:10:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1776,"name":"claimsProcessor","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1733,"src":"1255:15:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1241:29:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f6e6c7920636c61696d732070726f636573736f72","id":1778,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1272:23:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_d946e8efee2ed894a02629bf2e61298eaf955afa8059b34b767c7a48ccd6d9f5","typeString":"literal_string \"Only claims processor\""},"value":"Only claims processor"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_d946e8efee2ed894a02629bf2e61298eaf955afa8059b34b767c7a48ccd6d9f5","typeString":"literal_string \"Only claims processor\""}],"id":1773,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1233:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1779,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1233:63:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1780,"nodeType":"ExpressionStatement","src":"1233:63:5"},{"id":1781,"nodeType":"PlaceholderStatement","src":"1306:1:5"}]},"id":1783,"name":"onlyClaimsProcessor","nameLocation":"1201:19:5","nodeType":"ModifierDefinition","parameters":{"id":1772,"nodeType":"ParameterList","parameters":[],"src":"1220:2:5"},"src":"1192:122:5","virtual":false,"visibility":"internal"},{"body":{"id":1791,"nodeType":"Block","src":"1338:35:5","statements":[{"expression":{"id":1789,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1786,"name":"admin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1731,"src":"1348:5:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":1787,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1356:3:5","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1788,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1360:6:5","memberName":"sender","nodeType":"MemberAccess","src":"1356:10:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1348:18:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1790,"nodeType":"ExpressionStatement","src":"1348:18:5"}]},"id":1792,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":1784,"nodeType":"ParameterList","parameters":[],"src":"1335:2:5"},"returnParameters":{"id":1785,"nodeType":"ParameterList","parameters":[],"src":"1338:0:5"},"scope":2136,"src":"1324:49:5","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":1804,"nodeType":"Block","src":"1606:51:5","statements":[{"expression":{"id":1802,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1800,"name":"claimsProcessor","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1733,"src":"1616:15:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1801,"name":"_claimsProcessor","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1795,"src":"1634:16:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1616:34:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1803,"nodeType":"ExpressionStatement","src":"1616:34:5"}]},"documentation":{"id":1793,"nodeType":"StructuredDocumentation","src":"1383:145:5","text":" @dev Sets the address of the claims processor contract\n @param _claimsProcessor Address of the claims processor contract"},"functionSelector":"3a8e94f5","id":1805,"implemented":true,"kind":"function","modifiers":[{"id":1798,"kind":"modifierInvocation","modifierName":{"id":1797,"name":"onlyAdmin","nameLocations":["1596:9:5"],"nodeType":"IdentifierPath","referencedDeclaration":1771,"src":"1596:9:5"},"nodeType":"ModifierInvocation","src":"1596:9:5"}],"name":"setClaimsProcessor","nameLocation":"1542:18:5","nodeType":"FunctionDefinition","parameters":{"id":1796,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1795,"mutability":"mutable","name":"_claimsProcessor","nameLocation":"1569:16:5","nodeType":"VariableDeclaration","scope":1805,"src":"1561:24:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1794,"name":"address","nodeType":"ElementaryTypeName","src":"1561:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1560:26:5"},"returnParameters":{"id":1799,"nodeType":"ParameterList","parameters":[],"src":"1606:0:5"},"scope":2136,"src":"1533:124:5","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":1866,"nodeType":"Block","src":"2357:633:5","statements":[{"assignments":[1826],"declarations":[{"constant":false,"id":1826,"mutability":"mutable","name":"policyId","nameLocation":"2375:8:5","nodeType":"VariableDeclaration","scope":1866,"src":"2367:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1825,"name":"uint256","nodeType":"ElementaryTypeName","src":"2367:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1829,"initialValue":{"id":1828,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"2386:14:5","subExpression":{"id":1827,"name":"nextPolicyId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1729,"src":"2386:12:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2367:33:5"},{"expression":{"id":1850,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1830,"name":"policies","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1721,"src":"2419:8:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Policy_$1716_storage_$","typeString":"mapping(uint256 => struct PolicyRegistry.Policy storage ref)"}},"id":1832,"indexExpression":{"id":1831,"name":"policyId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1826,"src":"2428:8:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2419:18:5","typeDescriptions":{"typeIdentifier":"t_struct$_Policy_$1716_storage","typeString":"struct PolicyRegistry.Policy storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":1834,"name":"policyId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1826,"src":"2471:8:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1835,"name":"_policyholder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1808,"src":"2507:13:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1836,"name":"_premium","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1810,"src":"2543:8:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1837,"name":"_coverage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1812,"src":"2575:9:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1838,"name":"_deductible","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1814,"src":"2610:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1839,"name":"_policyType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1816,"src":"2647:11:5","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"expression":{"id":1840,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"2683:5:5","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":1841,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2689:9:5","memberName":"timestamp","nodeType":"MemberAccess","src":"2683:15:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1845,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1842,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"2721:5:5","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":1843,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2727:9:5","memberName":"timestamp","nodeType":"MemberAccess","src":"2721:15:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":1844,"name":"_duration","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1818,"src":"2739:9:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2721:27:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"74727565","id":1846,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2772:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"hexValue":"30","id":1847,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2803:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"hexValue":"30","id":1848,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2832:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1833,"name":"Policy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1716,"src":"2440:6:5","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Policy_$1716_storage_ptr_$","typeString":"type(struct PolicyRegistry.Policy storage pointer)"}},"id":1849,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["2461:8:5","2493:12:5","2534:7:5","2565:8:5","2598:10:5","2635:10:5","2672:9:5","2712:7:5","2762:8:5","2790:11:5","2818:12:5"],"names":["policyId","policyholder","premium","coverage","deductible","policyType","startDate","endDate","isActive","claimsCount","totalPayouts"],"nodeType":"FunctionCall","src":"2440:404:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Policy_$1716_memory_ptr","typeString":"struct PolicyRegistry.Policy memory"}},"src":"2419:425:5","typeDescriptions":{"typeIdentifier":"t_struct$_Policy_$1716_storage","typeString":"struct PolicyRegistry.Policy storage ref"}},"id":1851,"nodeType":"ExpressionStatement","src":"2419:425:5"},{"expression":{"arguments":[{"id":1856,"name":"policyId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1826,"src":"2896:8:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"baseExpression":{"id":1852,"name":"userPolicies","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1726,"src":"2863:12:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$","typeString":"mapping(address => uint256[] storage ref)"}},"id":1854,"indexExpression":{"id":1853,"name":"_policyholder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1808,"src":"2876:13:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2863:27:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"id":1855,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2891:4:5","memberName":"push","nodeType":"MemberAccess","src":"2863:32:5","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$__$attached_to$_t_array$_t_uint256_$dyn_storage_ptr_$","typeString":"function (uint256[] storage pointer,uint256)"}},"id":1857,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2863:42:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1858,"nodeType":"ExpressionStatement","src":"2863:42:5"},{"eventCall":{"arguments":[{"id":1860,"name":"policyId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1826,"src":"2934:8:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1861,"name":"_policyholder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1808,"src":"2944:13:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1859,"name":"PolicyCreated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1739,"src":"2920:13:5","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_address_$returns$__$","typeString":"function (uint256,address)"}},"id":1862,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2920:38:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1863,"nodeType":"EmitStatement","src":"2915:43:5"},{"expression":{"id":1864,"name":"policyId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1826,"src":"2975:8:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1824,"id":1865,"nodeType":"Return","src":"2968:15:5"}]},"documentation":{"id":1806,"nodeType":"StructuredDocumentation","src":"1667:445:5","text":" @dev Creates a new insurance policy\n @param _policyholder Address of the policyholder\n @param _premium Premium amount in wei\n @param _coverage Coverage amount in wei\n @param _deductible Deductible amount in wei\n @param _policyType Type of policy (auto, home, health, travel)\n @param _duration Duration of the policy in seconds\n @return policyId Unique identifier of the created policy"},"functionSelector":"76d0629e","id":1867,"implemented":true,"kind":"function","modifiers":[{"id":1821,"kind":"modifierInvocation","modifierName":{"id":1820,"name":"onlyAdmin","nameLocations":["2329:9:5"],"nodeType":"IdentifierPath","referencedDeclaration":1771,"src":"2329:9:5"},"nodeType":"ModifierInvocation","src":"2329:9:5"}],"name":"createPolicy","nameLocation":"2126:12:5","nodeType":"FunctionDefinition","parameters":{"id":1819,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1808,"mutability":"mutable","name":"_policyholder","nameLocation":"2156:13:5","nodeType":"VariableDeclaration","scope":1867,"src":"2148:21:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1807,"name":"address","nodeType":"ElementaryTypeName","src":"2148:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1810,"mutability":"mutable","name":"_premium","nameLocation":"2187:8:5","nodeType":"VariableDeclaration","scope":1867,"src":"2179:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1809,"name":"uint256","nodeType":"ElementaryTypeName","src":"2179:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1812,"mutability":"mutable","name":"_coverage","nameLocation":"2213:9:5","nodeType":"VariableDeclaration","scope":1867,"src":"2205:17:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1811,"name":"uint256","nodeType":"ElementaryTypeName","src":"2205:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1814,"mutability":"mutable","name":"_deductible","nameLocation":"2240:11:5","nodeType":"VariableDeclaration","scope":1867,"src":"2232:19:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1813,"name":"uint256","nodeType":"ElementaryTypeName","src":"2232:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1816,"mutability":"mutable","name":"_policyType","nameLocation":"2275:11:5","nodeType":"VariableDeclaration","scope":1867,"src":"2261:25:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1815,"name":"string","nodeType":"ElementaryTypeName","src":"2261:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1818,"mutability":"mutable","name":"_duration","nameLocation":"2304:9:5","nodeType":"VariableDeclaration","scope":1867,"src":"2296:17:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1817,"name":"uint256","nodeType":"ElementaryTypeName","src":"2296:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2138:181:5"},"returnParameters":{"id":1824,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1823,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1867,"src":"2348:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1822,"name":"uint256","nodeType":"ElementaryTypeName","src":"2348:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2347:9:5"},"scope":2136,"src":"2117:873:5","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":1941,"nodeType":"Block","src":"3478:475:5","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1889,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":1884,"name":"policies","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1721,"src":"3496:8:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Policy_$1716_storage_$","typeString":"mapping(uint256 => struct PolicyRegistry.Policy storage ref)"}},"id":1886,"indexExpression":{"id":1885,"name":"_policyId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1870,"src":"3505:9:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3496:19:5","typeDescriptions":{"typeIdentifier":"t_struct$_Policy_$1716_storage","typeString":"struct PolicyRegistry.Policy storage ref"}},"id":1887,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3516:8:5","memberName":"policyId","nodeType":"MemberAccess","referencedDeclaration":1695,"src":"3496:28:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1888,"name":"_policyId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1870,"src":"3528:9:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3496:41:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"506f6c69637920646f6573206e6f74206578697374","id":1890,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3539:23:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_aea652f5dac653440c85b7b5cb25e1f01b03401ac09a38650f9eeed5ddd5b2ce","typeString":"literal_string \"Policy does not exist\""},"value":"Policy does not exist"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_aea652f5dac653440c85b7b5cb25e1f01b03401ac09a38650f9eeed5ddd5b2ce","typeString":"literal_string \"Policy does not exist\""}],"id":1883,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3488:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1891,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3488:75:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1892,"nodeType":"ExpressionStatement","src":"3488:75:5"},{"expression":{"arguments":[{"expression":{"baseExpression":{"id":1894,"name":"policies","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1721,"src":"3581:8:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Policy_$1716_storage_$","typeString":"mapping(uint256 => struct PolicyRegistry.Policy storage ref)"}},"id":1896,"indexExpression":{"id":1895,"name":"_policyId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1870,"src":"3590:9:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3581:19:5","typeDescriptions":{"typeIdentifier":"t_struct$_Policy_$1716_storage","typeString":"struct PolicyRegistry.Policy storage ref"}},"id":1897,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3601:8:5","memberName":"isActive","nodeType":"MemberAccess","referencedDeclaration":1711,"src":"3581:28:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"506f6c696379206973206e6f7420616374697665","id":1898,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3611:22:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_99080d22dc18f564531d11cbb7ad7b1f889534fb07f6e0fe0a38b3a0e018c0d9","typeString":"literal_string \"Policy is not active\""},"value":"Policy is not active"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_99080d22dc18f564531d11cbb7ad7b1f889534fb07f6e0fe0a38b3a0e018c0d9","typeString":"literal_string \"Policy is not active\""}],"id":1893,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3573:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1899,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3573:61:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1900,"nodeType":"ExpressionStatement","src":"3573:61:5"},{"assignments":[1903],"declarations":[{"constant":false,"id":1903,"mutability":"mutable","name":"policy","nameLocation":"3668:6:5","nodeType":"VariableDeclaration","scope":1941,"src":"3653:21:5","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Policy_$1716_storage_ptr","typeString":"struct PolicyRegistry.Policy"},"typeName":{"id":1902,"nodeType":"UserDefinedTypeName","pathNode":{"id":1901,"name":"Policy","nameLocations":["3653:6:5"],"nodeType":"IdentifierPath","referencedDeclaration":1716,"src":"3653:6:5"},"referencedDeclaration":1716,"src":"3653:6:5","typeDescriptions":{"typeIdentifier":"t_struct$_Policy_$1716_storage_ptr","typeString":"struct PolicyRegistry.Policy"}},"visibility":"internal"}],"id":1907,"initialValue":{"baseExpression":{"id":1904,"name":"policies","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1721,"src":"3677:8:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Policy_$1716_storage_$","typeString":"mapping(uint256 => struct PolicyRegistry.Policy storage ref)"}},"id":1906,"indexExpression":{"id":1905,"name":"_policyId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1870,"src":"3686:9:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3677:19:5","typeDescriptions":{"typeIdentifier":"t_struct$_Policy_$1716_storage","typeString":"struct PolicyRegistry.Policy storage ref"}},"nodeType":"VariableDeclarationStatement","src":"3653:43:5"},{"expression":{"id":1912,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":1908,"name":"policy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1903,"src":"3706:6:5","typeDescriptions":{"typeIdentifier":"t_struct$_Policy_$1716_storage_ptr","typeString":"struct PolicyRegistry.Policy storage pointer"}},"id":1910,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"3713:7:5","memberName":"premium","nodeType":"MemberAccess","referencedDeclaration":1699,"src":"3706:14:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1911,"name":"_premium","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1872,"src":"3723:8:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3706:25:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1913,"nodeType":"ExpressionStatement","src":"3706:25:5"},{"expression":{"id":1918,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":1914,"name":"policy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1903,"src":"3741:6:5","typeDescriptions":{"typeIdentifier":"t_struct$_Policy_$1716_storage_ptr","typeString":"struct PolicyRegistry.Policy storage pointer"}},"id":1916,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"3748:8:5","memberName":"coverage","nodeType":"MemberAccess","referencedDeclaration":1701,"src":"3741:15:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1917,"name":"_coverage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1874,"src":"3759:9:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3741:27:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1919,"nodeType":"ExpressionStatement","src":"3741:27:5"},{"expression":{"id":1924,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":1920,"name":"policy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1903,"src":"3778:6:5","typeDescriptions":{"typeIdentifier":"t_struct$_Policy_$1716_storage_ptr","typeString":"struct PolicyRegistry.Policy storage pointer"}},"id":1922,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"3785:10:5","memberName":"deductible","nodeType":"MemberAccess","referencedDeclaration":1703,"src":"3778:17:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1923,"name":"_deductible","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1876,"src":"3798:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3778:31:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1925,"nodeType":"ExpressionStatement","src":"3778:31:5"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1928,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1926,"name":"_duration","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1878,"src":"3832:9:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1927,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3844:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3832:13:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1936,"nodeType":"IfStatement","src":"3828:71:5","trueBody":{"id":1935,"nodeType":"Block","src":"3847:52:5","statements":[{"expression":{"id":1933,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":1929,"name":"policy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1903,"src":"3861:6:5","typeDescriptions":{"typeIdentifier":"t_struct$_Policy_$1716_storage_ptr","typeString":"struct PolicyRegistry.Policy storage pointer"}},"id":1931,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"3868:7:5","memberName":"endDate","nodeType":"MemberAccess","referencedDeclaration":1709,"src":"3861:14:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":1932,"name":"_duration","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1878,"src":"3879:9:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3861:27:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1934,"nodeType":"ExpressionStatement","src":"3861:27:5"}]}},{"eventCall":{"arguments":[{"id":1938,"name":"_policyId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1870,"src":"3936:9:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1937,"name":"PolicyUpdated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1743,"src":"3922:13:5","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":1939,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3922:24:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1940,"nodeType":"EmitStatement","src":"3917:29:5"}]},"documentation":{"id":1868,"nodeType":"StructuredDocumentation","src":"3000:290:5","text":" @dev Updates an existing policy\n @param _policyId ID of the policy to update\n @param _premium New premium amount\n @param _coverage New coverage amount\n @param _deductible New deductible amount\n @param _duration Additional duration in seconds"},"functionSelector":"26d13b00","id":1942,"implemented":true,"kind":"function","modifiers":[{"id":1881,"kind":"modifierInvocation","modifierName":{"id":1880,"name":"onlyAdmin","nameLocations":["3468:9:5"],"nodeType":"IdentifierPath","referencedDeclaration":1771,"src":"3468:9:5"},"nodeType":"ModifierInvocation","src":"3468:9:5"}],"name":"updatePolicy","nameLocation":"3304:12:5","nodeType":"FunctionDefinition","parameters":{"id":1879,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1870,"mutability":"mutable","name":"_policyId","nameLocation":"3334:9:5","nodeType":"VariableDeclaration","scope":1942,"src":"3326:17:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1869,"name":"uint256","nodeType":"ElementaryTypeName","src":"3326:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1872,"mutability":"mutable","name":"_premium","nameLocation":"3361:8:5","nodeType":"VariableDeclaration","scope":1942,"src":"3353:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1871,"name":"uint256","nodeType":"ElementaryTypeName","src":"3353:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1874,"mutability":"mutable","name":"_coverage","nameLocation":"3387:9:5","nodeType":"VariableDeclaration","scope":1942,"src":"3379:17:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1873,"name":"uint256","nodeType":"ElementaryTypeName","src":"3379:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1876,"mutability":"mutable","name":"_deductible","nameLocation":"3414:11:5","nodeType":"VariableDeclaration","scope":1942,"src":"3406:19:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1875,"name":"uint256","nodeType":"ElementaryTypeName","src":"3406:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1878,"mutability":"mutable","name":"_duration","nameLocation":"3443:9:5","nodeType":"VariableDeclaration","scope":1942,"src":"3435:17:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1877,"name":"uint256","nodeType":"ElementaryTypeName","src":"3435:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3316:142:5"},"returnParameters":{"id":1882,"nodeType":"ParameterList","parameters":[],"src":"3478:0:5"},"scope":2136,"src":"3295:658:5","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":1979,"nodeType":"Block","src":"4129:265:5","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1956,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":1951,"name":"policies","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1721,"src":"4147:8:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Policy_$1716_storage_$","typeString":"mapping(uint256 => struct PolicyRegistry.Policy storage ref)"}},"id":1953,"indexExpression":{"id":1952,"name":"_policyId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1945,"src":"4156:9:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4147:19:5","typeDescriptions":{"typeIdentifier":"t_struct$_Policy_$1716_storage","typeString":"struct PolicyRegistry.Policy storage ref"}},"id":1954,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4167:8:5","memberName":"policyId","nodeType":"MemberAccess","referencedDeclaration":1695,"src":"4147:28:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1955,"name":"_policyId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1945,"src":"4179:9:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4147:41:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"506f6c69637920646f6573206e6f74206578697374","id":1957,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4190:23:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_aea652f5dac653440c85b7b5cb25e1f01b03401ac09a38650f9eeed5ddd5b2ce","typeString":"literal_string \"Policy does not exist\""},"value":"Policy does not exist"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_aea652f5dac653440c85b7b5cb25e1f01b03401ac09a38650f9eeed5ddd5b2ce","typeString":"literal_string \"Policy does not exist\""}],"id":1950,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4139:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1958,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4139:75:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1959,"nodeType":"ExpressionStatement","src":"4139:75:5"},{"expression":{"arguments":[{"expression":{"baseExpression":{"id":1961,"name":"policies","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1721,"src":"4232:8:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Policy_$1716_storage_$","typeString":"mapping(uint256 => struct PolicyRegistry.Policy storage ref)"}},"id":1963,"indexExpression":{"id":1962,"name":"_policyId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1945,"src":"4241:9:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4232:19:5","typeDescriptions":{"typeIdentifier":"t_struct$_Policy_$1716_storage","typeString":"struct PolicyRegistry.Policy storage ref"}},"id":1964,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4252:8:5","memberName":"isActive","nodeType":"MemberAccess","referencedDeclaration":1711,"src":"4232:28:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"506f6c69637920697320616c726561647920696e616374697665","id":1965,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4262:28:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_410c13625f0bd54c5939ed847d7ab3e3ffd7e8619105da447ee4d383bf9e4cd6","typeString":"literal_string \"Policy is already inactive\""},"value":"Policy is already inactive"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_410c13625f0bd54c5939ed847d7ab3e3ffd7e8619105da447ee4d383bf9e4cd6","typeString":"literal_string \"Policy is already inactive\""}],"id":1960,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4224:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1966,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4224:67:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1967,"nodeType":"ExpressionStatement","src":"4224:67:5"},{"expression":{"id":1973,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":1968,"name":"policies","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1721,"src":"4310:8:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Policy_$1716_storage_$","typeString":"mapping(uint256 => struct PolicyRegistry.Policy storage ref)"}},"id":1970,"indexExpression":{"id":1969,"name":"_policyId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1945,"src":"4319:9:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4310:19:5","typeDescriptions":{"typeIdentifier":"t_struct$_Policy_$1716_storage","typeString":"struct PolicyRegistry.Policy storage ref"}},"id":1971,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"4330:8:5","memberName":"isActive","nodeType":"MemberAccess","referencedDeclaration":1711,"src":"4310:28:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":1972,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4341:5:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"4310:36:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1974,"nodeType":"ExpressionStatement","src":"4310:36:5"},{"eventCall":{"arguments":[{"id":1976,"name":"_policyId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1945,"src":"4377:9:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1975,"name":"PolicyCancelled","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1747,"src":"4361:15:5","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":1977,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4361:26:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1978,"nodeType":"EmitStatement","src":"4356:31:5"}]},"documentation":{"id":1943,"nodeType":"StructuredDocumentation","src":"3963:101:5","text":" @dev Cancels an existing policy\n @param _policyId ID of the policy to cancel"},"functionSelector":"b20e8bcc","id":1980,"implemented":true,"kind":"function","modifiers":[{"id":1948,"kind":"modifierInvocation","modifierName":{"id":1947,"name":"onlyAdmin","nameLocations":["4119:9:5"],"nodeType":"IdentifierPath","referencedDeclaration":1771,"src":"4119:9:5"},"nodeType":"ModifierInvocation","src":"4119:9:5"}],"name":"cancelPolicy","nameLocation":"4078:12:5","nodeType":"FunctionDefinition","parameters":{"id":1946,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1945,"mutability":"mutable","name":"_policyId","nameLocation":"4099:9:5","nodeType":"VariableDeclaration","scope":1980,"src":"4091:17:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1944,"name":"uint256","nodeType":"ElementaryTypeName","src":"4091:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4090:19:5"},"returnParameters":{"id":1949,"nodeType":"ParameterList","parameters":[],"src":"4129:0:5"},"scope":2136,"src":"4069:325:5","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":2021,"nodeType":"Block","src":"4590:294:5","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1994,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":1989,"name":"policies","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1721,"src":"4608:8:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Policy_$1716_storage_$","typeString":"mapping(uint256 => struct PolicyRegistry.Policy storage ref)"}},"id":1991,"indexExpression":{"id":1990,"name":"_policyId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1983,"src":"4617:9:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4608:19:5","typeDescriptions":{"typeIdentifier":"t_struct$_Policy_$1716_storage","typeString":"struct PolicyRegistry.Policy storage ref"}},"id":1992,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4628:8:5","memberName":"policyId","nodeType":"MemberAccess","referencedDeclaration":1695,"src":"4608:28:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1993,"name":"_policyId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1983,"src":"4640:9:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4608:41:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"506f6c69637920646f6573206e6f74206578697374","id":1995,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4651:23:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_aea652f5dac653440c85b7b5cb25e1f01b03401ac09a38650f9eeed5ddd5b2ce","typeString":"literal_string \"Policy does not exist\""},"value":"Policy does not exist"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_aea652f5dac653440c85b7b5cb25e1f01b03401ac09a38650f9eeed5ddd5b2ce","typeString":"literal_string \"Policy does not exist\""}],"id":1988,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4600:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1996,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4600:75:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1997,"nodeType":"ExpressionStatement","src":"4600:75:5"},{"expression":{"arguments":[{"expression":{"baseExpression":{"id":1999,"name":"policies","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1721,"src":"4693:8:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Policy_$1716_storage_$","typeString":"mapping(uint256 => struct PolicyRegistry.Policy storage ref)"}},"id":2001,"indexExpression":{"id":2000,"name":"_policyId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1983,"src":"4702:9:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4693:19:5","typeDescriptions":{"typeIdentifier":"t_struct$_Policy_$1716_storage","typeString":"struct PolicyRegistry.Policy storage ref"}},"id":2002,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4713:8:5","memberName":"isActive","nodeType":"MemberAccess","referencedDeclaration":1711,"src":"4693:28:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"506f6c696379206973206e6f7420616374697665","id":2003,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4723:22:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_99080d22dc18f564531d11cbb7ad7b1f889534fb07f6e0fe0a38b3a0e018c0d9","typeString":"literal_string \"Policy is not active\""},"value":"Policy is not active"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_99080d22dc18f564531d11cbb7ad7b1f889534fb07f6e0fe0a38b3a0e018c0d9","typeString":"literal_string \"Policy is not active\""}],"id":1998,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4685:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2004,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4685:61:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2005,"nodeType":"ExpressionStatement","src":"4685:61:5"},{"expression":{"id":2011,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":2006,"name":"policies","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1721,"src":"4765:8:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Policy_$1716_storage_$","typeString":"mapping(uint256 => struct PolicyRegistry.Policy storage ref)"}},"id":2008,"indexExpression":{"id":2007,"name":"_policyId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1983,"src":"4774:9:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4765:19:5","typeDescriptions":{"typeIdentifier":"t_struct$_Policy_$1716_storage","typeString":"struct PolicyRegistry.Policy storage ref"}},"id":2009,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"4785:11:5","memberName":"claimsCount","nodeType":"MemberAccess","referencedDeclaration":1713,"src":"4765:31:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":2010,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4800:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"4765:36:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2012,"nodeType":"ExpressionStatement","src":"4765:36:5"},{"eventCall":{"arguments":[{"id":2014,"name":"_policyId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1983,"src":"4834:9:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"baseExpression":{"id":2015,"name":"policies","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1721,"src":"4845:8:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Policy_$1716_storage_$","typeString":"mapping(uint256 => struct PolicyRegistry.Policy storage ref)"}},"id":2017,"indexExpression":{"id":2016,"name":"_policyId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1983,"src":"4854:9:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4845:19:5","typeDescriptions":{"typeIdentifier":"t_struct$_Policy_$1716_storage","typeString":"struct PolicyRegistry.Policy storage ref"}},"id":2018,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4865:11:5","memberName":"claimsCount","nodeType":"MemberAccess","referencedDeclaration":1713,"src":"4845:31:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2013,"name":"ClaimCountUpdated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1753,"src":"4816:17:5","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256)"}},"id":2019,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4816:61:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2020,"nodeType":"EmitStatement","src":"4811:66:5"}]},"documentation":{"id":1981,"nodeType":"StructuredDocumentation","src":"4404:104:5","text":" @dev Increments the claim count for a policy\n @param _policyId ID of the policy"},"functionSelector":"8d3629c0","id":2022,"implemented":true,"kind":"function","modifiers":[{"id":1986,"kind":"modifierInvocation","modifierName":{"id":1985,"name":"onlyClaimsProcessor","nameLocations":["4570:19:5"],"nodeType":"IdentifierPath","referencedDeclaration":1783,"src":"4570:19:5"},"nodeType":"ModifierInvocation","src":"4570:19:5"}],"name":"incrementClaimCount","nameLocation":"4522:19:5","nodeType":"FunctionDefinition","parameters":{"id":1984,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1983,"mutability":"mutable","name":"_policyId","nameLocation":"4550:9:5","nodeType":"VariableDeclaration","scope":2022,"src":"4542:17:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1982,"name":"uint256","nodeType":"ElementaryTypeName","src":"4542:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4541:19:5"},"returnParameters":{"id":1987,"nodeType":"ParameterList","parameters":[],"src":"4590:0:5"},"scope":2136,"src":"4513:371:5","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":2062,"nodeType":"Block","src":"5116:274:5","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2038,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":2033,"name":"policies","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1721,"src":"5134:8:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Policy_$1716_storage_$","typeString":"mapping(uint256 => struct PolicyRegistry.Policy storage ref)"}},"id":2035,"indexExpression":{"id":2034,"name":"_policyId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2025,"src":"5143:9:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5134:19:5","typeDescriptions":{"typeIdentifier":"t_struct$_Policy_$1716_storage","typeString":"struct PolicyRegistry.Policy storage ref"}},"id":2036,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5154:8:5","memberName":"policyId","nodeType":"MemberAccess","referencedDeclaration":1695,"src":"5134:28:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2037,"name":"_policyId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2025,"src":"5166:9:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5134:41:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"506f6c69637920646f6573206e6f74206578697374","id":2039,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5177:23:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_aea652f5dac653440c85b7b5cb25e1f01b03401ac09a38650f9eeed5ddd5b2ce","typeString":"literal_string \"Policy does not exist\""},"value":"Policy does not exist"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_aea652f5dac653440c85b7b5cb25e1f01b03401ac09a38650f9eeed5ddd5b2ce","typeString":"literal_string \"Policy does not exist\""}],"id":2032,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5126:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2040,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5126:75:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2041,"nodeType":"ExpressionStatement","src":"5126:75:5"},{"expression":{"arguments":[{"expression":{"baseExpression":{"id":2043,"name":"policies","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1721,"src":"5219:8:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Policy_$1716_storage_$","typeString":"mapping(uint256 => struct PolicyRegistry.Policy storage ref)"}},"id":2045,"indexExpression":{"id":2044,"name":"_policyId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2025,"src":"5228:9:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5219:19:5","typeDescriptions":{"typeIdentifier":"t_struct$_Policy_$1716_storage","typeString":"struct PolicyRegistry.Policy storage ref"}},"id":2046,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5239:8:5","memberName":"isActive","nodeType":"MemberAccess","referencedDeclaration":1711,"src":"5219:28:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"506f6c696379206973206e6f7420616374697665","id":2047,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5249:22:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_99080d22dc18f564531d11cbb7ad7b1f889534fb07f6e0fe0a38b3a0e018c0d9","typeString":"literal_string \"Policy is not active\""},"value":"Policy is not active"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_99080d22dc18f564531d11cbb7ad7b1f889534fb07f6e0fe0a38b3a0e018c0d9","typeString":"literal_string \"Policy is not active\""}],"id":2042,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5211:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2048,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5211:61:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2049,"nodeType":"ExpressionStatement","src":"5211:61:5"},{"expression":{"id":2055,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":2050,"name":"policies","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1721,"src":"5291:8:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Policy_$1716_storage_$","typeString":"mapping(uint256 => struct PolicyRegistry.Policy storage ref)"}},"id":2052,"indexExpression":{"id":2051,"name":"_policyId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2025,"src":"5300:9:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5291:19:5","typeDescriptions":{"typeIdentifier":"t_struct$_Policy_$1716_storage","typeString":"struct PolicyRegistry.Policy storage ref"}},"id":2053,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"5311:12:5","memberName":"totalPayouts","nodeType":"MemberAccess","referencedDeclaration":1715,"src":"5291:32:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":2054,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2027,"src":"5327:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5291:43:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2056,"nodeType":"ExpressionStatement","src":"5291:43:5"},{"eventCall":{"arguments":[{"id":2058,"name":"_policyId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2025,"src":"5364:9:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2059,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2027,"src":"5375:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2057,"name":"PayoutRecorded","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1759,"src":"5349:14:5","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256)"}},"id":2060,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5349:34:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2061,"nodeType":"EmitStatement","src":"5344:39:5"}]},"documentation":{"id":2023,"nodeType":"StructuredDocumentation","src":"4894:130:5","text":" @dev Records a payout for a policy\n @param _policyId ID of the policy\n @param _amount Payout amount"},"functionSelector":"f8112568","id":2063,"implemented":true,"kind":"function","modifiers":[{"id":2030,"kind":"modifierInvocation","modifierName":{"id":2029,"name":"onlyClaimsProcessor","nameLocations":["5096:19:5"],"nodeType":"IdentifierPath","referencedDeclaration":1783,"src":"5096:19:5"},"nodeType":"ModifierInvocation","src":"5096:19:5"}],"name":"recordPayout","nameLocation":"5038:12:5","nodeType":"FunctionDefinition","parameters":{"id":2028,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2025,"mutability":"mutable","name":"_policyId","nameLocation":"5059:9:5","nodeType":"VariableDeclaration","scope":2063,"src":"5051:17:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2024,"name":"uint256","nodeType":"ElementaryTypeName","src":"5051:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2027,"mutability":"mutable","name":"_amount","nameLocation":"5078:7:5","nodeType":"VariableDeclaration","scope":2063,"src":"5070:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2026,"name":"uint256","nodeType":"ElementaryTypeName","src":"5070:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5050:36:5"},"returnParameters":{"id":2031,"nodeType":"ParameterList","parameters":[],"src":"5116:0:5"},"scope":2136,"src":"5029:361:5","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":2106,"nodeType":"Block","src":"5721:317:5","statements":[{"assignments":[2075],"declarations":[{"constant":false,"id":2075,"mutability":"mutable","name":"policy","nameLocation":"5746:6:5","nodeType":"VariableDeclaration","scope":2106,"src":"5731:21:5","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Policy_$1716_storage_ptr","typeString":"struct PolicyRegistry.Policy"},"typeName":{"id":2074,"nodeType":"UserDefinedTypeName","pathNode":{"id":2073,"name":"Policy","nameLocations":["5731:6:5"],"nodeType":"IdentifierPath","referencedDeclaration":1716,"src":"5731:6:5"},"referencedDeclaration":1716,"src":"5731:6:5","typeDescriptions":{"typeIdentifier":"t_struct$_Policy_$1716_storage_ptr","typeString":"struct PolicyRegistry.Policy"}},"visibility":"internal"}],"id":2079,"initialValue":{"baseExpression":{"id":2076,"name":"policies","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1721,"src":"5755:8:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Policy_$1716_storage_$","typeString":"mapping(uint256 => struct PolicyRegistry.Policy storage ref)"}},"id":2078,"indexExpression":{"id":2077,"name":"_policyId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2066,"src":"5764:9:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5755:19:5","typeDescriptions":{"typeIdentifier":"t_struct$_Policy_$1716_storage","typeString":"struct PolicyRegistry.Policy storage ref"}},"nodeType":"VariableDeclarationStatement","src":"5731:43:5"},{"expression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2103,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2097,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2091,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2088,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2083,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2080,"name":"policy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2075,"src":"5814:6:5","typeDescriptions":{"typeIdentifier":"t_struct$_Policy_$1716_storage_ptr","typeString":"struct PolicyRegistry.Policy storage pointer"}},"id":2081,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5821:8:5","memberName":"policyId","nodeType":"MemberAccess","referencedDeclaration":1695,"src":"5814:15:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2082,"name":"_policyId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2066,"src":"5833:9:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5814:28:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2087,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2084,"name":"policy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2075,"src":"5858:6:5","typeDescriptions":{"typeIdentifier":"t_struct$_Policy_$1716_storage_ptr","typeString":"struct PolicyRegistry.Policy storage pointer"}},"id":2085,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5865:12:5","memberName":"policyholder","nodeType":"MemberAccess","referencedDeclaration":1697,"src":"5858:19:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2086,"name":"_claimant","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2068,"src":"5881:9:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5858:32:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"5814:76:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"expression":{"id":2089,"name":"policy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2075,"src":"5906:6:5","typeDescriptions":{"typeIdentifier":"t_struct$_Policy_$1716_storage_ptr","typeString":"struct PolicyRegistry.Policy storage pointer"}},"id":2090,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5913:8:5","memberName":"isActive","nodeType":"MemberAccess","referencedDeclaration":1711,"src":"5906:15:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"5814:107:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2096,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2092,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"5937:5:5","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":2093,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5943:9:5","memberName":"timestamp","nodeType":"MemberAccess","src":"5937:15:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"expression":{"id":2094,"name":"policy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2075,"src":"5956:6:5","typeDescriptions":{"typeIdentifier":"t_struct$_Policy_$1716_storage_ptr","typeString":"struct PolicyRegistry.Policy storage pointer"}},"id":2095,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5963:9:5","memberName":"startDate","nodeType":"MemberAccess","referencedDeclaration":1707,"src":"5956:16:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5937:35:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"5814:158:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2102,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2098,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"5988:5:5","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":2099,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5994:9:5","memberName":"timestamp","nodeType":"MemberAccess","src":"5988:15:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"id":2100,"name":"policy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2075,"src":"6007:6:5","typeDescriptions":{"typeIdentifier":"t_struct$_Policy_$1716_storage_ptr","typeString":"struct PolicyRegistry.Policy storage pointer"}},"id":2101,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6014:7:5","memberName":"endDate","nodeType":"MemberAccess","referencedDeclaration":1709,"src":"6007:14:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5988:33:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"5814:207:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":2104,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5800:231:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2072,"id":2105,"nodeType":"Return","src":"5793:238:5"}]},"documentation":{"id":2064,"nodeType":"StructuredDocumentation","src":"5400:217:5","text":" @dev Checks if a policy is valid for making claims\n @param _policyId ID of the policy\n @param _claimant Address of the claimant\n @return bool True if the policy is valid for claims"},"functionSelector":"943f31a6","id":2107,"implemented":true,"kind":"function","modifiers":[],"name":"isPolicyValidForClaims","nameLocation":"5631:22:5","nodeType":"FunctionDefinition","parameters":{"id":2069,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2066,"mutability":"mutable","name":"_policyId","nameLocation":"5662:9:5","nodeType":"VariableDeclaration","scope":2107,"src":"5654:17:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2065,"name":"uint256","nodeType":"ElementaryTypeName","src":"5654:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2068,"mutability":"mutable","name":"_claimant","nameLocation":"5681:9:5","nodeType":"VariableDeclaration","scope":2107,"src":"5673:17:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2067,"name":"address","nodeType":"ElementaryTypeName","src":"5673:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5653:38:5"},"returnParameters":{"id":2072,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2071,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2107,"src":"5715:4:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2070,"name":"bool","nodeType":"ElementaryTypeName","src":"5715:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5714:6:5"},"scope":2136,"src":"5622:416:5","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":2120,"nodeType":"Block","src":"6294:43:5","statements":[{"expression":{"baseExpression":{"id":2116,"name":"userPolicies","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1726,"src":"6311:12:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$","typeString":"mapping(address => uint256[] storage ref)"}},"id":2118,"indexExpression":{"id":2117,"name":"_user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2110,"src":"6324:5:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6311:19:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"functionReturnParameters":2115,"id":2119,"nodeType":"Return","src":"6304:26:5"}]},"documentation":{"id":2108,"nodeType":"StructuredDocumentation","src":"6048:160:5","text":" @dev Gets all policies owned by a user\n @param _user Address of the user\n @return uint256[] Array of policy IDs owned by the user"},"functionSelector":"19ac4614","id":2121,"implemented":true,"kind":"function","modifiers":[],"name":"getUserPolicies","nameLocation":"6222:15:5","nodeType":"FunctionDefinition","parameters":{"id":2111,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2110,"mutability":"mutable","name":"_user","nameLocation":"6246:5:5","nodeType":"VariableDeclaration","scope":2121,"src":"6238:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2109,"name":"address","nodeType":"ElementaryTypeName","src":"6238:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6237:15:5"},"returnParameters":{"id":2115,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2114,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2121,"src":"6276:16:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2112,"name":"uint256","nodeType":"ElementaryTypeName","src":"6276:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2113,"nodeType":"ArrayTypeName","src":"6276:9:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"6275:18:5"},"scope":2136,"src":"6213:124:5","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":2134,"nodeType":"Block","src":"6572:43:5","statements":[{"expression":{"baseExpression":{"id":2130,"name":"policies","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1721,"src":"6589:8:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Policy_$1716_storage_$","typeString":"mapping(uint256 => struct PolicyRegistry.Policy storage ref)"}},"id":2132,"indexExpression":{"id":2131,"name":"_policyId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2124,"src":"6598:9:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6589:19:5","typeDescriptions":{"typeIdentifier":"t_struct$_Policy_$1716_storage","typeString":"struct PolicyRegistry.Policy storage ref"}},"functionReturnParameters":2129,"id":2133,"nodeType":"Return","src":"6582:26:5"}]},"documentation":{"id":2122,"nodeType":"StructuredDocumentation","src":"6347:144:5","text":" @dev Gets policy details by ID\n @param _policyId ID of the policy\n @return Policy details of the specified policy"},"functionSelector":"2b07fce3","id":2135,"implemented":true,"kind":"function","modifiers":[],"name":"getPolicy","nameLocation":"6505:9:5","nodeType":"FunctionDefinition","parameters":{"id":2125,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2124,"mutability":"mutable","name":"_policyId","nameLocation":"6523:9:5","nodeType":"VariableDeclaration","scope":2135,"src":"6515:17:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2123,"name":"uint256","nodeType":"ElementaryTypeName","src":"6515:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6514:19:5"},"returnParameters":{"id":2129,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2128,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2135,"src":"6557:13:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Policy_$1716_memory_ptr","typeString":"struct PolicyRegistry.Policy"},"typeName":{"id":2127,"nodeType":"UserDefinedTypeName","pathNode":{"id":2126,"name":"Policy","nameLocations":["6557:6:5"],"nodeType":"IdentifierPath","referencedDeclaration":1716,"src":"6557:6:5"},"referencedDeclaration":1716,"src":"6557:6:5","typeDescriptions":{"typeIdentifier":"t_struct$_Policy_$1716_storage_ptr","typeString":"struct PolicyRegistry.Policy"}},"visibility":"internal"}],"src":"6556:15:5"},"scope":2136,"src":"6496:119:5","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":2137,"src":"153:6464:5","usedErrors":[]}],"src":"32:6586:5"},"id":5}},"contracts":{"@chainlink/contracts/src/v0.8/VRFConsumerBaseV2.sol":{"VRFConsumerBaseV2":{"abi":[{"inputs":[{"internalType":"address","name":"have","type":"address"},{"internalType":"address","name":"want","type":"address"}],"name":"OnlyCoordinatorCanFulfill","type":"error"},{"inputs":[{"internalType":"uint256","name":"requestId","type":"uint256"},{"internalType":"uint256[]","name":"randomWords","type":"uint256[]"}],"name":"rawFulfillRandomWords","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"rawFulfillRandomWords(uint256,uint256[])":"1fe543e3"}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"have\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"want\",\"type\":\"address\"}],\"name\":\"OnlyCoordinatorCanFulfill\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"requestId\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"randomWords\",\"type\":\"uint256[]\"}],\"name\":\"rawFulfillRandomWords\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"PURPOSEReggie the Random Oracle (not his real job) wants to provide randomnessto Vera the verifier in such a way that Vera can be sure he's notmaking his output up to suit himself. Reggie provides Vera a public keyto which he knows the secret key. Each time Vera provides a seed toReggie, he gives back a value which is computed completelydeterministically from the seed and the secret key.Reggie provides a proof by which Vera can verify that the output wascorrectly computed once Reggie tells it to her, but without that proof,the output is indistinguishable to her from a uniform random samplefrom the output space.The purpose of this contract is to make it easy for unrelated contractsto talk to Vera the verifier about the work Reggie is doing, to providesimple access to a verifiable source of randomness. It ensures 2 things:1. The fulfillment came from the VRFCoordinator2. The consumer contract implements fulfillRandomWords. *****************************************************************************USAGECalling contracts must inherit from VRFConsumerBase, and caninitialize VRFConsumerBase's attributes in their constructor asshown:contract VRFConsumer {constructor(<other arguments>, address _vrfCoordinator, address _link)VRFConsumerBase(_vrfCoordinator) public {<initialization with other arguments goes here>}}The oracle will have given you an ID for the VRF keypair they havecommitted to (let's call it keyHash). Create subscription, fund itand your consumer contract as a consumer of it (see VRFCoordinatorInterfacesubscription management functions).Call requestRandomWords(keyHash, subId, minimumRequestConfirmations,callbackGasLimit, numWords),see (VRFCoordinatorInterface for a description of the arguments).Once the VRFCoordinator has received and validated the oracle's responseto your request, it will call your contract's fulfillRandomWords method.The randomness argument to fulfillRandomWords is a set of random wordsgenerated from your requestId and the blockHash of the request.If your contract could have concurrent requests open, you can use therequestId returned from requestRandomWords to track which response is associatedwith which randomness request.See \\\"SECURITY CONSIDERATIONS\\\" for principles to keep in mind,if your contract could have multiple requests in flight simultaneously.Colliding `requestId`s are cryptographically impossible as long as seedsdiffer. *****************************************************************************SECURITY CONSIDERATIONSA method with the ability to call your fulfillRandomness method directlycould spoof a VRF response with any random value, so it's critical thatit cannot be directly called by anything other than this base contract(specifically, by the VRFConsumerBase.rawFulfillRandomness method).For your users to trust that your contract's random behavior is freefrom malicious interference, it's best if you can write it so that allbehaviors implied by a VRF response are executed *during* yourfulfillRandomness method. If your contract must store the response (oranything derived from it) and use it later, you must ensure that anyuser-significant behavior which depends on that stored value cannot bemanipulated by a subsequent VRF request.Similarly, both miners and the VRF oracle itself have some influenceover the order in which VRF responses appear on the blockchain, so ifyour contract could have multiple VRF requests in flight simultaneously,you must ensure that the order in which the VRF responses arrive cannotbe used to manipulate your contract's user-significant behavior.Since the block hash of the block which contains the requestRandomnesscall is mixed into the input to the VRF *last*, a sufficiently powerfulminer could, in principle, fork the blockchain to evict the blockcontaining the request, forcing the request to be included in adifferent block with a different hash, and therefore a different inputto the VRF. However, such an attack would incur a substantial economiccost. This cost scales with the number of blocks the VRF oracle waitsuntil it calls responds to a request. It is for this reason thatthat you can signal to an oracle you'd like them to wait longer beforeresponding to the request (however this is not enforced in the contractand so remains effective only in the case of unmodified oracle software).\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"params\":{\"_vrfCoordinator\":\"address of VRFCoordinator contract\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"****************************************************************************Interface for contracts using VRF randomness *****************************************************************************\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@chainlink/contracts/src/v0.8/VRFConsumerBaseV2.sol\":\"VRFConsumerBaseV2\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@chainlink/contracts/src/v0.8/VRFConsumerBaseV2.sol\":{\"keccak256\":\"0x3d709a5e0f1f9b8841172b10ba8af785dd51a13eda9fc395723a706e51329904\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://038eef992d813c20737fbe94e3a36e5d541d1aa736158dd2a43dd5b840b8c360\",\"dweb:/ipfs/QmZWJ25Yr1sUSAsfJRKvTMDmGkmy63hHhB495CUL1bpNz4\"]}},\"version\":1}"}},"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol":{"AggregatorV3Interface":{"abi":[{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"description","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint80","name":"_roundId","type":"uint80"}],"name":"getRoundData","outputs":[{"internalType":"uint80","name":"roundId","type":"uint80"},{"internalType":"int256","name":"answer","type":"int256"},{"internalType":"uint256","name":"startedAt","type":"uint256"},{"internalType":"uint256","name":"updatedAt","type":"uint256"},{"internalType":"uint80","name":"answeredInRound","type":"uint80"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"latestRoundData","outputs":[{"internalType":"uint80","name":"roundId","type":"uint80"},{"internalType":"int256","name":"answer","type":"int256"},{"internalType":"uint256","name":"startedAt","type":"uint256"},{"internalType":"uint256","name":"updatedAt","type":"uint256"},{"internalType":"uint80","name":"answeredInRound","type":"uint80"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"version","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"decimals()":"313ce567","description()":"7284e416","getRoundData(uint80)":"9a6fc8f5","latestRoundData()":"feaf968c","version()":"54fd4d50"}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"description\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint80\",\"name\":\"_roundId\",\"type\":\"uint80\"}],\"name\":\"getRoundData\",\"outputs\":[{\"internalType\":\"uint80\",\"name\":\"roundId\",\"type\":\"uint80\"},{\"internalType\":\"int256\",\"name\":\"answer\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"startedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"updatedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint80\",\"name\":\"answeredInRound\",\"type\":\"uint80\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"latestRoundData\",\"outputs\":[{\"internalType\":\"uint80\",\"name\":\"roundId\",\"type\":\"uint80\"},{\"internalType\":\"int256\",\"name\":\"answer\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"startedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"updatedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint80\",\"name\":\"answeredInRound\",\"type\":\"uint80\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":\"AggregatorV3Interface\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"keccak256\":\"0x6e6e4b0835904509406b070ee173b5bc8f677c19421b76be38aea3b1b3d30846\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3beaa37ee61e4ab615e250fbf01601ae481de843fd0ef55e6b44fd9d5fff8a7\",\"dweb:/ipfs/QmeZUVwd26LzK4Mfp8Zba5JbQNkZFfTzFu1A6FVMMZDg9c\"]}},\"version\":1}"}},"@chainlink/contracts/src/v0.8/interfaces/VRFCoordinatorV2Interface.sol":{"VRFCoordinatorV2Interface":{"abi":[{"inputs":[{"internalType":"uint64","name":"subId","type":"uint64"}],"name":"acceptSubscriptionOwnerTransfer","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint64","name":"subId","type":"uint64"},{"internalType":"address","name":"consumer","type":"address"}],"name":"addConsumer","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint64","name":"subId","type":"uint64"},{"internalType":"address","name":"to","type":"address"}],"name":"cancelSubscription","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"createSubscription","outputs":[{"internalType":"uint64","name":"subId","type":"uint64"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"getRequestConfig","outputs":[{"internalType":"uint16","name":"","type":"uint16"},{"internalType":"uint32","name":"","type":"uint32"},{"internalType":"bytes32[]","name":"","type":"bytes32[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint64","name":"subId","type":"uint64"}],"name":"getSubscription","outputs":[{"internalType":"uint96","name":"balance","type":"uint96"},{"internalType":"uint64","name":"reqCount","type":"uint64"},{"internalType":"address","name":"owner","type":"address"},{"internalType":"address[]","name":"consumers","type":"address[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint64","name":"subId","type":"uint64"}],"name":"pendingRequestExists","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint64","name":"subId","type":"uint64"},{"internalType":"address","name":"consumer","type":"address"}],"name":"removeConsumer","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"keyHash","type":"bytes32"},{"internalType":"uint64","name":"subId","type":"uint64"},{"internalType":"uint16","name":"minimumRequestConfirmations","type":"uint16"},{"internalType":"uint32","name":"callbackGasLimit","type":"uint32"},{"internalType":"uint32","name":"numWords","type":"uint32"}],"name":"requestRandomWords","outputs":[{"internalType":"uint256","name":"requestId","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint64","name":"subId","type":"uint64"},{"internalType":"address","name":"newOwner","type":"address"}],"name":"requestSubscriptionOwnerTransfer","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"acceptSubscriptionOwnerTransfer(uint64)":"82359740","addConsumer(uint64,address)":"7341c10c","cancelSubscription(uint64,address)":"d7ae1d30","createSubscription()":"a21a23e4","getRequestConfig()":"00012291","getSubscription(uint64)":"a47c7696","pendingRequestExists(uint64)":"e82ad7d4","removeConsumer(uint64,address)":"9f87fad7","requestRandomWords(bytes32,uint64,uint16,uint32,uint32)":"5d3b1d30","requestSubscriptionOwnerTransfer(uint64,address)":"04c357cb"}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"subId\",\"type\":\"uint64\"}],\"name\":\"acceptSubscriptionOwnerTransfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"subId\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"consumer\",\"type\":\"address\"}],\"name\":\"addConsumer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"subId\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"cancelSubscription\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"createSubscription\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"subId\",\"type\":\"uint64\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getRequestConfig\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"},{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"},{\"internalType\":\"bytes32[]\",\"name\":\"\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"subId\",\"type\":\"uint64\"}],\"name\":\"getSubscription\",\"outputs\":[{\"internalType\":\"uint96\",\"name\":\"balance\",\"type\":\"uint96\"},{\"internalType\":\"uint64\",\"name\":\"reqCount\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"consumers\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"subId\",\"type\":\"uint64\"}],\"name\":\"pendingRequestExists\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"subId\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"consumer\",\"type\":\"address\"}],\"name\":\"removeConsumer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"keyHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"subId\",\"type\":\"uint64\"},{\"internalType\":\"uint16\",\"name\":\"minimumRequestConfirmations\",\"type\":\"uint16\"},{\"internalType\":\"uint32\",\"name\":\"callbackGasLimit\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"numWords\",\"type\":\"uint32\"}],\"name\":\"requestRandomWords\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"requestId\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"subId\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"requestSubscriptionOwnerTransfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"acceptSubscriptionOwnerTransfer(uint64)\":{\"details\":\"will revert if original owner of subId has not requested that msg.sender become the new owner.\",\"params\":{\"subId\":\"- ID of the subscription\"}},\"addConsumer(uint64,address)\":{\"params\":{\"consumer\":\"- New consumer which can use the subscription\",\"subId\":\"- ID of the subscription\"}},\"cancelSubscription(uint64,address)\":{\"params\":{\"subId\":\"- ID of the subscription\",\"to\":\"- Where to send the remaining LINK to\"}},\"createSubscription()\":{\"details\":\"You can manage the consumer set dynamically with addConsumer/removeConsumer.Note to fund the subscription, use transferAndCall. For exampleLINKTOKEN.transferAndCall(address(COORDINATOR),amount,abi.encode(subId));\",\"returns\":{\"subId\":\"- A unique subscription id.\"}},\"getRequestConfig()\":{\"returns\":{\"_0\":\"minimumRequestConfirmations global min for request confirmations\",\"_1\":\"maxGasLimit global max for request gas limit\",\"_2\":\"s_provingKeyHashes list of registered key hashes\"}},\"getSubscription(uint64)\":{\"params\":{\"subId\":\"- ID of the subscription\"},\"returns\":{\"balance\":\"- LINK balance of the subscription in juels.\",\"consumers\":\"- list of consumer address which are able to use this subscription.\",\"owner\":\"- owner of the subscription.\",\"reqCount\":\"- number of requests for this subscription, determines fee tier.\"}},\"removeConsumer(uint64,address)\":{\"params\":{\"consumer\":\"- Consumer to remove from the subscription\",\"subId\":\"- ID of the subscription\"}},\"requestRandomWords(bytes32,uint64,uint16,uint32,uint32)\":{\"params\":{\"callbackGasLimit\":\"- How much gas you'd like to receive in your fulfillRandomWords callback. Note that gasleft() inside fulfillRandomWords may be slightly less than this amount because of gas used calling the function (argument decoding etc.), so you may need to request slightly more than you expect to have inside fulfillRandomWords. The acceptable range is [0, maxGasLimit]\",\"keyHash\":\"- Corresponds to a particular oracle job which uses that key for generating the VRF proof. Different keyHash's have different gas price ceilings, so you can select a specific one to bound your maximum per request cost.\",\"minimumRequestConfirmations\":\"- How many blocks you'd like the oracle to wait before responding to the request. See SECURITY CONSIDERATIONS for why you may want to request more. The acceptable range is [minimumRequestBlockConfirmations, 200].\",\"numWords\":\"- The number of uint256 random values you'd like to receive in your fulfillRandomWords callback. Note these numbers are expanded in a secure way by the VRFCoordinator from a single random value supplied by the oracle.\",\"subId\":\"- The ID of the VRF subscription. Must be funded with the minimum subscription balance required for the selected keyHash.\"},\"returns\":{\"requestId\":\"- A unique identifier of the request. Can be used to match a request to a response in fulfillRandomWords.\"}},\"requestSubscriptionOwnerTransfer(uint64,address)\":{\"params\":{\"newOwner\":\"- proposed new owner of the subscription\",\"subId\":\"- ID of the subscription\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"acceptSubscriptionOwnerTransfer(uint64)\":{\"notice\":\"Request subscription owner transfer.\"},\"addConsumer(uint64,address)\":{\"notice\":\"Add a consumer to a VRF subscription.\"},\"cancelSubscription(uint64,address)\":{\"notice\":\"Cancel a subscription\"},\"createSubscription()\":{\"notice\":\"Create a VRF subscription.\"},\"getRequestConfig()\":{\"notice\":\"Get configuration relevant for making requests\"},\"getSubscription(uint64)\":{\"notice\":\"Get a VRF subscription.\"},\"removeConsumer(uint64,address)\":{\"notice\":\"Remove a consumer from a VRF subscription.\"},\"requestRandomWords(bytes32,uint64,uint16,uint32,uint32)\":{\"notice\":\"Request a set of random words.\"},\"requestSubscriptionOwnerTransfer(uint64,address)\":{\"notice\":\"Request subscription owner transfer.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@chainlink/contracts/src/v0.8/interfaces/VRFCoordinatorV2Interface.sol\":\"VRFCoordinatorV2Interface\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/VRFCoordinatorV2Interface.sol\":{\"keccak256\":\"0x54cdc97717cbae1a51a5500c8ee4875ebf056c95b54d2155a9544a79cb4f4494\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4bd670a55aacc0ab372835cd7e21b487f9fb69d8c6375234b68862a58f3b1153\",\"dweb:/ipfs/QmRMdB9TFLgG1LXg9VSTWbZZ1yf3uY1RY3pPkoMN23JfZk\"]}},\"version\":1}"}},"contracts/ClaimsProcessor.sol":{"ClaimsProcessor":{"abi":[{"inputs":[{"internalType":"address","name":"_vrfCoordinator","type":"address"},{"internalType":"bytes32","name":"_keyHash","type":"bytes32"},{"internalType":"uint64","name":"_subscriptionId","type":"uint64"},{"internalType":"address","name":"_policyRegistry","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[{"internalType":"address","name":"have","type":"address"},{"internalType":"address","name":"want","type":"address"}],"name":"OnlyCoordinatorCanFulfill","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"claimId","type":"uint256"}],"name":"AIAnalysisReceived","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"claimId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"payout","type":"uint256"}],"name":"ClaimApproved","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"claimId","type":"uint256"}],"name":"ClaimPaid","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"claimId","type":"uint256"},{"indexed":false,"internalType":"string","name":"reason","type":"string"}],"name":"ClaimRejected","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"claimId","type":"uint256"},{"indexed":true,"internalType":"uint256","name":"policyId","type":"uint256"},{"indexed":true,"internalType":"address","name":"claimant","type":"address"}],"name":"ClaimSubmitted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"claimId","type":"uint256"},{"indexed":true,"internalType":"address","name":"reviewer","type":"address"}],"name":"ReviewerAssigned","type":"event"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"activeReviewers","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_reviewer","type":"address"}],"name":"addReviewer","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"admin","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"aiOracle","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"autoApproveThreshold","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"autoRejectThreshold","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"claims","outputs":[{"internalType":"uint256","name":"claimId","type":"uint256"},{"internalType":"uint256","name":"policyId","type":"uint256"},{"internalType":"address","name":"claimant","type":"address"},{"internalType":"string","name":"description","type":"string"},{"internalType":"uint256","name":"timestamp","type":"uint256"},{"internalType":"enum ClaimsProcessor.ClaimStatus","name":"status","type":"uint8"},{"internalType":"uint8","name":"claimType","type":"uint8"},{"internalType":"uint8","name":"severity","type":"uint8"},{"internalType":"uint8","name":"fraudRisk","type":"uint8"},{"internalType":"uint256","name":"recommendedPayout","type":"uint256"},{"internalType":"uint256","name":"finalPayout","type":"uint256"},{"internalType":"uint256","name":"processedAt","type":"uint256"},{"internalType":"bool","name":"requiresHumanReview","type":"bool"},{"internalType":"address","name":"assignedReviewer","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getActiveReviewerCount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_claimId","type":"uint256"}],"name":"getClaim","outputs":[{"components":[{"internalType":"uint256","name":"claimId","type":"uint256"},{"internalType":"uint256","name":"policyId","type":"uint256"},{"internalType":"address","name":"claimant","type":"address"},{"internalType":"string","name":"description","type":"string"},{"internalType":"string[]","name":"evidenceHashes","type":"string[]"},{"internalType":"uint256","name":"timestamp","type":"uint256"},{"internalType":"enum ClaimsProcessor.ClaimStatus","name":"status","type":"uint8"},{"internalType":"uint8","name":"claimType","type":"uint8"},{"internalType":"uint8","name":"severity","type":"uint8"},{"internalType":"uint8","name":"fraudRisk","type":"uint8"},{"internalType":"uint256","name":"recommendedPayout","type":"uint256"},{"internalType":"uint256","name":"finalPayout","type":"uint256"},{"internalType":"uint256","name":"processedAt","type":"uint256"},{"internalType":"bool","name":"requiresHumanReview","type":"bool"},{"internalType":"address","name":"assignedReviewer","type":"address"}],"internalType":"struct ClaimsProcessor.Claim","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getClaimsForReview","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_user","type":"address"}],"name":"getUserClaims","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"nextClaimId","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"numWords","outputs":[{"internalType":"uint32","name":"","type":"uint32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"payoutManager","outputs":[{"internalType":"address payable","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"policyRegistry","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"requestId","type":"uint256"},{"internalType":"uint256[]","name":"randomWords","type":"uint256[]"}],"name":"rawFulfillRandomWords","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_reviewer","type":"address"}],"name":"removeReviewer","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_claimId","type":"uint256"},{"internalType":"uint256","name":"_payout","type":"uint256"}],"name":"reviewerApproveClaim","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_claimId","type":"uint256"},{"internalType":"string","name":"_reason","type":"string"}],"name":"reviewerRejectClaim","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"reviewers","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_aiOracle","type":"address"}],"name":"setAIOracle","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_payoutManager","type":"address"}],"name":"setPayoutManager","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint8","name":"_autoApprove","type":"uint8"},{"internalType":"uint8","name":"_autoReject","type":"uint8"}],"name":"setThresholds","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_claimId","type":"uint256"},{"internalType":"uint8","name":"_claimType","type":"uint8"},{"internalType":"uint8","name":"_severity","type":"uint8"},{"internalType":"uint8","name":"_fraudRisk","type":"uint8"},{"internalType":"uint256","name":"_recommendedPayout","type":"uint256"}],"name":"submitAIAnalysis","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_policyId","type":"uint256"},{"internalType":"string","name":"_description","type":"string"},{"internalType":"string[]","name":"_evidenceHashes","type":"string[]"}],"name":"submitClaim","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"vrfCallbackGasLimit","outputs":[{"internalType":"uint32","name":"","type":"uint32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"vrfCoordinator","outputs":[{"internalType":"contract VRFCoordinatorV2Interface","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"vrfKeyHash","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"vrfRequestConfirmations","outputs":[{"internalType":"uint16","name":"","type":"uint16"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"vrfRequestToClaim","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"vrfSubscriptionId","outputs":[{"internalType":"uint64","name":"","type":"uint64"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{"abi_decode_address_fromMemory":{"entryPoint":334,"id":null,"parameterSlots":1,"returnSlots":1}},"generatedSources":[],"linkReferences":{},"object":"60a03462000133576001600160401b0390601f620022c338819003918201601f191683019184831184841017620001385780849260809460405283398101031262000133576200004f816200014e565b6020820151906040830151938416840362000133576200007a60606601000300030d4094016200014e565b6080829052600160045560078054600a8054600580546006989098556001600160e01b03199097166001600160a01b039096169590951760a09890981b600160a01b600160e01b0316979097179094556001600160f01b031990931660509190911b600160501b600160f01b0316179290921790556001600160b01b0319163390811761118560a21b17909155600980546001600160a01b031916909117905560405161215f9081620001648239608051816119290152f35b600080fd5b634e487b7160e01b600052604160045260246000fd5b51906001600160a01b0382168203620001335756fe608080604052600436101561001357600080fd5b600090813560e01c908163041d443e14611a0d575080631aa632b3146119c05780631c4dd7d0146119935780631fe543e3146118b55780633083a8e31461188c57806331b221cd14611863578063324bc2a9146111c75780633b7ed734146111a357806354edb3a01461117f578063598bc4861461115b5780635aad00d6146111175780635aef244714610e145780635eb0ec3914610d1d5780636ae2a1c914610cff5780637181896f14610cb257806373a82b5f14610be05780637bcb4a6414610b085780637ccfd7fc14610ae15780638c50fa1f146109875780639b052153146108f3578063a0021cf1146108d5578063a3e56fa8146108ac578063a888c2cd146107bf578063b11b1d7614610795578063bfce86b3146106eb578063c9442dac14610579578063e277c88114610235578063e456c58a14610211578063ed647d21146101e7578063f7cbb1b2146101a15763f851a4401461017657600080fd5b3461019e578060031936011261019e57600a546040516001600160a01b039091168152602090f35b80fd5b503461019e57602036600319011261019e576004356001600160a01b038116908190036101e35760408260ff9260209452600284522054166040519015158152f35b5080fd5b503461019e578060031936011261019e5760206001600160401b0360055460a01c16604051908152f35b503461019e578060031936011261019e57602060ff600a5460a81c16604051908152f35b503461019e5760a036600319011261019e5760043590610253611cb1565b916044359260ff84168403610574576064359360ff85169081860361057457600954608435936001600160a01b039390918416330361053e5785875260209387855260ff600660408a20015416600681101561052a578798996102b96103189215611d36565b888b528a87526102fe60408c20966102e66006890197889061ff0082549160081b169061ff001916179055565b865462ff0000191660109190911b62ff000016178655565b845463ff000000191660189190911b63ff00000016178455565b85600785015560ff1991600183855416178455600a5460ff8160a01c16821080610521575b15610379575050505050505061035291611df3565b7f1d3aa49336afc0101ae504a343f9ab660f79125900c57654be752bb099b2da7d8280a280f35b60ff919293949596975060a81c16106000146103fd5750918160046060947f43cc3d080e025c67c26d62b18bd442511dc9c76c8aa3f48cc0e8f456173e61f1969454161790556009429101556018604051918083528201527f48696768206672617564207269736b20646574656374656400000000000000006040820152a2610352565b945091600a915001600182825416179055600354156104e65783855284825260026006604087200191825416179055806005549260a4600654876007549360405197889586946305d3b1d360e41b865260048601526001600160401b038260a01c16602486015261ffff81891c16604486015263ffffffff90818116606487015260301c166084850152165af180156104db5784906104a9575b60019250845252806040832055610352565b508082813d83116104d4575b6104bf8183611a6e565b810103126104d05760019151610497565b8380fd5b503d6104b5565b6040513d86823e3d90fd5b60405162461bcd60e51b81526004810183905260136024820152724e6f206163746976652072657669657765727360681b6044820152606490fd5b5087151561033d565b634e487b7160e01b89526021600452602489fd5b60405162461bcd60e51b815260206004820152600e60248201526d4f6e6c79204149206f7261636c6560901b6044820152606490fd5b600080fd5b503461019e57602036600319011261019e576004356001600160a01b03818116918290036106e7576105b081600a54163314611cc1565b818352600260205260ff604084205416156106b157818352600260205260408320805460ff19169055825b60038054808310156106a95784846105f285611afc565b905490851b1c161461060e57505061060990611cfa565b6105db565b929350916000199190828101908111610695579061063f8561063261065e94611afc565b905490871b1c1691611afc565b90919082549060031b9160018060a01b03809116831b921b1916179055565b8154801561068157019161067183611afc565b9091825491841b1b191690555580f35b634e487b7160e01b85526031600452602485fd5b634e487b7160e01b86526011600452602486fd5b505050505080f35b60405162461bcd60e51b815260206004820152600e60248201526d2737ba1030903932bb34b2bbb2b960911b6044820152606490fd5b8280fd5b503461019e57604036600319011261019e5760043560ff811680820361057457610713611cb1565b600a549161072b336001600160a01b03851614611cc1565b60ff8216111561075b5760ff60a81b9060a81b169160ff60a01b9060a01b169061ffff60a01b19161717600a5580f35b60405162461bcd60e51b8152602060048201526012602482015271496e76616c6964207468726573686f6c647360701b6044820152606490fd5b503461019e57602036600319011261019e5760406020916004358152600183522054604051908152f35b503461019e57602036600319011261019e5760409060043581528060205220805460018201549160018060a01b038060028301541661080060038401611c0b565b92600581015493600682015460ff60078401549161084b600886015494600a6009880154970154976040519c8d9c8d5260208d015260408c01526101c08060608d01528b0190611b49565b9760808a015261086060a08a01838316611b89565b818160081c1660c08a0152818160101c1660e08a015260181c1661010088015261012087015261014086015261016085015260ff8116151561018085015260081c166101a08301520390f35b503461019e578060031936011261019e576005546040516001600160a01b039091168152602090f35b503461019e578060031936011261019e576020600454604051908152f35b503461019e57604036600319011261019e57600435338252600260205261092060ff604084205416611d73565b808252816020526040822060ff600682015416600681101561097357610970929161095060026109679314611d36565b600a015460081c6001600160a01b03163314611daf565b60243590611df3565b80f35b634e487b7160e01b84526021600452602484fd5b503461019e578060031936011261019e573381526002602081815260ff6109b381604086205416611d73565b600454918460015b848110610a6257506109cc906120f7565b93859260015b8581106109eb57604051806109e78982611b96565b0390f35b8088528784526006828160408b200154169081101561052a57831480610a40575b610a1f575b610a1a90611cfa565b6109d2565b93610a388186610a32610a1a948b611f70565b52611cfa565b949050610a11565b5080885287845260408820600a015460081c6001600160a01b03163314610a0c565b8087528683526006848160408a2001541690811015610acd57861480610aab575b610a96575b610a9190611cfa565b6109bb565b90610aa3610a9191611cfa565b919050610a88565b5080875286835260408720600a015460081c6001600160a01b03163314610a83565b634e487b7160e01b88526021600452602488fd5b503461019e578060031936011261019e57602063ffffffff60075460301c16604051908152f35b503461019e576020806003193601126101e3576001600160a01b0390600435828116908190036104d057600454928460015b858110610ba65750610b4b906120f7565b94809360015b868110610b6657604051806109e78a82611b96565b808352828252848460026040862001541614610b8b575b610b8690611cfa565b610b51565b94610b9e8187610a32610b86948c611f70565b959050610b7d565b8087528685528383600260408a2001541614610bcb575b610bc690611cfa565b610b3a565b90610bd8610bc691611cfa565b919050610bbd565b503461019e57602036600319011261019e576004356001600160a01b03808216908183036104d057610c1790600a54163314611cc1565b808352600260205260ff604084205416610c78578252600260205260408220805460ff19166001179055600354600160401b811015610c64579061063f8260016109709401600355611afc565b634e487b7160e01b83526041600452602483fd5b60405162461bcd60e51b815260206004820152601260248201527120b63932b0b23c9030903932bb34b2bbb2b960711b6044820152606490fd5b503461019e57602036600319011261019e576004356001600160a01b03818116918290036106e757610ce990600a54163314611cc1565b6001600160601b0360a01b600854161760085580f35b503461019e578060031936011261019e576020600354604051908152f35b503461019e57604036600319011261019e576004356024356001600160401b0381116106e757610d51903690600401611aa6565b3383526002602052610d6960ff604085205416611d73565b818352826020526040832060068101805460ff81166006811015610e0057916004610dfa9492610dbd60027f43cc3d080e025c67c26d62b18bd442511dc9c76c8aa3f48cc0e8f456173e61f1989614611d36565b600a840154610dd99060081c6001600160a01b03163314611daf565b60ff1916179055600942910155604051918291602083526020830190611b49565b0390a280f35b634e487b7160e01b87526021600452602487fd5b503461019e57602036600319011261019e57806101c0604051610e3681611a29565b828152826020820152826040820152606080820152606060808201528260a08201528260c08201528260e08201528261010082015282610120820152826101408201528261016082015282610180820152826101a08201520152600435815280602052604081209060405191610eab83611a29565b805483526001810154602084015260028101546001600160a01b03166040840152610ed860038201611c0b565b60608401526004810154610eeb81611a8f565b90610ef96040519283611a6e565b808252602082016004840185526020852085915b8383106110fa57505050506080840152600581015460a0840152600681015490600660ff831610156110e45760ff8281600a941660c0870152818160081c1660e0870152818160101c1661010087015260181c16610120850152600781015461014085015260088101546101608501526009810154610180850152015460ff811615156101a084015260018060a01b039060081c166101c08301526040519060208252825160208301526020830151604083015260018060a01b036040840151166060830152610fee60608401516101e06080850152610200840190611b49565b90608084015191601f198482030160a0850152825190818152602081016020808460051b840101950193915b8383106110b7578680878a60a081015160c084015261104160c082015160e0850190611b89565b60ff60e08201511661010084015260ff6101008201511661012084015260ff610120820151166101408401526101408101516101608401526101608101516101808401526101808101516101a08401526101a081015115156101c08401526101c060018060a01b03910151166101e08301520390f35b90919293946020806110d5600193601f198682030187528951611b49565b9701930193019193929061101a565b634e487b7160e01b600052602160045260246000fd5b60016020819261110985611c0b565b815201920192019190610f0d565b503461019e57602036600319011261019e576004359060035482101561019e57602061114283611afc565b905460405160039290921b1c6001600160a01b03168152f35b503461019e578060031936011261019e57602060075461ffff60405191831c168152f35b503461019e578060031936011261019e57602060ff600a5460a01c16604051908152f35b503461019e578060031936011261019e57602063ffffffff60075416604051908152f35b503461019e57606036600319011261019e576024356001600160401b0381116101e3576111f8903690600401611aa6565b604435906001600160401b0382116106e757366023830112156106e75781600401359161122483611a8f565b926112326040519485611a6e565b80845260051b81016024016020840136821161185f5760248301905b82821061182c575050600754604051634a1f98d360e11b815260048035908201523360248201529250602091508290604490829060501c6001600160a01b03165afa9081156104db5784916117f1575b50156117bb57600454916112b183611cfa565b600455604051916112c183611a29565b8383526004356020840152336040840152606083015260808201524260a08201528260c08201528260e08201528261010082015282610120820152826101408201528261016082015282610180820152826101a0820152826101c082015281835282602052604083209080518255602081015160018301556002820160018060a01b036040830151166001600160601b0360a01b825416179055606081015180516001600160401b038111611708578060038501926113808454611bd1565b601f811161178b575b50602090601f831160011461172757889261171c575b50508160011b916000199060031b1c19161790555b6080810151805190600160401b8211611708576004840154826004860155808310611694575b506020016004840186526020862086915b838310611566575050505060a08101516005830155600682019160c082015192600684101561155257805460e084015161010085015161012086015163ff00000060189190911b1663ffffffff1990931660ff97881617600892831b61ff00161762ff000060109290921b91909116179190911790915561014083015160078301556101608301518282015561018083015160098301556101a0830151600a90920180546101c0909401516001600160a81b03199094169215159094169190911791901b610100600160a81b0316179055600754829060501c6001600160a01b0316803b156101e3578190602460405180968193630234d8a760e61b835260043560048401525af192831561154557602093611536575b5090604051913390827f9fe11e531030a058803617055e27f9f4768236e4322e13b9c4c09f4338e23a686004359280a48152f35b61153f90611a5b565b38611502565b50604051903d90823e3d90fd5b634e487b7160e01b86526021600452602486fd5b80518051906001600160401b038211611680576115838454611bd1565b601f8111611645575b506020908a601f84116001146115d8579280602093600196938796926115cd575b5050600019600383901b1c191690841b1785555b019201920191906113eb565b0151905038806115ad565b85905260208b2091908b5b601f198516811061162d575083602093600196938796938794601f19811610611614575b505050811b0185556115c1565b015160001960f88460031b161c19169055388080611607565b919260206001819286850151815501940192016115e3565b61167090858c5260208c20601f850160051c81019160208610611676575b601f0160051c0190611d1f565b3861158c565b9091508190611663565b634e487b7160e01b8a52604160045260248afd5b60048501875260208720908382015b81830181106116b35750506113da565b80896116c160019354611bd1565b806116cf575b5050016116a3565b601f811184146116e4575081555b89386116c7565b8282526116ff601f60208420920160051c8201858301611d1f565b818355556116dd565b634e487b7160e01b86526041600452602486fd5b01519050388061139f565b848952602089209250601f198416895b818110611773575090846001959493921061175a575b505050811b0190556113b4565b015160001960f88460031b161c1916905538808061174d565b92936020600181928786015181550195019301611737565b6117b590858a5260208a20601f850160051c8101916020861061167657601f0160051c0190611d1f565b38611389565b60405162461bcd60e51b815260206004820152600e60248201526d496e76616c696420706f6c69637960901b6044820152606490fd5b90506020813d602011611824575b8161180c60209383611a6e565b810103126104d0575180151581036104d0573861129e565b3d91506117ff565b81356001600160401b03811161185b57602091611850839260243691890101611aa6565b81520191019061124e565b8780fd5b8580fd5b503461019e578060031936011261019e576009546040516001600160a01b039091168152602090f35b503461019e578060031936011261019e576008546040516001600160a01b039091168152602090f35b503461019e57604036600319011261019e576024356001600160401b0381116101e357366023820112156101e35780600401356118f181611a8f565b916118ff6040519384611a6e565b81835260209160248385019160051b8301019136831161185f57602401905b8282106119845785857f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031633819003611966575061097090600435611f84565b6044906040519063073e64fd60e21b82523360048301526024820152fd5b8135815290830190830161191e565b503461019e578060031936011261019e5760075460405160509190911c6001600160a01b03168152602090f35b503461019e57602036600319011261019e576004356001600160a01b03818116918290036106e7576119f790600a54163314611cc1565b6001600160601b0360a01b600954161760095580f35b9050346101e357816003193601126101e3576020906006548152f35b6101e081019081106001600160401b03821117611a4557604052565b634e487b7160e01b600052604160045260246000fd5b6001600160401b038111611a4557604052565b90601f801991011681019081106001600160401b03821117611a4557604052565b6001600160401b038111611a455760051b60200190565b81601f82011215610574578035906001600160401b038211611a455760405192611ada601f8401601f191660200185611a6e565b8284526020838301011161057457816000926020809301838601378301015290565b600354811015611b335760036000527fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b0190600090565b634e487b7160e01b600052603260045260246000fd5b919082519283825260005b848110611b75575050826000602080949584010152601f8019910116010190565b602081830181015184830182015201611b54565b9060068210156110e45752565b6020908160408183019282815285518094520193019160005b828110611bbd575050505090565b835185529381019392810192600101611baf565b90600182811c92168015611c01575b6020831014611beb57565b634e487b7160e01b600052602260045260246000fd5b91607f1691611be0565b9060405191826000825492611c1f84611bd1565b908184526001948581169081600014611c8e5750600114611c4b575b5050611c4992500383611a6e565b565b9093915060005260209081600020936000915b818310611c76575050611c4993508201013880611c3b565b85548884018501529485019487945091830191611c5e565b915050611c4994506020925060ff191682840152151560051b8201013880611c3b565b6024359060ff8216820361057457565b15611cc857565b60405162461bcd60e51b815260206004820152600a60248201526927b7363c9030b236b4b760b11b6044820152606490fd5b6000198114611d095760010190565b634e487b7160e01b600052601160045260246000fd5b818110611d2a575050565b60008155600101611d1f565b15611d3d57565b60405162461bcd60e51b815260206004820152600e60248201526d496e76616c69642073746174757360901b6044820152606490fd5b15611d7a57565b60405162461bcd60e51b815260206004820152600d60248201526c27b7363c903932bb34b2bbb2b960991b6044820152606490fd5b15611db657565b60405162461bcd60e51b81526020600482015260156024820152742737ba1030b9b9b4b3b732b2103932bb34b2bbb2b960591b6044820152606490fd5b9060009082825281602052604090818320600681019260ff1992600384865416178555806008840155426009840155867f638d892b8630b775fea5d7a52b209e8bfa1d90c32b57cd37208ac84d4bcd6dcb60208451848152a26008546001600160a01b0390811680611e6b575b505050505050505050565b81600286015416813b15611f6c57889060648b838851958694859363652619a360e11b8552600485015260248401528860448401525af18015611f6257611f4e575b5060019060075460501c16930154833b15611f4a5790604487928385519687948593631f0224ad60e31b8552600485015260248401525af1908115611f415750611f2d575b5081541660051790557f633ff17603f543fb14610394a700602d41c32a3eded36897c06ec7789e4436509080a2388080808080808080611e60565b611f378491611a5b565b6106e75738611ef2565b513d86823e3d90fd5b8680fd5b96611f5b60019298611a5b565b9690611ead565b84513d8a823e3d90fd5b8880fd5b8051821015611b335760209160051b010190565b906000918252600160205260408220549081156120c0576003541561205757805115612043576020015160035490811561202f577fbc1f3daf62009283f8f2078bc45883e8dbb3f415bc325829ce38ece15b5f899091611fe49106611afc565b9054838552602085905260408520600a018054610100600160a81b03191660039390931b9190911c600881901b610100600160a81b03169290921790556001600160a01b03169280a3565b634e487b7160e01b84526012600452602484fd5b634e487b7160e01b83526032600452602483fd5b50600a80548284526020849052604084209091018054610100600160a81b03191660089290921b610100600160a81b03169190911790557fbc1f3daf62009283f8f2078bc45883e8dbb3f415bc325829ce38ece15b5f89906001600160a01b03600a54169280a3565b60405162461bcd60e51b815260206004820152600f60248201526e10db185a5b481b9bdd08199bdd5b99608a1b6044820152606490fd5b9061210182611a8f565b61210e6040519182611a6e565b828152809261211f601f1991611a8f565b019060203691013756fea2646970667358221220254174c0daf1a0b0624f339d56a186b9bdf69240c2da60833082d7668b1f453164736f6c63430008130033","opcodes":"PUSH1 0xA0 CALLVALUE PUSH3 0x133 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP1 PUSH1 0x1F PUSH3 0x22C3 CODESIZE DUP2 SWAP1 SUB SWAP2 DUP3 ADD PUSH1 0x1F NOT AND DUP4 ADD SWAP2 DUP5 DUP4 GT DUP5 DUP5 LT OR PUSH3 0x138 JUMPI DUP1 DUP5 SWAP3 PUSH1 0x80 SWAP5 PUSH1 0x40 MSTORE DUP4 CODECOPY DUP2 ADD SUB SLT PUSH3 0x133 JUMPI PUSH3 0x4F DUP2 PUSH3 0x14E JUMP JUMPDEST PUSH1 0x20 DUP3 ADD MLOAD SWAP1 PUSH1 0x40 DUP4 ADD MLOAD SWAP4 DUP5 AND DUP5 SUB PUSH3 0x133 JUMPI PUSH3 0x7A PUSH1 0x60 PUSH7 0x1000300030D40 SWAP5 ADD PUSH3 0x14E JUMP JUMPDEST PUSH1 0x80 DUP3 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x4 SSTORE PUSH1 0x7 DUP1 SLOAD PUSH1 0xA DUP1 SLOAD PUSH1 0x5 DUP1 SLOAD PUSH1 0x6 SWAP9 SWAP1 SWAP9 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP8 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP7 AND SWAP6 SWAP1 SWAP6 OR PUSH1 0xA0 SWAP9 SWAP1 SWAP9 SHL PUSH1 0x1 PUSH1 0xA0 SHL PUSH1 0x1 PUSH1 0xE0 SHL SUB AND SWAP8 SWAP1 SWAP8 OR SWAP1 SWAP5 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xF0 SHL SUB NOT SWAP1 SWAP4 AND PUSH1 0x50 SWAP2 SWAP1 SWAP2 SHL PUSH1 0x1 PUSH1 0x50 SHL PUSH1 0x1 PUSH1 0xF0 SHL SUB AND OR SWAP3 SWAP1 SWAP3 OR SWAP1 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xB0 SHL SUB NOT AND CALLER SWAP1 DUP2 OR PUSH2 0x1185 PUSH1 0xA2 SHL OR SWAP1 SWAP2 SSTORE PUSH1 0x9 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH2 0x215F SWAP1 DUP2 PUSH3 0x164 DUP3 CODECOPY PUSH1 0x80 MLOAD DUP2 PUSH2 0x1929 ADD MSTORE RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH3 0x133 JUMPI JUMP INVALID PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x13 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP1 DUP2 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0x41D443E EQ PUSH2 0x1A0D JUMPI POP DUP1 PUSH4 0x1AA632B3 EQ PUSH2 0x19C0 JUMPI DUP1 PUSH4 0x1C4DD7D0 EQ PUSH2 0x1993 JUMPI DUP1 PUSH4 0x1FE543E3 EQ PUSH2 0x18B5 JUMPI DUP1 PUSH4 0x3083A8E3 EQ PUSH2 0x188C JUMPI DUP1 PUSH4 0x31B221CD EQ PUSH2 0x1863 JUMPI DUP1 PUSH4 0x324BC2A9 EQ PUSH2 0x11C7 JUMPI DUP1 PUSH4 0x3B7ED734 EQ PUSH2 0x11A3 JUMPI DUP1 PUSH4 0x54EDB3A0 EQ PUSH2 0x117F JUMPI DUP1 PUSH4 0x598BC486 EQ PUSH2 0x115B JUMPI DUP1 PUSH4 0x5AAD00D6 EQ PUSH2 0x1117 JUMPI DUP1 PUSH4 0x5AEF2447 EQ PUSH2 0xE14 JUMPI DUP1 PUSH4 0x5EB0EC39 EQ PUSH2 0xD1D JUMPI DUP1 PUSH4 0x6AE2A1C9 EQ PUSH2 0xCFF JUMPI DUP1 PUSH4 0x7181896F EQ PUSH2 0xCB2 JUMPI DUP1 PUSH4 0x73A82B5F EQ PUSH2 0xBE0 JUMPI DUP1 PUSH4 0x7BCB4A64 EQ PUSH2 0xB08 JUMPI DUP1 PUSH4 0x7CCFD7FC EQ PUSH2 0xAE1 JUMPI DUP1 PUSH4 0x8C50FA1F EQ PUSH2 0x987 JUMPI DUP1 PUSH4 0x9B052153 EQ PUSH2 0x8F3 JUMPI DUP1 PUSH4 0xA0021CF1 EQ PUSH2 0x8D5 JUMPI DUP1 PUSH4 0xA3E56FA8 EQ PUSH2 0x8AC JUMPI DUP1 PUSH4 0xA888C2CD EQ PUSH2 0x7BF JUMPI DUP1 PUSH4 0xB11B1D76 EQ PUSH2 0x795 JUMPI DUP1 PUSH4 0xBFCE86B3 EQ PUSH2 0x6EB JUMPI DUP1 PUSH4 0xC9442DAC EQ PUSH2 0x579 JUMPI DUP1 PUSH4 0xE277C881 EQ PUSH2 0x235 JUMPI DUP1 PUSH4 0xE456C58A EQ PUSH2 0x211 JUMPI DUP1 PUSH4 0xED647D21 EQ PUSH2 0x1E7 JUMPI DUP1 PUSH4 0xF7CBB1B2 EQ PUSH2 0x1A1 JUMPI PUSH4 0xF851A440 EQ PUSH2 0x176 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x19E JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x19E JUMPI PUSH1 0xA SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x19E JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x19E JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP1 DUP2 SWAP1 SUB PUSH2 0x1E3 JUMPI PUSH1 0x40 DUP3 PUSH1 0xFF SWAP3 PUSH1 0x20 SWAP5 MSTORE PUSH1 0x2 DUP5 MSTORE KECCAK256 SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST POP DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x19E JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x19E JUMPI PUSH1 0x20 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB PUSH1 0x5 SLOAD PUSH1 0xA0 SHR AND PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x19E JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x19E JUMPI PUSH1 0x20 PUSH1 0xFF PUSH1 0xA SLOAD PUSH1 0xA8 SHR AND PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x19E JUMPI PUSH1 0xA0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x19E JUMPI PUSH1 0x4 CALLDATALOAD SWAP1 PUSH2 0x253 PUSH2 0x1CB1 JUMP JUMPDEST SWAP2 PUSH1 0x44 CALLDATALOAD SWAP3 PUSH1 0xFF DUP5 AND DUP5 SUB PUSH2 0x574 JUMPI PUSH1 0x64 CALLDATALOAD SWAP4 PUSH1 0xFF DUP6 AND SWAP1 DUP2 DUP7 SUB PUSH2 0x574 JUMPI PUSH1 0x9 SLOAD PUSH1 0x84 CALLDATALOAD SWAP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 SWAP1 SWAP2 DUP5 AND CALLER SUB PUSH2 0x53E JUMPI DUP6 DUP8 MSTORE PUSH1 0x20 SWAP4 DUP8 DUP6 MSTORE PUSH1 0xFF PUSH1 0x6 PUSH1 0x40 DUP11 KECCAK256 ADD SLOAD AND PUSH1 0x6 DUP2 LT ISZERO PUSH2 0x52A JUMPI DUP8 SWAP9 SWAP10 PUSH2 0x2B9 PUSH2 0x318 SWAP3 ISZERO PUSH2 0x1D36 JUMP JUMPDEST DUP9 DUP12 MSTORE DUP11 DUP8 MSTORE PUSH2 0x2FE PUSH1 0x40 DUP13 KECCAK256 SWAP7 PUSH2 0x2E6 PUSH1 0x6 DUP10 ADD SWAP8 DUP9 SWAP1 PUSH2 0xFF00 DUP3 SLOAD SWAP2 PUSH1 0x8 SHL AND SWAP1 PUSH2 0xFF00 NOT AND OR SWAP1 SSTORE JUMP JUMPDEST DUP7 SLOAD PUSH3 0xFF0000 NOT AND PUSH1 0x10 SWAP2 SWAP1 SWAP2 SHL PUSH3 0xFF0000 AND OR DUP7 SSTORE JUMP JUMPDEST DUP5 SLOAD PUSH4 0xFF000000 NOT AND PUSH1 0x18 SWAP2 SWAP1 SWAP2 SHL PUSH4 0xFF000000 AND OR DUP5 SSTORE JUMP JUMPDEST DUP6 PUSH1 0x7 DUP6 ADD SSTORE PUSH1 0xFF NOT SWAP2 PUSH1 0x1 DUP4 DUP6 SLOAD AND OR DUP5 SSTORE PUSH1 0xA SLOAD PUSH1 0xFF DUP2 PUSH1 0xA0 SHR AND DUP3 LT DUP1 PUSH2 0x521 JUMPI JUMPDEST ISZERO PUSH2 0x379 JUMPI POP POP POP POP POP POP POP PUSH2 0x352 SWAP2 PUSH2 0x1DF3 JUMP JUMPDEST PUSH32 0x1D3AA49336AFC0101AE504A343F9AB660F79125900C57654BE752BB099B2DA7D DUP3 DUP1 LOG2 DUP1 RETURN JUMPDEST PUSH1 0xFF SWAP2 SWAP3 SWAP4 SWAP5 SWAP6 SWAP7 SWAP8 POP PUSH1 0xA8 SHR AND LT PUSH1 0x0 EQ PUSH2 0x3FD JUMPI POP SWAP2 DUP2 PUSH1 0x4 PUSH1 0x60 SWAP5 PUSH32 0x43CC3D080E025C67C26D62B18BD442511DC9C76C8AA3F48CC0E8F456173E61F1 SWAP7 SWAP5 SLOAD AND OR SWAP1 SSTORE PUSH1 0x9 TIMESTAMP SWAP2 ADD SSTORE PUSH1 0x18 PUSH1 0x40 MLOAD SWAP2 DUP1 DUP4 MSTORE DUP3 ADD MSTORE PUSH32 0x48696768206672617564207269736B2064657465637465640000000000000000 PUSH1 0x40 DUP3 ADD MSTORE LOG2 PUSH2 0x352 JUMP JUMPDEST SWAP5 POP SWAP2 PUSH1 0xA SWAP2 POP ADD PUSH1 0x1 DUP3 DUP3 SLOAD AND OR SWAP1 SSTORE PUSH1 0x3 SLOAD ISZERO PUSH2 0x4E6 JUMPI DUP4 DUP6 MSTORE DUP5 DUP3 MSTORE PUSH1 0x2 PUSH1 0x6 PUSH1 0x40 DUP8 KECCAK256 ADD SWAP2 DUP3 SLOAD AND OR SWAP1 SSTORE DUP1 PUSH1 0x5 SLOAD SWAP3 PUSH1 0xA4 PUSH1 0x6 SLOAD DUP8 PUSH1 0x7 SLOAD SWAP4 PUSH1 0x40 MLOAD SWAP8 DUP9 SWAP6 DUP7 SWAP5 PUSH4 0x5D3B1D3 PUSH1 0xE4 SHL DUP7 MSTORE PUSH1 0x4 DUP7 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 PUSH1 0xA0 SHR AND PUSH1 0x24 DUP7 ADD MSTORE PUSH2 0xFFFF DUP2 DUP10 SHR AND PUSH1 0x44 DUP7 ADD MSTORE PUSH4 0xFFFFFFFF SWAP1 DUP2 DUP2 AND PUSH1 0x64 DUP8 ADD MSTORE PUSH1 0x30 SHR AND PUSH1 0x84 DUP6 ADD MSTORE AND GAS CALL DUP1 ISZERO PUSH2 0x4DB JUMPI DUP5 SWAP1 PUSH2 0x4A9 JUMPI JUMPDEST PUSH1 0x1 SWAP3 POP DUP5 MSTORE MSTORE DUP1 PUSH1 0x40 DUP4 KECCAK256 SSTORE PUSH2 0x352 JUMP JUMPDEST POP DUP1 DUP3 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x4D4 JUMPI JUMPDEST PUSH2 0x4BF DUP2 DUP4 PUSH2 0x1A6E JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x4D0 JUMPI PUSH1 0x1 SWAP2 MLOAD PUSH2 0x497 JUMP JUMPDEST DUP4 DUP1 REVERT JUMPDEST POP RETURNDATASIZE PUSH2 0x4B5 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP7 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x4E6F2061637469766520726576696577657273 PUSH1 0x68 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP DUP8 ISZERO ISZERO PUSH2 0x33D JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP10 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 DUP10 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x4F6E6C79204149206F7261636C65 PUSH1 0x90 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x19E JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x19E JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 DUP2 AND SWAP2 DUP3 SWAP1 SUB PUSH2 0x6E7 JUMPI PUSH2 0x5B0 DUP2 PUSH1 0xA SLOAD AND CALLER EQ PUSH2 0x1CC1 JUMP JUMPDEST DUP2 DUP4 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 DUP5 KECCAK256 SLOAD AND ISZERO PUSH2 0x6B1 JUMPI DUP2 DUP4 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE DUP3 JUMPDEST PUSH1 0x3 DUP1 SLOAD DUP1 DUP4 LT ISZERO PUSH2 0x6A9 JUMPI DUP5 DUP5 PUSH2 0x5F2 DUP6 PUSH2 0x1AFC JUMP JUMPDEST SWAP1 SLOAD SWAP1 DUP6 SHL SHR AND EQ PUSH2 0x60E JUMPI POP POP PUSH2 0x609 SWAP1 PUSH2 0x1CFA JUMP JUMPDEST PUSH2 0x5DB JUMP JUMPDEST SWAP3 SWAP4 POP SWAP2 PUSH1 0x0 NOT SWAP2 SWAP1 DUP3 DUP2 ADD SWAP1 DUP2 GT PUSH2 0x695 JUMPI SWAP1 PUSH2 0x63F DUP6 PUSH2 0x632 PUSH2 0x65E SWAP5 PUSH2 0x1AFC JUMP JUMPDEST SWAP1 SLOAD SWAP1 DUP8 SHL SHR AND SWAP2 PUSH2 0x1AFC JUMP JUMPDEST SWAP1 SWAP2 SWAP1 DUP3 SLOAD SWAP1 PUSH1 0x3 SHL SWAP2 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP1 SWAP2 AND DUP4 SHL SWAP3 SHL NOT AND OR SWAP1 SSTORE JUMP JUMPDEST DUP2 SLOAD DUP1 ISZERO PUSH2 0x681 JUMPI ADD SWAP2 PUSH2 0x671 DUP4 PUSH2 0x1AFC JUMP JUMPDEST SWAP1 SWAP2 DUP3 SLOAD SWAP2 DUP5 SHL SHL NOT AND SWAP1 SSTORE SSTORE DUP1 RETURN JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP6 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 DUP6 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP7 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 DUP7 REVERT JUMPDEST POP POP POP POP POP DUP1 RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x2737BA1030903932BB34B2BBB2B9 PUSH1 0x91 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST DUP3 DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x19E JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x19E JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0xFF DUP2 AND DUP1 DUP3 SUB PUSH2 0x574 JUMPI PUSH2 0x713 PUSH2 0x1CB1 JUMP JUMPDEST PUSH1 0xA SLOAD SWAP2 PUSH2 0x72B CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND EQ PUSH2 0x1CC1 JUMP JUMPDEST PUSH1 0xFF DUP3 AND GT ISZERO PUSH2 0x75B JUMPI PUSH1 0xFF PUSH1 0xA8 SHL SWAP1 PUSH1 0xA8 SHL AND SWAP2 PUSH1 0xFF PUSH1 0xA0 SHL SWAP1 PUSH1 0xA0 SHL AND SWAP1 PUSH2 0xFFFF PUSH1 0xA0 SHL NOT AND OR OR PUSH1 0xA SSTORE DUP1 RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x496E76616C6964207468726573686F6C6473 PUSH1 0x70 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x19E JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x19E JUMPI PUSH1 0x40 PUSH1 0x20 SWAP2 PUSH1 0x4 CALLDATALOAD DUP2 MSTORE PUSH1 0x1 DUP4 MSTORE KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x19E JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x19E JUMPI PUSH1 0x40 SWAP1 PUSH1 0x4 CALLDATALOAD DUP2 MSTORE DUP1 PUSH1 0x20 MSTORE KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD SWAP2 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP1 PUSH1 0x2 DUP4 ADD SLOAD AND PUSH2 0x800 PUSH1 0x3 DUP5 ADD PUSH2 0x1C0B JUMP JUMPDEST SWAP3 PUSH1 0x5 DUP2 ADD SLOAD SWAP4 PUSH1 0x6 DUP3 ADD SLOAD PUSH1 0xFF PUSH1 0x7 DUP5 ADD SLOAD SWAP2 PUSH2 0x84B PUSH1 0x8 DUP7 ADD SLOAD SWAP5 PUSH1 0xA PUSH1 0x9 DUP9 ADD SLOAD SWAP8 ADD SLOAD SWAP8 PUSH1 0x40 MLOAD SWAP13 DUP14 SWAP13 DUP14 MSTORE PUSH1 0x20 DUP14 ADD MSTORE PUSH1 0x40 DUP13 ADD MSTORE PUSH2 0x1C0 DUP1 PUSH1 0x60 DUP14 ADD MSTORE DUP12 ADD SWAP1 PUSH2 0x1B49 JUMP JUMPDEST SWAP8 PUSH1 0x80 DUP11 ADD MSTORE PUSH2 0x860 PUSH1 0xA0 DUP11 ADD DUP4 DUP4 AND PUSH2 0x1B89 JUMP JUMPDEST DUP2 DUP2 PUSH1 0x8 SHR AND PUSH1 0xC0 DUP11 ADD MSTORE DUP2 DUP2 PUSH1 0x10 SHR AND PUSH1 0xE0 DUP11 ADD MSTORE PUSH1 0x18 SHR AND PUSH2 0x100 DUP9 ADD MSTORE PUSH2 0x120 DUP8 ADD MSTORE PUSH2 0x140 DUP7 ADD MSTORE PUSH2 0x160 DUP6 ADD MSTORE PUSH1 0xFF DUP2 AND ISZERO ISZERO PUSH2 0x180 DUP6 ADD MSTORE PUSH1 0x8 SHR AND PUSH2 0x1A0 DUP4 ADD MSTORE SUB SWAP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x19E JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x19E JUMPI PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x19E JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x19E JUMPI PUSH1 0x20 PUSH1 0x4 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x19E JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x19E JUMPI PUSH1 0x4 CALLDATALOAD CALLER DUP3 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH2 0x920 PUSH1 0xFF PUSH1 0x40 DUP5 KECCAK256 SLOAD AND PUSH2 0x1D73 JUMP JUMPDEST DUP1 DUP3 MSTORE DUP2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP3 KECCAK256 PUSH1 0xFF PUSH1 0x6 DUP3 ADD SLOAD AND PUSH1 0x6 DUP2 LT ISZERO PUSH2 0x973 JUMPI PUSH2 0x970 SWAP3 SWAP2 PUSH2 0x950 PUSH1 0x2 PUSH2 0x967 SWAP4 EQ PUSH2 0x1D36 JUMP JUMPDEST PUSH1 0xA ADD SLOAD PUSH1 0x8 SHR PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1DAF JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH2 0x1DF3 JUMP JUMPDEST DUP1 RETURN JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP5 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 DUP5 REVERT JUMPDEST POP CALLVALUE PUSH2 0x19E JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x19E JUMPI CALLER DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0xFF PUSH2 0x9B3 DUP2 PUSH1 0x40 DUP7 KECCAK256 SLOAD AND PUSH2 0x1D73 JUMP JUMPDEST PUSH1 0x4 SLOAD SWAP2 DUP5 PUSH1 0x1 JUMPDEST DUP5 DUP2 LT PUSH2 0xA62 JUMPI POP PUSH2 0x9CC SWAP1 PUSH2 0x20F7 JUMP JUMPDEST SWAP4 DUP6 SWAP3 PUSH1 0x1 JUMPDEST DUP6 DUP2 LT PUSH2 0x9EB JUMPI PUSH1 0x40 MLOAD DUP1 PUSH2 0x9E7 DUP10 DUP3 PUSH2 0x1B96 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST DUP1 DUP9 MSTORE DUP8 DUP5 MSTORE PUSH1 0x6 DUP3 DUP2 PUSH1 0x40 DUP12 KECCAK256 ADD SLOAD AND SWAP1 DUP2 LT ISZERO PUSH2 0x52A JUMPI DUP4 EQ DUP1 PUSH2 0xA40 JUMPI JUMPDEST PUSH2 0xA1F JUMPI JUMPDEST PUSH2 0xA1A SWAP1 PUSH2 0x1CFA JUMP JUMPDEST PUSH2 0x9D2 JUMP JUMPDEST SWAP4 PUSH2 0xA38 DUP2 DUP7 PUSH2 0xA32 PUSH2 0xA1A SWAP5 DUP12 PUSH2 0x1F70 JUMP JUMPDEST MSTORE PUSH2 0x1CFA JUMP JUMPDEST SWAP5 SWAP1 POP PUSH2 0xA11 JUMP JUMPDEST POP DUP1 DUP9 MSTORE DUP8 DUP5 MSTORE PUSH1 0x40 DUP9 KECCAK256 PUSH1 0xA ADD SLOAD PUSH1 0x8 SHR PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xA0C JUMP JUMPDEST DUP1 DUP8 MSTORE DUP7 DUP4 MSTORE PUSH1 0x6 DUP5 DUP2 PUSH1 0x40 DUP11 KECCAK256 ADD SLOAD AND SWAP1 DUP2 LT ISZERO PUSH2 0xACD JUMPI DUP7 EQ DUP1 PUSH2 0xAAB JUMPI JUMPDEST PUSH2 0xA96 JUMPI JUMPDEST PUSH2 0xA91 SWAP1 PUSH2 0x1CFA JUMP JUMPDEST PUSH2 0x9BB JUMP JUMPDEST SWAP1 PUSH2 0xAA3 PUSH2 0xA91 SWAP2 PUSH2 0x1CFA JUMP JUMPDEST SWAP2 SWAP1 POP PUSH2 0xA88 JUMP JUMPDEST POP DUP1 DUP8 MSTORE DUP7 DUP4 MSTORE PUSH1 0x40 DUP8 KECCAK256 PUSH1 0xA ADD SLOAD PUSH1 0x8 SHR PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xA83 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP9 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 DUP9 REVERT JUMPDEST POP CALLVALUE PUSH2 0x19E JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x19E JUMPI PUSH1 0x20 PUSH4 0xFFFFFFFF PUSH1 0x7 SLOAD PUSH1 0x30 SHR AND PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x19E JUMPI PUSH1 0x20 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1E3 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 PUSH1 0x4 CALLDATALOAD DUP3 DUP2 AND SWAP1 DUP2 SWAP1 SUB PUSH2 0x4D0 JUMPI PUSH1 0x4 SLOAD SWAP3 DUP5 PUSH1 0x1 JUMPDEST DUP6 DUP2 LT PUSH2 0xBA6 JUMPI POP PUSH2 0xB4B SWAP1 PUSH2 0x20F7 JUMP JUMPDEST SWAP5 DUP1 SWAP4 PUSH1 0x1 JUMPDEST DUP7 DUP2 LT PUSH2 0xB66 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH2 0x9E7 DUP11 DUP3 PUSH2 0x1B96 JUMP JUMPDEST DUP1 DUP4 MSTORE DUP3 DUP3 MSTORE DUP5 DUP5 PUSH1 0x2 PUSH1 0x40 DUP7 KECCAK256 ADD SLOAD AND EQ PUSH2 0xB8B JUMPI JUMPDEST PUSH2 0xB86 SWAP1 PUSH2 0x1CFA JUMP JUMPDEST PUSH2 0xB51 JUMP JUMPDEST SWAP5 PUSH2 0xB9E DUP2 DUP8 PUSH2 0xA32 PUSH2 0xB86 SWAP5 DUP13 PUSH2 0x1F70 JUMP JUMPDEST SWAP6 SWAP1 POP PUSH2 0xB7D JUMP JUMPDEST DUP1 DUP8 MSTORE DUP7 DUP6 MSTORE DUP4 DUP4 PUSH1 0x2 PUSH1 0x40 DUP11 KECCAK256 ADD SLOAD AND EQ PUSH2 0xBCB JUMPI JUMPDEST PUSH2 0xBC6 SWAP1 PUSH2 0x1CFA JUMP JUMPDEST PUSH2 0xB3A JUMP JUMPDEST SWAP1 PUSH2 0xBD8 PUSH2 0xBC6 SWAP2 PUSH2 0x1CFA JUMP JUMPDEST SWAP2 SWAP1 POP PUSH2 0xBBD JUMP JUMPDEST POP CALLVALUE PUSH2 0x19E JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x19E JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP3 AND SWAP1 DUP2 DUP4 SUB PUSH2 0x4D0 JUMPI PUSH2 0xC17 SWAP1 PUSH1 0xA SLOAD AND CALLER EQ PUSH2 0x1CC1 JUMP JUMPDEST DUP1 DUP4 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 DUP5 KECCAK256 SLOAD AND PUSH2 0xC78 JUMPI DUP3 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x40 SHL DUP2 LT ISZERO PUSH2 0xC64 JUMPI SWAP1 PUSH2 0x63F DUP3 PUSH1 0x1 PUSH2 0x970 SWAP5 ADD PUSH1 0x3 SSTORE PUSH2 0x1AFC JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP4 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 DUP4 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x20B63932B0B23C9030903932BB34B2BBB2B9 PUSH1 0x71 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x19E JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x19E JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 DUP2 AND SWAP2 DUP3 SWAP1 SUB PUSH2 0x6E7 JUMPI PUSH2 0xCE9 SWAP1 PUSH1 0xA SLOAD AND CALLER EQ PUSH2 0x1CC1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL PUSH1 0x8 SLOAD AND OR PUSH1 0x8 SSTORE DUP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x19E JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x19E JUMPI PUSH1 0x20 PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x19E JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x19E JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x24 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x6E7 JUMPI PUSH2 0xD51 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x1AA6 JUMP JUMPDEST CALLER DUP4 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH2 0xD69 PUSH1 0xFF PUSH1 0x40 DUP6 KECCAK256 SLOAD AND PUSH2 0x1D73 JUMP JUMPDEST DUP2 DUP4 MSTORE DUP3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 PUSH1 0x6 DUP2 ADD DUP1 SLOAD PUSH1 0xFF DUP2 AND PUSH1 0x6 DUP2 LT ISZERO PUSH2 0xE00 JUMPI SWAP2 PUSH1 0x4 PUSH2 0xDFA SWAP5 SWAP3 PUSH2 0xDBD PUSH1 0x2 PUSH32 0x43CC3D080E025C67C26D62B18BD442511DC9C76C8AA3F48CC0E8F456173E61F1 SWAP9 SWAP7 EQ PUSH2 0x1D36 JUMP JUMPDEST PUSH1 0xA DUP5 ADD SLOAD PUSH2 0xDD9 SWAP1 PUSH1 0x8 SHR PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1DAF JUMP JUMPDEST PUSH1 0xFF NOT AND OR SWAP1 SSTORE PUSH1 0x9 TIMESTAMP SWAP2 ADD SSTORE PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 PUSH1 0x20 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP1 PUSH2 0x1B49 JUMP JUMPDEST SUB SWAP1 LOG2 DUP1 RETURN JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP8 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 DUP8 REVERT JUMPDEST POP CALLVALUE PUSH2 0x19E JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x19E JUMPI DUP1 PUSH2 0x1C0 PUSH1 0x40 MLOAD PUSH2 0xE36 DUP2 PUSH2 0x1A29 JUMP JUMPDEST DUP3 DUP2 MSTORE DUP3 PUSH1 0x20 DUP3 ADD MSTORE DUP3 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 DUP1 DUP3 ADD MSTORE PUSH1 0x60 PUSH1 0x80 DUP3 ADD MSTORE DUP3 PUSH1 0xA0 DUP3 ADD MSTORE DUP3 PUSH1 0xC0 DUP3 ADD MSTORE DUP3 PUSH1 0xE0 DUP3 ADD MSTORE DUP3 PUSH2 0x100 DUP3 ADD MSTORE DUP3 PUSH2 0x120 DUP3 ADD MSTORE DUP3 PUSH2 0x140 DUP3 ADD MSTORE DUP3 PUSH2 0x160 DUP3 ADD MSTORE DUP3 PUSH2 0x180 DUP3 ADD MSTORE DUP3 PUSH2 0x1A0 DUP3 ADD MSTORE ADD MSTORE PUSH1 0x4 CALLDATALOAD DUP2 MSTORE DUP1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP1 PUSH1 0x40 MLOAD SWAP2 PUSH2 0xEAB DUP4 PUSH2 0x1A29 JUMP JUMPDEST DUP1 SLOAD DUP4 MSTORE PUSH1 0x1 DUP2 ADD SLOAD PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x2 DUP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x40 DUP5 ADD MSTORE PUSH2 0xED8 PUSH1 0x3 DUP3 ADD PUSH2 0x1C0B JUMP JUMPDEST PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x4 DUP2 ADD SLOAD PUSH2 0xEEB DUP2 PUSH2 0x1A8F JUMP JUMPDEST SWAP1 PUSH2 0xEF9 PUSH1 0x40 MLOAD SWAP3 DUP4 PUSH2 0x1A6E JUMP JUMPDEST DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD PUSH1 0x4 DUP5 ADD DUP6 MSTORE PUSH1 0x20 DUP6 KECCAK256 DUP6 SWAP2 JUMPDEST DUP4 DUP4 LT PUSH2 0x10FA JUMPI POP POP POP POP PUSH1 0x80 DUP5 ADD MSTORE PUSH1 0x5 DUP2 ADD SLOAD PUSH1 0xA0 DUP5 ADD MSTORE PUSH1 0x6 DUP2 ADD SLOAD SWAP1 PUSH1 0x6 PUSH1 0xFF DUP4 AND LT ISZERO PUSH2 0x10E4 JUMPI PUSH1 0xFF DUP3 DUP2 PUSH1 0xA SWAP5 AND PUSH1 0xC0 DUP8 ADD MSTORE DUP2 DUP2 PUSH1 0x8 SHR AND PUSH1 0xE0 DUP8 ADD MSTORE DUP2 DUP2 PUSH1 0x10 SHR AND PUSH2 0x100 DUP8 ADD MSTORE PUSH1 0x18 SHR AND PUSH2 0x120 DUP6 ADD MSTORE PUSH1 0x7 DUP2 ADD SLOAD PUSH2 0x140 DUP6 ADD MSTORE PUSH1 0x8 DUP2 ADD SLOAD PUSH2 0x160 DUP6 ADD MSTORE PUSH1 0x9 DUP2 ADD SLOAD PUSH2 0x180 DUP6 ADD MSTORE ADD SLOAD PUSH1 0xFF DUP2 AND ISZERO ISZERO PUSH2 0x1A0 DUP5 ADD MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP1 PUSH1 0x8 SHR AND PUSH2 0x1C0 DUP4 ADD MSTORE PUSH1 0x40 MLOAD SWAP1 PUSH1 0x20 DUP3 MSTORE DUP3 MLOAD PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x20 DUP4 ADD MLOAD PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x40 DUP5 ADD MLOAD AND PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0xFEE PUSH1 0x60 DUP5 ADD MLOAD PUSH2 0x1E0 PUSH1 0x80 DUP6 ADD MSTORE PUSH2 0x200 DUP5 ADD SWAP1 PUSH2 0x1B49 JUMP JUMPDEST SWAP1 PUSH1 0x80 DUP5 ADD MLOAD SWAP2 PUSH1 0x1F NOT DUP5 DUP3 SUB ADD PUSH1 0xA0 DUP6 ADD MSTORE DUP3 MLOAD SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 ADD PUSH1 0x20 DUP1 DUP5 PUSH1 0x5 SHL DUP5 ADD ADD SWAP6 ADD SWAP4 SWAP2 JUMPDEST DUP4 DUP4 LT PUSH2 0x10B7 JUMPI DUP7 DUP1 DUP8 DUP11 PUSH1 0xA0 DUP2 ADD MLOAD PUSH1 0xC0 DUP5 ADD MSTORE PUSH2 0x1041 PUSH1 0xC0 DUP3 ADD MLOAD PUSH1 0xE0 DUP6 ADD SWAP1 PUSH2 0x1B89 JUMP JUMPDEST PUSH1 0xFF PUSH1 0xE0 DUP3 ADD MLOAD AND PUSH2 0x100 DUP5 ADD MSTORE PUSH1 0xFF PUSH2 0x100 DUP3 ADD MLOAD AND PUSH2 0x120 DUP5 ADD MSTORE PUSH1 0xFF PUSH2 0x120 DUP3 ADD MLOAD AND PUSH2 0x140 DUP5 ADD MSTORE PUSH2 0x140 DUP2 ADD MLOAD PUSH2 0x160 DUP5 ADD MSTORE PUSH2 0x160 DUP2 ADD MLOAD PUSH2 0x180 DUP5 ADD MSTORE PUSH2 0x180 DUP2 ADD MLOAD PUSH2 0x1A0 DUP5 ADD MSTORE PUSH2 0x1A0 DUP2 ADD MLOAD ISZERO ISZERO PUSH2 0x1C0 DUP5 ADD MSTORE PUSH2 0x1C0 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP2 ADD MLOAD AND PUSH2 0x1E0 DUP4 ADD MSTORE SUB SWAP1 RETURN JUMPDEST SWAP1 SWAP2 SWAP3 SWAP4 SWAP5 PUSH1 0x20 DUP1 PUSH2 0x10D5 PUSH1 0x1 SWAP4 PUSH1 0x1F NOT DUP7 DUP3 SUB ADD DUP8 MSTORE DUP10 MLOAD PUSH2 0x1B49 JUMP JUMPDEST SWAP8 ADD SWAP4 ADD SWAP4 ADD SWAP2 SWAP4 SWAP3 SWAP1 PUSH2 0x101A JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x20 DUP2 SWAP3 PUSH2 0x1109 DUP6 PUSH2 0x1C0B JUMP JUMPDEST DUP2 MSTORE ADD SWAP3 ADD SWAP3 ADD SWAP2 SWAP1 PUSH2 0xF0D JUMP JUMPDEST POP CALLVALUE PUSH2 0x19E JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x19E JUMPI PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x3 SLOAD DUP3 LT ISZERO PUSH2 0x19E JUMPI PUSH1 0x20 PUSH2 0x1142 DUP4 PUSH2 0x1AFC JUMP JUMPDEST SWAP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x3 SWAP3 SWAP1 SWAP3 SHL SHR PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x19E JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x19E JUMPI PUSH1 0x20 PUSH1 0x7 SLOAD PUSH2 0xFFFF PUSH1 0x40 MLOAD SWAP2 DUP4 SHR AND DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x19E JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x19E JUMPI PUSH1 0x20 PUSH1 0xFF PUSH1 0xA SLOAD PUSH1 0xA0 SHR AND PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x19E JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x19E JUMPI PUSH1 0x20 PUSH4 0xFFFFFFFF PUSH1 0x7 SLOAD AND PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x19E JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x19E JUMPI PUSH1 0x24 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x1E3 JUMPI PUSH2 0x11F8 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x1AA6 JUMP JUMPDEST PUSH1 0x44 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x6E7 JUMPI CALLDATASIZE PUSH1 0x23 DUP4 ADD SLT ISZERO PUSH2 0x6E7 JUMPI DUP2 PUSH1 0x4 ADD CALLDATALOAD SWAP2 PUSH2 0x1224 DUP4 PUSH2 0x1A8F JUMP JUMPDEST SWAP3 PUSH2 0x1232 PUSH1 0x40 MLOAD SWAP5 DUP6 PUSH2 0x1A6E JUMP JUMPDEST DUP1 DUP5 MSTORE PUSH1 0x5 SHL DUP2 ADD PUSH1 0x24 ADD PUSH1 0x20 DUP5 ADD CALLDATASIZE DUP3 GT PUSH2 0x185F JUMPI PUSH1 0x24 DUP4 ADD SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x182C JUMPI POP POP PUSH1 0x7 SLOAD PUSH1 0x40 MLOAD PUSH4 0x4A1F98D3 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 DUP1 CALLDATALOAD SWAP1 DUP3 ADD MSTORE CALLER PUSH1 0x24 DUP3 ADD MSTORE SWAP3 POP PUSH1 0x20 SWAP2 POP DUP3 SWAP1 PUSH1 0x44 SWAP1 DUP3 SWAP1 PUSH1 0x50 SHR PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x4DB JUMPI DUP5 SWAP2 PUSH2 0x17F1 JUMPI JUMPDEST POP ISZERO PUSH2 0x17BB JUMPI PUSH1 0x4 SLOAD SWAP2 PUSH2 0x12B1 DUP4 PUSH2 0x1CFA JUMP JUMPDEST PUSH1 0x4 SSTORE PUSH1 0x40 MLOAD SWAP2 PUSH2 0x12C1 DUP4 PUSH2 0x1A29 JUMP JUMPDEST DUP4 DUP4 MSTORE PUSH1 0x4 CALLDATALOAD PUSH1 0x20 DUP5 ADD MSTORE CALLER PUSH1 0x40 DUP5 ADD MSTORE PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x80 DUP3 ADD MSTORE TIMESTAMP PUSH1 0xA0 DUP3 ADD MSTORE DUP3 PUSH1 0xC0 DUP3 ADD MSTORE DUP3 PUSH1 0xE0 DUP3 ADD MSTORE DUP3 PUSH2 0x100 DUP3 ADD MSTORE DUP3 PUSH2 0x120 DUP3 ADD MSTORE DUP3 PUSH2 0x140 DUP3 ADD MSTORE DUP3 PUSH2 0x160 DUP3 ADD MSTORE DUP3 PUSH2 0x180 DUP3 ADD MSTORE DUP3 PUSH2 0x1A0 DUP3 ADD MSTORE DUP3 PUSH2 0x1C0 DUP3 ADD MSTORE DUP2 DUP4 MSTORE DUP3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 SWAP1 DUP1 MLOAD DUP3 SSTORE PUSH1 0x20 DUP2 ADD MLOAD PUSH1 0x1 DUP4 ADD SSTORE PUSH1 0x2 DUP3 ADD PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x40 DUP4 ADD MLOAD AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL DUP3 SLOAD AND OR SWAP1 SSTORE PUSH1 0x60 DUP2 ADD MLOAD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x1708 JUMPI DUP1 PUSH1 0x3 DUP6 ADD SWAP3 PUSH2 0x1380 DUP5 SLOAD PUSH2 0x1BD1 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x178B JUMPI JUMPDEST POP PUSH1 0x20 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x1727 JUMPI DUP9 SWAP3 PUSH2 0x171C JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR SWAP1 SSTORE JUMPDEST PUSH1 0x80 DUP2 ADD MLOAD DUP1 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x40 SHL DUP3 GT PUSH2 0x1708 JUMPI PUSH1 0x4 DUP5 ADD SLOAD DUP3 PUSH1 0x4 DUP7 ADD SSTORE DUP1 DUP4 LT PUSH2 0x1694 JUMPI JUMPDEST POP PUSH1 0x20 ADD PUSH1 0x4 DUP5 ADD DUP7 MSTORE PUSH1 0x20 DUP7 KECCAK256 DUP7 SWAP2 JUMPDEST DUP4 DUP4 LT PUSH2 0x1566 JUMPI POP POP POP POP PUSH1 0xA0 DUP2 ADD MLOAD PUSH1 0x5 DUP4 ADD SSTORE PUSH1 0x6 DUP3 ADD SWAP2 PUSH1 0xC0 DUP3 ADD MLOAD SWAP3 PUSH1 0x6 DUP5 LT ISZERO PUSH2 0x1552 JUMPI DUP1 SLOAD PUSH1 0xE0 DUP5 ADD MLOAD PUSH2 0x100 DUP6 ADD MLOAD PUSH2 0x120 DUP7 ADD MLOAD PUSH4 0xFF000000 PUSH1 0x18 SWAP2 SWAP1 SWAP2 SHL AND PUSH4 0xFFFFFFFF NOT SWAP1 SWAP4 AND PUSH1 0xFF SWAP8 DUP9 AND OR PUSH1 0x8 SWAP3 DUP4 SHL PUSH2 0xFF00 AND OR PUSH3 0xFF0000 PUSH1 0x10 SWAP3 SWAP1 SWAP3 SHL SWAP2 SWAP1 SWAP2 AND OR SWAP2 SWAP1 SWAP2 OR SWAP1 SWAP2 SSTORE PUSH2 0x140 DUP4 ADD MLOAD PUSH1 0x7 DUP4 ADD SSTORE PUSH2 0x160 DUP4 ADD MLOAD DUP3 DUP3 ADD SSTORE PUSH2 0x180 DUP4 ADD MLOAD PUSH1 0x9 DUP4 ADD SSTORE PUSH2 0x1A0 DUP4 ADD MLOAD PUSH1 0xA SWAP1 SWAP3 ADD DUP1 SLOAD PUSH2 0x1C0 SWAP1 SWAP5 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT SWAP1 SWAP5 AND SWAP3 ISZERO ISZERO SWAP1 SWAP5 AND SWAP2 SWAP1 SWAP2 OR SWAP2 SWAP1 SHL PUSH2 0x100 PUSH1 0x1 PUSH1 0xA8 SHL SUB AND OR SWAP1 SSTORE PUSH1 0x7 SLOAD DUP3 SWAP1 PUSH1 0x50 SHR PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 EXTCODESIZE ISZERO PUSH2 0x1E3 JUMPI DUP2 SWAP1 PUSH1 0x24 PUSH1 0x40 MLOAD DUP1 SWAP7 DUP2 SWAP4 PUSH4 0x234D8A7 PUSH1 0xE6 SHL DUP4 MSTORE PUSH1 0x4 CALLDATALOAD PUSH1 0x4 DUP5 ADD MSTORE GAS CALL SWAP3 DUP4 ISZERO PUSH2 0x1545 JUMPI PUSH1 0x20 SWAP4 PUSH2 0x1536 JUMPI JUMPDEST POP SWAP1 PUSH1 0x40 MLOAD SWAP2 CALLER SWAP1 DUP3 PUSH32 0x9FE11E531030A058803617055E27F9F4768236E4322E13B9C4C09F4338E23A68 PUSH1 0x4 CALLDATALOAD SWAP3 DUP1 LOG4 DUP2 MSTORE RETURN JUMPDEST PUSH2 0x153F SWAP1 PUSH2 0x1A5B JUMP JUMPDEST CODESIZE PUSH2 0x1502 JUMP JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 RETURNDATASIZE SWAP1 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP7 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 DUP7 REVERT JUMPDEST DUP1 MLOAD DUP1 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x1680 JUMPI PUSH2 0x1583 DUP5 SLOAD PUSH2 0x1BD1 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x1645 JUMPI JUMPDEST POP PUSH1 0x20 SWAP1 DUP11 PUSH1 0x1F DUP5 GT PUSH1 0x1 EQ PUSH2 0x15D8 JUMPI SWAP3 DUP1 PUSH1 0x20 SWAP4 PUSH1 0x1 SWAP7 SWAP4 DUP8 SWAP7 SWAP3 PUSH2 0x15CD JUMPI JUMPDEST POP POP PUSH1 0x0 NOT PUSH1 0x3 DUP4 SWAP1 SHL SHR NOT AND SWAP1 DUP5 SHL OR DUP6 SSTORE JUMPDEST ADD SWAP3 ADD SWAP3 ADD SWAP2 SWAP1 PUSH2 0x13EB JUMP JUMPDEST ADD MLOAD SWAP1 POP CODESIZE DUP1 PUSH2 0x15AD JUMP JUMPDEST DUP6 SWAP1 MSTORE PUSH1 0x20 DUP12 KECCAK256 SWAP2 SWAP1 DUP12 JUMPDEST PUSH1 0x1F NOT DUP6 AND DUP2 LT PUSH2 0x162D JUMPI POP DUP4 PUSH1 0x20 SWAP4 PUSH1 0x1 SWAP7 SWAP4 DUP8 SWAP7 SWAP4 DUP8 SWAP5 PUSH1 0x1F NOT DUP2 AND LT PUSH2 0x1614 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD DUP6 SSTORE PUSH2 0x15C1 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH2 0x1607 JUMP JUMPDEST SWAP2 SWAP3 PUSH1 0x20 PUSH1 0x1 DUP2 SWAP3 DUP7 DUP6 ADD MLOAD DUP2 SSTORE ADD SWAP5 ADD SWAP3 ADD PUSH2 0x15E3 JUMP JUMPDEST PUSH2 0x1670 SWAP1 DUP6 DUP13 MSTORE PUSH1 0x20 DUP13 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD SWAP2 PUSH1 0x20 DUP7 LT PUSH2 0x1676 JUMPI JUMPDEST PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP1 PUSH2 0x1D1F JUMP JUMPDEST CODESIZE PUSH2 0x158C JUMP JUMPDEST SWAP1 SWAP2 POP DUP2 SWAP1 PUSH2 0x1663 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP11 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 DUP11 REVERT JUMPDEST PUSH1 0x4 DUP6 ADD DUP8 MSTORE PUSH1 0x20 DUP8 KECCAK256 SWAP1 DUP4 DUP3 ADD JUMPDEST DUP2 DUP4 ADD DUP2 LT PUSH2 0x16B3 JUMPI POP POP PUSH2 0x13DA JUMP JUMPDEST DUP1 DUP10 PUSH2 0x16C1 PUSH1 0x1 SWAP4 SLOAD PUSH2 0x1BD1 JUMP JUMPDEST DUP1 PUSH2 0x16CF JUMPI JUMPDEST POP POP ADD PUSH2 0x16A3 JUMP JUMPDEST PUSH1 0x1F DUP2 GT DUP5 EQ PUSH2 0x16E4 JUMPI POP DUP2 SSTORE JUMPDEST DUP10 CODESIZE PUSH2 0x16C7 JUMP JUMPDEST DUP3 DUP3 MSTORE PUSH2 0x16FF PUSH1 0x1F PUSH1 0x20 DUP5 KECCAK256 SWAP3 ADD PUSH1 0x5 SHR DUP3 ADD DUP6 DUP4 ADD PUSH2 0x1D1F JUMP JUMPDEST DUP2 DUP4 SSTORE SSTORE PUSH2 0x16DD JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP7 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 DUP7 REVERT JUMPDEST ADD MLOAD SWAP1 POP CODESIZE DUP1 PUSH2 0x139F JUMP JUMPDEST DUP5 DUP10 MSTORE PUSH1 0x20 DUP10 KECCAK256 SWAP3 POP PUSH1 0x1F NOT DUP5 AND DUP10 JUMPDEST DUP2 DUP2 LT PUSH2 0x1773 JUMPI POP SWAP1 DUP5 PUSH1 0x1 SWAP6 SWAP5 SWAP4 SWAP3 LT PUSH2 0x175A JUMPI JUMPDEST POP POP POP DUP2 SHL ADD SWAP1 SSTORE PUSH2 0x13B4 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH2 0x174D JUMP JUMPDEST SWAP3 SWAP4 PUSH1 0x20 PUSH1 0x1 DUP2 SWAP3 DUP8 DUP7 ADD MLOAD DUP2 SSTORE ADD SWAP6 ADD SWAP4 ADD PUSH2 0x1737 JUMP JUMPDEST PUSH2 0x17B5 SWAP1 DUP6 DUP11 MSTORE PUSH1 0x20 DUP11 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD SWAP2 PUSH1 0x20 DUP7 LT PUSH2 0x1676 JUMPI PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP1 PUSH2 0x1D1F JUMP JUMPDEST CODESIZE PUSH2 0x1389 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x496E76616C696420706F6C696379 PUSH1 0x90 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x1824 JUMPI JUMPDEST DUP2 PUSH2 0x180C PUSH1 0x20 SWAP4 DUP4 PUSH2 0x1A6E JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x4D0 JUMPI MLOAD DUP1 ISZERO ISZERO DUP2 SUB PUSH2 0x4D0 JUMPI CODESIZE PUSH2 0x129E JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x17FF JUMP JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x185B JUMPI PUSH1 0x20 SWAP2 PUSH2 0x1850 DUP4 SWAP3 PUSH1 0x24 CALLDATASIZE SWAP2 DUP10 ADD ADD PUSH2 0x1AA6 JUMP JUMPDEST DUP2 MSTORE ADD SWAP2 ADD SWAP1 PUSH2 0x124E JUMP JUMPDEST DUP8 DUP1 REVERT JUMPDEST DUP6 DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x19E JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x19E JUMPI PUSH1 0x9 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x19E JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x19E JUMPI PUSH1 0x8 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x19E JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x19E JUMPI PUSH1 0x24 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x1E3 JUMPI CALLDATASIZE PUSH1 0x23 DUP3 ADD SLT ISZERO PUSH2 0x1E3 JUMPI DUP1 PUSH1 0x4 ADD CALLDATALOAD PUSH2 0x18F1 DUP2 PUSH2 0x1A8F JUMP JUMPDEST SWAP2 PUSH2 0x18FF PUSH1 0x40 MLOAD SWAP4 DUP5 PUSH2 0x1A6E JUMP JUMPDEST DUP2 DUP4 MSTORE PUSH1 0x20 SWAP2 PUSH1 0x24 DUP4 DUP6 ADD SWAP2 PUSH1 0x5 SHL DUP4 ADD ADD SWAP2 CALLDATASIZE DUP4 GT PUSH2 0x185F JUMPI PUSH1 0x24 ADD SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x1984 JUMPI DUP6 DUP6 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER DUP2 SWAP1 SUB PUSH2 0x1966 JUMPI POP PUSH2 0x970 SWAP1 PUSH1 0x4 CALLDATALOAD PUSH2 0x1F84 JUMP JUMPDEST PUSH1 0x44 SWAP1 PUSH1 0x40 MLOAD SWAP1 PUSH4 0x73E64FD PUSH1 0xE2 SHL DUP3 MSTORE CALLER PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD MSTORE REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 MSTORE SWAP1 DUP4 ADD SWAP1 DUP4 ADD PUSH2 0x191E JUMP JUMPDEST POP CALLVALUE PUSH2 0x19E JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x19E JUMPI PUSH1 0x7 SLOAD PUSH1 0x40 MLOAD PUSH1 0x50 SWAP2 SWAP1 SWAP2 SHR PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x19E JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x19E JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 DUP2 AND SWAP2 DUP3 SWAP1 SUB PUSH2 0x6E7 JUMPI PUSH2 0x19F7 SWAP1 PUSH1 0xA SLOAD AND CALLER EQ PUSH2 0x1CC1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL PUSH1 0x9 SLOAD AND OR PUSH1 0x9 SSTORE DUP1 RETURN JUMPDEST SWAP1 POP CALLVALUE PUSH2 0x1E3 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1E3 JUMPI PUSH1 0x20 SWAP1 PUSH1 0x6 SLOAD DUP2 MSTORE RETURN JUMPDEST PUSH2 0x1E0 DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x1A45 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x1A45 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x1A45 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x1A45 JUMPI PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x1F DUP3 ADD SLT ISZERO PUSH2 0x574 JUMPI DUP1 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x1A45 JUMPI PUSH1 0x40 MLOAD SWAP3 PUSH2 0x1ADA PUSH1 0x1F DUP5 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP6 PUSH2 0x1A6E JUMP JUMPDEST DUP3 DUP5 MSTORE PUSH1 0x20 DUP4 DUP4 ADD ADD GT PUSH2 0x574 JUMPI DUP2 PUSH1 0x0 SWAP3 PUSH1 0x20 DUP1 SWAP4 ADD DUP4 DUP7 ADD CALLDATACOPY DUP4 ADD ADD MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 LT ISZERO PUSH2 0x1B33 JUMPI PUSH1 0x3 PUSH1 0x0 MSTORE PUSH32 0xC2575A0E9E593C00F959F8C92F12DB2869C3395A3B0502D05E2516446F71F85B ADD SWAP1 PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 SWAP1 DUP3 MLOAD SWAP3 DUP4 DUP3 MSTORE PUSH1 0x0 JUMPDEST DUP5 DUP2 LT PUSH2 0x1B75 JUMPI POP POP DUP3 PUSH1 0x0 PUSH1 0x20 DUP1 SWAP5 SWAP6 DUP5 ADD ADD MSTORE PUSH1 0x1F DUP1 NOT SWAP2 ADD AND ADD ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP2 DUP4 ADD DUP2 ADD MLOAD DUP5 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0x1B54 JUMP JUMPDEST SWAP1 PUSH1 0x6 DUP3 LT ISZERO PUSH2 0x10E4 JUMPI MSTORE JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 PUSH1 0x40 DUP2 DUP4 ADD SWAP3 DUP3 DUP2 MSTORE DUP6 MLOAD DUP1 SWAP5 MSTORE ADD SWAP4 ADD SWAP2 PUSH1 0x0 JUMPDEST DUP3 DUP2 LT PUSH2 0x1BBD JUMPI POP POP POP POP SWAP1 JUMP JUMPDEST DUP4 MLOAD DUP6 MSTORE SWAP4 DUP2 ADD SWAP4 SWAP3 DUP2 ADD SWAP3 PUSH1 0x1 ADD PUSH2 0x1BAF JUMP JUMPDEST SWAP1 PUSH1 0x1 DUP3 DUP2 SHR SWAP3 AND DUP1 ISZERO PUSH2 0x1C01 JUMPI JUMPDEST PUSH1 0x20 DUP4 LT EQ PUSH2 0x1BEB JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0x1BE0 JUMP JUMPDEST SWAP1 PUSH1 0x40 MLOAD SWAP2 DUP3 PUSH1 0x0 DUP3 SLOAD SWAP3 PUSH2 0x1C1F DUP5 PUSH2 0x1BD1 JUMP JUMPDEST SWAP1 DUP2 DUP5 MSTORE PUSH1 0x1 SWAP5 DUP6 DUP2 AND SWAP1 DUP2 PUSH1 0x0 EQ PUSH2 0x1C8E JUMPI POP PUSH1 0x1 EQ PUSH2 0x1C4B JUMPI JUMPDEST POP POP PUSH2 0x1C49 SWAP3 POP SUB DUP4 PUSH2 0x1A6E JUMP JUMPDEST JUMP JUMPDEST SWAP1 SWAP4 SWAP2 POP PUSH1 0x0 MSTORE PUSH1 0x20 SWAP1 DUP2 PUSH1 0x0 KECCAK256 SWAP4 PUSH1 0x0 SWAP2 JUMPDEST DUP2 DUP4 LT PUSH2 0x1C76 JUMPI POP POP PUSH2 0x1C49 SWAP4 POP DUP3 ADD ADD CODESIZE DUP1 PUSH2 0x1C3B JUMP JUMPDEST DUP6 SLOAD DUP9 DUP5 ADD DUP6 ADD MSTORE SWAP5 DUP6 ADD SWAP5 DUP8 SWAP5 POP SWAP2 DUP4 ADD SWAP2 PUSH2 0x1C5E JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1C49 SWAP5 POP PUSH1 0x20 SWAP3 POP PUSH1 0xFF NOT AND DUP3 DUP5 ADD MSTORE ISZERO ISZERO PUSH1 0x5 SHL DUP3 ADD ADD CODESIZE DUP1 PUSH2 0x1C3B JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH1 0xFF DUP3 AND DUP3 SUB PUSH2 0x574 JUMPI JUMP JUMPDEST ISZERO PUSH2 0x1CC8 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xA PUSH1 0x24 DUP3 ADD MSTORE PUSH10 0x27B7363C9030B236B4B7 PUSH1 0xB1 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x0 NOT DUP2 EQ PUSH2 0x1D09 JUMPI PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 DUP2 LT PUSH2 0x1D2A JUMPI POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x1D1F JUMP JUMPDEST ISZERO PUSH2 0x1D3D JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x496E76616C696420737461747573 PUSH1 0x90 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x1D7A JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH13 0x27B7363C903932BB34B2BBB2B9 PUSH1 0x99 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x1DB6 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x2737BA1030B9B9B4B3B732B2103932BB34B2BBB2B9 PUSH1 0x59 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP1 PUSH1 0x0 SWAP1 DUP3 DUP3 MSTORE DUP2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 DUP4 KECCAK256 PUSH1 0x6 DUP2 ADD SWAP3 PUSH1 0xFF NOT SWAP3 PUSH1 0x3 DUP5 DUP7 SLOAD AND OR DUP6 SSTORE DUP1 PUSH1 0x8 DUP5 ADD SSTORE TIMESTAMP PUSH1 0x9 DUP5 ADD SSTORE DUP7 PUSH32 0x638D892B8630B775FEA5D7A52B209E8BFA1D90C32B57CD37208AC84D4BCD6DCB PUSH1 0x20 DUP5 MLOAD DUP5 DUP2 MSTORE LOG2 PUSH1 0x8 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP1 PUSH2 0x1E6B JUMPI JUMPDEST POP POP POP POP POP POP POP POP POP JUMP JUMPDEST DUP2 PUSH1 0x2 DUP7 ADD SLOAD AND DUP2 EXTCODESIZE ISZERO PUSH2 0x1F6C JUMPI DUP9 SWAP1 PUSH1 0x64 DUP12 DUP4 DUP9 MLOAD SWAP6 DUP7 SWAP5 DUP6 SWAP4 PUSH4 0x652619A3 PUSH1 0xE1 SHL DUP6 MSTORE PUSH1 0x4 DUP6 ADD MSTORE PUSH1 0x24 DUP5 ADD MSTORE DUP9 PUSH1 0x44 DUP5 ADD MSTORE GAS CALL DUP1 ISZERO PUSH2 0x1F62 JUMPI PUSH2 0x1F4E JUMPI JUMPDEST POP PUSH1 0x1 SWAP1 PUSH1 0x7 SLOAD PUSH1 0x50 SHR AND SWAP4 ADD SLOAD DUP4 EXTCODESIZE ISZERO PUSH2 0x1F4A JUMPI SWAP1 PUSH1 0x44 DUP8 SWAP3 DUP4 DUP6 MLOAD SWAP7 DUP8 SWAP5 DUP6 SWAP4 PUSH4 0x1F0224AD PUSH1 0xE3 SHL DUP6 MSTORE PUSH1 0x4 DUP6 ADD MSTORE PUSH1 0x24 DUP5 ADD MSTORE GAS CALL SWAP1 DUP2 ISZERO PUSH2 0x1F41 JUMPI POP PUSH2 0x1F2D JUMPI JUMPDEST POP DUP2 SLOAD AND PUSH1 0x5 OR SWAP1 SSTORE PUSH32 0x633FF17603F543FB14610394A700602D41C32A3EDED36897C06EC7789E443650 SWAP1 DUP1 LOG2 CODESIZE DUP1 DUP1 DUP1 DUP1 DUP1 DUP1 DUP1 DUP1 PUSH2 0x1E60 JUMP JUMPDEST PUSH2 0x1F37 DUP5 SWAP2 PUSH2 0x1A5B JUMP JUMPDEST PUSH2 0x6E7 JUMPI CODESIZE PUSH2 0x1EF2 JUMP JUMPDEST MLOAD RETURNDATASIZE DUP7 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP7 DUP1 REVERT JUMPDEST SWAP7 PUSH2 0x1F5B PUSH1 0x1 SWAP3 SWAP9 PUSH2 0x1A5B JUMP JUMPDEST SWAP7 SWAP1 PUSH2 0x1EAD JUMP JUMPDEST DUP5 MLOAD RETURNDATASIZE DUP11 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP9 DUP1 REVERT JUMPDEST DUP1 MLOAD DUP3 LT ISZERO PUSH2 0x1B33 JUMPI PUSH1 0x20 SWAP2 PUSH1 0x5 SHL ADD ADD SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP3 KECCAK256 SLOAD SWAP1 DUP2 ISZERO PUSH2 0x20C0 JUMPI PUSH1 0x3 SLOAD ISZERO PUSH2 0x2057 JUMPI DUP1 MLOAD ISZERO PUSH2 0x2043 JUMPI PUSH1 0x20 ADD MLOAD PUSH1 0x3 SLOAD SWAP1 DUP2 ISZERO PUSH2 0x202F JUMPI PUSH32 0xBC1F3DAF62009283F8F2078BC45883E8DBB3F415BC325829CE38ECE15B5F8990 SWAP2 PUSH2 0x1FE4 SWAP2 MOD PUSH2 0x1AFC JUMP JUMPDEST SWAP1 SLOAD DUP4 DUP6 MSTORE PUSH1 0x20 DUP6 SWAP1 MSTORE PUSH1 0x40 DUP6 KECCAK256 PUSH1 0xA ADD DUP1 SLOAD PUSH2 0x100 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT AND PUSH1 0x3 SWAP4 SWAP1 SWAP4 SHL SWAP2 SWAP1 SWAP2 SHR PUSH1 0x8 DUP2 SWAP1 SHL PUSH2 0x100 PUSH1 0x1 PUSH1 0xA8 SHL SUB AND SWAP3 SWAP1 SWAP3 OR SWAP1 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP3 DUP1 LOG3 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP5 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 DUP5 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP4 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 DUP4 REVERT JUMPDEST POP PUSH1 0xA DUP1 SLOAD DUP3 DUP5 MSTORE PUSH1 0x20 DUP5 SWAP1 MSTORE PUSH1 0x40 DUP5 KECCAK256 SWAP1 SWAP2 ADD DUP1 SLOAD PUSH2 0x100 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT AND PUSH1 0x8 SWAP3 SWAP1 SWAP3 SHL PUSH2 0x100 PUSH1 0x1 PUSH1 0xA8 SHL SUB AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH32 0xBC1F3DAF62009283F8F2078BC45883E8DBB3F415BC325829CE38ECE15B5F8990 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0xA SLOAD AND SWAP3 DUP1 LOG3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x10DB185A5B481B9BDD08199BDD5B99 PUSH1 0x8A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP1 PUSH2 0x2101 DUP3 PUSH2 0x1A8F JUMP JUMPDEST PUSH2 0x210E PUSH1 0x40 MLOAD SWAP2 DUP3 PUSH2 0x1A6E JUMP JUMPDEST DUP3 DUP2 MSTORE DUP1 SWAP3 PUSH2 0x211F PUSH1 0x1F NOT SWAP2 PUSH2 0x1A8F JUMP JUMPDEST ADD SWAP1 PUSH1 0x20 CALLDATASIZE SWAP2 ADD CALLDATACOPY JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x25 COINBASE PUSH21 0xC0DAF1A0B0624F339D56A186B9BDF69240C2DA6083 ADDRESS DUP3 0xD7 PUSH7 0x8B1F453164736F PUSH13 0x63430008130033000000000000 ","sourceMap":"388:14037:3:-:0;;;;-1:-1:-1;;;;;388:14037:3;;;;;;;;;;-1:-1:-1;;388:14037:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;5599:32:0;;;388:14037:3;1487:1;388:14037;1651:6;388:14037;;1982:2;388:14037;;3324:59;388:14037;;3393:21;388:14037;;;;-1:-1:-1;;;;;;388:14037:3;;;-1:-1:-1;;;;;388:14037:3;;;;;;;;;;;;-1:-1:-1;;;;;;;388:14037:3;;;;;;;;-1:-1:-1;;;;;;388:14037:3;;;;;;;;-1:-1:-1;;;;;;;388:14037:3;;;;;;;;-1:-1:-1;;;;;;388:14037:3;3519:10;388:14037;;;-1:-1:-1;;;388:14037:3;;;;3539:21;388:14037;;-1:-1:-1;;;;;;388:14037:3;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;388:14037:3;;;;;;-1:-1:-1;388:14037:3;;;;;-1:-1:-1;388:14037:3;;;;-1:-1:-1;;;;;388:14037:3;;;;;;:::o"},"deployedBytecode":{"functionDebugData":{"abi_decode_string":{"entryPoint":6822,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_uint8":{"entryPoint":7345,"id":null,"parameterSlots":0,"returnSlots":1},"abi_encode_array_uint256_dyn":{"entryPoint":7062,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_enum_ClaimStatus":{"entryPoint":7049,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_string":{"entryPoint":6985,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_and_zero_memory_array_array_uint256_dyn":{"entryPoint":8439,"id":null,"parameterSlots":1,"returnSlots":1},"array_allocation_size_array_uint256_dyn":{"entryPoint":6799,"id":null,"parameterSlots":1,"returnSlots":1},"clear_storage_range_bytes1":{"entryPoint":7455,"id":null,"parameterSlots":2,"returnSlots":0},"copy_array_from_storage_to_memory_string":{"entryPoint":7179,"id":null,"parameterSlots":1,"returnSlots":1},"extract_byte_array_length":{"entryPoint":7121,"id":null,"parameterSlots":1,"returnSlots":1},"finalize_allocation":{"entryPoint":6766,"id":null,"parameterSlots":2,"returnSlots":0},"finalize_allocation_29645":{"entryPoint":6697,"id":null,"parameterSlots":1,"returnSlots":0},"finalize_allocation_29649":{"entryPoint":6747,"id":null,"parameterSlots":1,"returnSlots":0},"fun_approveClaim":{"entryPoint":7667,"id":923,"parameterSlots":2,"returnSlots":0},"fun_fulfillRandomWords":{"entryPoint":8068,"id":1033,"parameterSlots":2,"returnSlots":0},"increment_uint256":{"entryPoint":7418,"id":null,"parameterSlots":1,"returnSlots":1},"memory_array_index_access_uint256_dyn":{"entryPoint":8048,"id":null,"parameterSlots":2,"returnSlots":1},"require_helper_stringliteral_0e8c":{"entryPoint":7539,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_519e":{"entryPoint":7361,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_5daf":{"entryPoint":7478,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_cf29":{"entryPoint":7599,"id":null,"parameterSlots":1,"returnSlots":0},"storage_array_index_access_address_dyn":{"entryPoint":6908,"id":null,"parameterSlots":1,"returnSlots":2},"update_storage_value_address_to_address":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":0},"update_storage_value_offset_2t_uint8_to_uint8":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0},"update_storage_value_offsett_address_to_address":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0},"update_storage_value_offsett_uint8_to_t_uint8":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0},"update_storage_value_offsett_uint8_to_uint8":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0}},"generatedSources":[],"immutableReferences":{"10":[{"length":32,"start":6441}]},"linkReferences":{},"object":"608080604052600436101561001357600080fd5b600090813560e01c908163041d443e14611a0d575080631aa632b3146119c05780631c4dd7d0146119935780631fe543e3146118b55780633083a8e31461188c57806331b221cd14611863578063324bc2a9146111c75780633b7ed734146111a357806354edb3a01461117f578063598bc4861461115b5780635aad00d6146111175780635aef244714610e145780635eb0ec3914610d1d5780636ae2a1c914610cff5780637181896f14610cb257806373a82b5f14610be05780637bcb4a6414610b085780637ccfd7fc14610ae15780638c50fa1f146109875780639b052153146108f3578063a0021cf1146108d5578063a3e56fa8146108ac578063a888c2cd146107bf578063b11b1d7614610795578063bfce86b3146106eb578063c9442dac14610579578063e277c88114610235578063e456c58a14610211578063ed647d21146101e7578063f7cbb1b2146101a15763f851a4401461017657600080fd5b3461019e578060031936011261019e57600a546040516001600160a01b039091168152602090f35b80fd5b503461019e57602036600319011261019e576004356001600160a01b038116908190036101e35760408260ff9260209452600284522054166040519015158152f35b5080fd5b503461019e578060031936011261019e5760206001600160401b0360055460a01c16604051908152f35b503461019e578060031936011261019e57602060ff600a5460a81c16604051908152f35b503461019e5760a036600319011261019e5760043590610253611cb1565b916044359260ff84168403610574576064359360ff85169081860361057457600954608435936001600160a01b039390918416330361053e5785875260209387855260ff600660408a20015416600681101561052a578798996102b96103189215611d36565b888b528a87526102fe60408c20966102e66006890197889061ff0082549160081b169061ff001916179055565b865462ff0000191660109190911b62ff000016178655565b845463ff000000191660189190911b63ff00000016178455565b85600785015560ff1991600183855416178455600a5460ff8160a01c16821080610521575b15610379575050505050505061035291611df3565b7f1d3aa49336afc0101ae504a343f9ab660f79125900c57654be752bb099b2da7d8280a280f35b60ff919293949596975060a81c16106000146103fd5750918160046060947f43cc3d080e025c67c26d62b18bd442511dc9c76c8aa3f48cc0e8f456173e61f1969454161790556009429101556018604051918083528201527f48696768206672617564207269736b20646574656374656400000000000000006040820152a2610352565b945091600a915001600182825416179055600354156104e65783855284825260026006604087200191825416179055806005549260a4600654876007549360405197889586946305d3b1d360e41b865260048601526001600160401b038260a01c16602486015261ffff81891c16604486015263ffffffff90818116606487015260301c166084850152165af180156104db5784906104a9575b60019250845252806040832055610352565b508082813d83116104d4575b6104bf8183611a6e565b810103126104d05760019151610497565b8380fd5b503d6104b5565b6040513d86823e3d90fd5b60405162461bcd60e51b81526004810183905260136024820152724e6f206163746976652072657669657765727360681b6044820152606490fd5b5087151561033d565b634e487b7160e01b89526021600452602489fd5b60405162461bcd60e51b815260206004820152600e60248201526d4f6e6c79204149206f7261636c6560901b6044820152606490fd5b600080fd5b503461019e57602036600319011261019e576004356001600160a01b03818116918290036106e7576105b081600a54163314611cc1565b818352600260205260ff604084205416156106b157818352600260205260408320805460ff19169055825b60038054808310156106a95784846105f285611afc565b905490851b1c161461060e57505061060990611cfa565b6105db565b929350916000199190828101908111610695579061063f8561063261065e94611afc565b905490871b1c1691611afc565b90919082549060031b9160018060a01b03809116831b921b1916179055565b8154801561068157019161067183611afc565b9091825491841b1b191690555580f35b634e487b7160e01b85526031600452602485fd5b634e487b7160e01b86526011600452602486fd5b505050505080f35b60405162461bcd60e51b815260206004820152600e60248201526d2737ba1030903932bb34b2bbb2b960911b6044820152606490fd5b8280fd5b503461019e57604036600319011261019e5760043560ff811680820361057457610713611cb1565b600a549161072b336001600160a01b03851614611cc1565b60ff8216111561075b5760ff60a81b9060a81b169160ff60a01b9060a01b169061ffff60a01b19161717600a5580f35b60405162461bcd60e51b8152602060048201526012602482015271496e76616c6964207468726573686f6c647360701b6044820152606490fd5b503461019e57602036600319011261019e5760406020916004358152600183522054604051908152f35b503461019e57602036600319011261019e5760409060043581528060205220805460018201549160018060a01b038060028301541661080060038401611c0b565b92600581015493600682015460ff60078401549161084b600886015494600a6009880154970154976040519c8d9c8d5260208d015260408c01526101c08060608d01528b0190611b49565b9760808a015261086060a08a01838316611b89565b818160081c1660c08a0152818160101c1660e08a015260181c1661010088015261012087015261014086015261016085015260ff8116151561018085015260081c166101a08301520390f35b503461019e578060031936011261019e576005546040516001600160a01b039091168152602090f35b503461019e578060031936011261019e576020600454604051908152f35b503461019e57604036600319011261019e57600435338252600260205261092060ff604084205416611d73565b808252816020526040822060ff600682015416600681101561097357610970929161095060026109679314611d36565b600a015460081c6001600160a01b03163314611daf565b60243590611df3565b80f35b634e487b7160e01b84526021600452602484fd5b503461019e578060031936011261019e573381526002602081815260ff6109b381604086205416611d73565b600454918460015b848110610a6257506109cc906120f7565b93859260015b8581106109eb57604051806109e78982611b96565b0390f35b8088528784526006828160408b200154169081101561052a57831480610a40575b610a1f575b610a1a90611cfa565b6109d2565b93610a388186610a32610a1a948b611f70565b52611cfa565b949050610a11565b5080885287845260408820600a015460081c6001600160a01b03163314610a0c565b8087528683526006848160408a2001541690811015610acd57861480610aab575b610a96575b610a9190611cfa565b6109bb565b90610aa3610a9191611cfa565b919050610a88565b5080875286835260408720600a015460081c6001600160a01b03163314610a83565b634e487b7160e01b88526021600452602488fd5b503461019e578060031936011261019e57602063ffffffff60075460301c16604051908152f35b503461019e576020806003193601126101e3576001600160a01b0390600435828116908190036104d057600454928460015b858110610ba65750610b4b906120f7565b94809360015b868110610b6657604051806109e78a82611b96565b808352828252848460026040862001541614610b8b575b610b8690611cfa565b610b51565b94610b9e8187610a32610b86948c611f70565b959050610b7d565b8087528685528383600260408a2001541614610bcb575b610bc690611cfa565b610b3a565b90610bd8610bc691611cfa565b919050610bbd565b503461019e57602036600319011261019e576004356001600160a01b03808216908183036104d057610c1790600a54163314611cc1565b808352600260205260ff604084205416610c78578252600260205260408220805460ff19166001179055600354600160401b811015610c64579061063f8260016109709401600355611afc565b634e487b7160e01b83526041600452602483fd5b60405162461bcd60e51b815260206004820152601260248201527120b63932b0b23c9030903932bb34b2bbb2b960711b6044820152606490fd5b503461019e57602036600319011261019e576004356001600160a01b03818116918290036106e757610ce990600a54163314611cc1565b6001600160601b0360a01b600854161760085580f35b503461019e578060031936011261019e576020600354604051908152f35b503461019e57604036600319011261019e576004356024356001600160401b0381116106e757610d51903690600401611aa6565b3383526002602052610d6960ff604085205416611d73565b818352826020526040832060068101805460ff81166006811015610e0057916004610dfa9492610dbd60027f43cc3d080e025c67c26d62b18bd442511dc9c76c8aa3f48cc0e8f456173e61f1989614611d36565b600a840154610dd99060081c6001600160a01b03163314611daf565b60ff1916179055600942910155604051918291602083526020830190611b49565b0390a280f35b634e487b7160e01b87526021600452602487fd5b503461019e57602036600319011261019e57806101c0604051610e3681611a29565b828152826020820152826040820152606080820152606060808201528260a08201528260c08201528260e08201528261010082015282610120820152826101408201528261016082015282610180820152826101a08201520152600435815280602052604081209060405191610eab83611a29565b805483526001810154602084015260028101546001600160a01b03166040840152610ed860038201611c0b565b60608401526004810154610eeb81611a8f565b90610ef96040519283611a6e565b808252602082016004840185526020852085915b8383106110fa57505050506080840152600581015460a0840152600681015490600660ff831610156110e45760ff8281600a941660c0870152818160081c1660e0870152818160101c1661010087015260181c16610120850152600781015461014085015260088101546101608501526009810154610180850152015460ff811615156101a084015260018060a01b039060081c166101c08301526040519060208252825160208301526020830151604083015260018060a01b036040840151166060830152610fee60608401516101e06080850152610200840190611b49565b90608084015191601f198482030160a0850152825190818152602081016020808460051b840101950193915b8383106110b7578680878a60a081015160c084015261104160c082015160e0850190611b89565b60ff60e08201511661010084015260ff6101008201511661012084015260ff610120820151166101408401526101408101516101608401526101608101516101808401526101808101516101a08401526101a081015115156101c08401526101c060018060a01b03910151166101e08301520390f35b90919293946020806110d5600193601f198682030187528951611b49565b9701930193019193929061101a565b634e487b7160e01b600052602160045260246000fd5b60016020819261110985611c0b565b815201920192019190610f0d565b503461019e57602036600319011261019e576004359060035482101561019e57602061114283611afc565b905460405160039290921b1c6001600160a01b03168152f35b503461019e578060031936011261019e57602060075461ffff60405191831c168152f35b503461019e578060031936011261019e57602060ff600a5460a01c16604051908152f35b503461019e578060031936011261019e57602063ffffffff60075416604051908152f35b503461019e57606036600319011261019e576024356001600160401b0381116101e3576111f8903690600401611aa6565b604435906001600160401b0382116106e757366023830112156106e75781600401359161122483611a8f565b926112326040519485611a6e565b80845260051b81016024016020840136821161185f5760248301905b82821061182c575050600754604051634a1f98d360e11b815260048035908201523360248201529250602091508290604490829060501c6001600160a01b03165afa9081156104db5784916117f1575b50156117bb57600454916112b183611cfa565b600455604051916112c183611a29565b8383526004356020840152336040840152606083015260808201524260a08201528260c08201528260e08201528261010082015282610120820152826101408201528261016082015282610180820152826101a0820152826101c082015281835282602052604083209080518255602081015160018301556002820160018060a01b036040830151166001600160601b0360a01b825416179055606081015180516001600160401b038111611708578060038501926113808454611bd1565b601f811161178b575b50602090601f831160011461172757889261171c575b50508160011b916000199060031b1c19161790555b6080810151805190600160401b8211611708576004840154826004860155808310611694575b506020016004840186526020862086915b838310611566575050505060a08101516005830155600682019160c082015192600684101561155257805460e084015161010085015161012086015163ff00000060189190911b1663ffffffff1990931660ff97881617600892831b61ff00161762ff000060109290921b91909116179190911790915561014083015160078301556101608301518282015561018083015160098301556101a0830151600a90920180546101c0909401516001600160a81b03199094169215159094169190911791901b610100600160a81b0316179055600754829060501c6001600160a01b0316803b156101e3578190602460405180968193630234d8a760e61b835260043560048401525af192831561154557602093611536575b5090604051913390827f9fe11e531030a058803617055e27f9f4768236e4322e13b9c4c09f4338e23a686004359280a48152f35b61153f90611a5b565b38611502565b50604051903d90823e3d90fd5b634e487b7160e01b86526021600452602486fd5b80518051906001600160401b038211611680576115838454611bd1565b601f8111611645575b506020908a601f84116001146115d8579280602093600196938796926115cd575b5050600019600383901b1c191690841b1785555b019201920191906113eb565b0151905038806115ad565b85905260208b2091908b5b601f198516811061162d575083602093600196938796938794601f19811610611614575b505050811b0185556115c1565b015160001960f88460031b161c19169055388080611607565b919260206001819286850151815501940192016115e3565b61167090858c5260208c20601f850160051c81019160208610611676575b601f0160051c0190611d1f565b3861158c565b9091508190611663565b634e487b7160e01b8a52604160045260248afd5b60048501875260208720908382015b81830181106116b35750506113da565b80896116c160019354611bd1565b806116cf575b5050016116a3565b601f811184146116e4575081555b89386116c7565b8282526116ff601f60208420920160051c8201858301611d1f565b818355556116dd565b634e487b7160e01b86526041600452602486fd5b01519050388061139f565b848952602089209250601f198416895b818110611773575090846001959493921061175a575b505050811b0190556113b4565b015160001960f88460031b161c1916905538808061174d565b92936020600181928786015181550195019301611737565b6117b590858a5260208a20601f850160051c8101916020861061167657601f0160051c0190611d1f565b38611389565b60405162461bcd60e51b815260206004820152600e60248201526d496e76616c696420706f6c69637960901b6044820152606490fd5b90506020813d602011611824575b8161180c60209383611a6e565b810103126104d0575180151581036104d0573861129e565b3d91506117ff565b81356001600160401b03811161185b57602091611850839260243691890101611aa6565b81520191019061124e565b8780fd5b8580fd5b503461019e578060031936011261019e576009546040516001600160a01b039091168152602090f35b503461019e578060031936011261019e576008546040516001600160a01b039091168152602090f35b503461019e57604036600319011261019e576024356001600160401b0381116101e357366023820112156101e35780600401356118f181611a8f565b916118ff6040519384611a6e565b81835260209160248385019160051b8301019136831161185f57602401905b8282106119845785857f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031633819003611966575061097090600435611f84565b6044906040519063073e64fd60e21b82523360048301526024820152fd5b8135815290830190830161191e565b503461019e578060031936011261019e5760075460405160509190911c6001600160a01b03168152602090f35b503461019e57602036600319011261019e576004356001600160a01b03818116918290036106e7576119f790600a54163314611cc1565b6001600160601b0360a01b600954161760095580f35b9050346101e357816003193601126101e3576020906006548152f35b6101e081019081106001600160401b03821117611a4557604052565b634e487b7160e01b600052604160045260246000fd5b6001600160401b038111611a4557604052565b90601f801991011681019081106001600160401b03821117611a4557604052565b6001600160401b038111611a455760051b60200190565b81601f82011215610574578035906001600160401b038211611a455760405192611ada601f8401601f191660200185611a6e565b8284526020838301011161057457816000926020809301838601378301015290565b600354811015611b335760036000527fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b0190600090565b634e487b7160e01b600052603260045260246000fd5b919082519283825260005b848110611b75575050826000602080949584010152601f8019910116010190565b602081830181015184830182015201611b54565b9060068210156110e45752565b6020908160408183019282815285518094520193019160005b828110611bbd575050505090565b835185529381019392810192600101611baf565b90600182811c92168015611c01575b6020831014611beb57565b634e487b7160e01b600052602260045260246000fd5b91607f1691611be0565b9060405191826000825492611c1f84611bd1565b908184526001948581169081600014611c8e5750600114611c4b575b5050611c4992500383611a6e565b565b9093915060005260209081600020936000915b818310611c76575050611c4993508201013880611c3b565b85548884018501529485019487945091830191611c5e565b915050611c4994506020925060ff191682840152151560051b8201013880611c3b565b6024359060ff8216820361057457565b15611cc857565b60405162461bcd60e51b815260206004820152600a60248201526927b7363c9030b236b4b760b11b6044820152606490fd5b6000198114611d095760010190565b634e487b7160e01b600052601160045260246000fd5b818110611d2a575050565b60008155600101611d1f565b15611d3d57565b60405162461bcd60e51b815260206004820152600e60248201526d496e76616c69642073746174757360901b6044820152606490fd5b15611d7a57565b60405162461bcd60e51b815260206004820152600d60248201526c27b7363c903932bb34b2bbb2b960991b6044820152606490fd5b15611db657565b60405162461bcd60e51b81526020600482015260156024820152742737ba1030b9b9b4b3b732b2103932bb34b2bbb2b960591b6044820152606490fd5b9060009082825281602052604090818320600681019260ff1992600384865416178555806008840155426009840155867f638d892b8630b775fea5d7a52b209e8bfa1d90c32b57cd37208ac84d4bcd6dcb60208451848152a26008546001600160a01b0390811680611e6b575b505050505050505050565b81600286015416813b15611f6c57889060648b838851958694859363652619a360e11b8552600485015260248401528860448401525af18015611f6257611f4e575b5060019060075460501c16930154833b15611f4a5790604487928385519687948593631f0224ad60e31b8552600485015260248401525af1908115611f415750611f2d575b5081541660051790557f633ff17603f543fb14610394a700602d41c32a3eded36897c06ec7789e4436509080a2388080808080808080611e60565b611f378491611a5b565b6106e75738611ef2565b513d86823e3d90fd5b8680fd5b96611f5b60019298611a5b565b9690611ead565b84513d8a823e3d90fd5b8880fd5b8051821015611b335760209160051b010190565b906000918252600160205260408220549081156120c0576003541561205757805115612043576020015160035490811561202f577fbc1f3daf62009283f8f2078bc45883e8dbb3f415bc325829ce38ece15b5f899091611fe49106611afc565b9054838552602085905260408520600a018054610100600160a81b03191660039390931b9190911c600881901b610100600160a81b03169290921790556001600160a01b03169280a3565b634e487b7160e01b84526012600452602484fd5b634e487b7160e01b83526032600452602483fd5b50600a80548284526020849052604084209091018054610100600160a81b03191660089290921b610100600160a81b03169190911790557fbc1f3daf62009283f8f2078bc45883e8dbb3f415bc325829ce38ece15b5f89906001600160a01b03600a54169280a3565b60405162461bcd60e51b815260206004820152600f60248201526e10db185a5b481b9bdd08199bdd5b99608a1b6044820152606490fd5b9061210182611a8f565b61210e6040519182611a6e565b828152809261211f601f1991611a8f565b019060203691013756fea2646970667358221220254174c0daf1a0b0624f339d56a186b9bdf69240c2da60833082d7668b1f453164736f6c63430008130033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x13 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP1 DUP2 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0x41D443E EQ PUSH2 0x1A0D JUMPI POP DUP1 PUSH4 0x1AA632B3 EQ PUSH2 0x19C0 JUMPI DUP1 PUSH4 0x1C4DD7D0 EQ PUSH2 0x1993 JUMPI DUP1 PUSH4 0x1FE543E3 EQ PUSH2 0x18B5 JUMPI DUP1 PUSH4 0x3083A8E3 EQ PUSH2 0x188C JUMPI DUP1 PUSH4 0x31B221CD EQ PUSH2 0x1863 JUMPI DUP1 PUSH4 0x324BC2A9 EQ PUSH2 0x11C7 JUMPI DUP1 PUSH4 0x3B7ED734 EQ PUSH2 0x11A3 JUMPI DUP1 PUSH4 0x54EDB3A0 EQ PUSH2 0x117F JUMPI DUP1 PUSH4 0x598BC486 EQ PUSH2 0x115B JUMPI DUP1 PUSH4 0x5AAD00D6 EQ PUSH2 0x1117 JUMPI DUP1 PUSH4 0x5AEF2447 EQ PUSH2 0xE14 JUMPI DUP1 PUSH4 0x5EB0EC39 EQ PUSH2 0xD1D JUMPI DUP1 PUSH4 0x6AE2A1C9 EQ PUSH2 0xCFF JUMPI DUP1 PUSH4 0x7181896F EQ PUSH2 0xCB2 JUMPI DUP1 PUSH4 0x73A82B5F EQ PUSH2 0xBE0 JUMPI DUP1 PUSH4 0x7BCB4A64 EQ PUSH2 0xB08 JUMPI DUP1 PUSH4 0x7CCFD7FC EQ PUSH2 0xAE1 JUMPI DUP1 PUSH4 0x8C50FA1F EQ PUSH2 0x987 JUMPI DUP1 PUSH4 0x9B052153 EQ PUSH2 0x8F3 JUMPI DUP1 PUSH4 0xA0021CF1 EQ PUSH2 0x8D5 JUMPI DUP1 PUSH4 0xA3E56FA8 EQ PUSH2 0x8AC JUMPI DUP1 PUSH4 0xA888C2CD EQ PUSH2 0x7BF JUMPI DUP1 PUSH4 0xB11B1D76 EQ PUSH2 0x795 JUMPI DUP1 PUSH4 0xBFCE86B3 EQ PUSH2 0x6EB JUMPI DUP1 PUSH4 0xC9442DAC EQ PUSH2 0x579 JUMPI DUP1 PUSH4 0xE277C881 EQ PUSH2 0x235 JUMPI DUP1 PUSH4 0xE456C58A EQ PUSH2 0x211 JUMPI DUP1 PUSH4 0xED647D21 EQ PUSH2 0x1E7 JUMPI DUP1 PUSH4 0xF7CBB1B2 EQ PUSH2 0x1A1 JUMPI PUSH4 0xF851A440 EQ PUSH2 0x176 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x19E JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x19E JUMPI PUSH1 0xA SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x19E JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x19E JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP1 DUP2 SWAP1 SUB PUSH2 0x1E3 JUMPI PUSH1 0x40 DUP3 PUSH1 0xFF SWAP3 PUSH1 0x20 SWAP5 MSTORE PUSH1 0x2 DUP5 MSTORE KECCAK256 SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST POP DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x19E JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x19E JUMPI PUSH1 0x20 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB PUSH1 0x5 SLOAD PUSH1 0xA0 SHR AND PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x19E JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x19E JUMPI PUSH1 0x20 PUSH1 0xFF PUSH1 0xA SLOAD PUSH1 0xA8 SHR AND PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x19E JUMPI PUSH1 0xA0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x19E JUMPI PUSH1 0x4 CALLDATALOAD SWAP1 PUSH2 0x253 PUSH2 0x1CB1 JUMP JUMPDEST SWAP2 PUSH1 0x44 CALLDATALOAD SWAP3 PUSH1 0xFF DUP5 AND DUP5 SUB PUSH2 0x574 JUMPI PUSH1 0x64 CALLDATALOAD SWAP4 PUSH1 0xFF DUP6 AND SWAP1 DUP2 DUP7 SUB PUSH2 0x574 JUMPI PUSH1 0x9 SLOAD PUSH1 0x84 CALLDATALOAD SWAP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 SWAP1 SWAP2 DUP5 AND CALLER SUB PUSH2 0x53E JUMPI DUP6 DUP8 MSTORE PUSH1 0x20 SWAP4 DUP8 DUP6 MSTORE PUSH1 0xFF PUSH1 0x6 PUSH1 0x40 DUP11 KECCAK256 ADD SLOAD AND PUSH1 0x6 DUP2 LT ISZERO PUSH2 0x52A JUMPI DUP8 SWAP9 SWAP10 PUSH2 0x2B9 PUSH2 0x318 SWAP3 ISZERO PUSH2 0x1D36 JUMP JUMPDEST DUP9 DUP12 MSTORE DUP11 DUP8 MSTORE PUSH2 0x2FE PUSH1 0x40 DUP13 KECCAK256 SWAP7 PUSH2 0x2E6 PUSH1 0x6 DUP10 ADD SWAP8 DUP9 SWAP1 PUSH2 0xFF00 DUP3 SLOAD SWAP2 PUSH1 0x8 SHL AND SWAP1 PUSH2 0xFF00 NOT AND OR SWAP1 SSTORE JUMP JUMPDEST DUP7 SLOAD PUSH3 0xFF0000 NOT AND PUSH1 0x10 SWAP2 SWAP1 SWAP2 SHL PUSH3 0xFF0000 AND OR DUP7 SSTORE JUMP JUMPDEST DUP5 SLOAD PUSH4 0xFF000000 NOT AND PUSH1 0x18 SWAP2 SWAP1 SWAP2 SHL PUSH4 0xFF000000 AND OR DUP5 SSTORE JUMP JUMPDEST DUP6 PUSH1 0x7 DUP6 ADD SSTORE PUSH1 0xFF NOT SWAP2 PUSH1 0x1 DUP4 DUP6 SLOAD AND OR DUP5 SSTORE PUSH1 0xA SLOAD PUSH1 0xFF DUP2 PUSH1 0xA0 SHR AND DUP3 LT DUP1 PUSH2 0x521 JUMPI JUMPDEST ISZERO PUSH2 0x379 JUMPI POP POP POP POP POP POP POP PUSH2 0x352 SWAP2 PUSH2 0x1DF3 JUMP JUMPDEST PUSH32 0x1D3AA49336AFC0101AE504A343F9AB660F79125900C57654BE752BB099B2DA7D DUP3 DUP1 LOG2 DUP1 RETURN JUMPDEST PUSH1 0xFF SWAP2 SWAP3 SWAP4 SWAP5 SWAP6 SWAP7 SWAP8 POP PUSH1 0xA8 SHR AND LT PUSH1 0x0 EQ PUSH2 0x3FD JUMPI POP SWAP2 DUP2 PUSH1 0x4 PUSH1 0x60 SWAP5 PUSH32 0x43CC3D080E025C67C26D62B18BD442511DC9C76C8AA3F48CC0E8F456173E61F1 SWAP7 SWAP5 SLOAD AND OR SWAP1 SSTORE PUSH1 0x9 TIMESTAMP SWAP2 ADD SSTORE PUSH1 0x18 PUSH1 0x40 MLOAD SWAP2 DUP1 DUP4 MSTORE DUP3 ADD MSTORE PUSH32 0x48696768206672617564207269736B2064657465637465640000000000000000 PUSH1 0x40 DUP3 ADD MSTORE LOG2 PUSH2 0x352 JUMP JUMPDEST SWAP5 POP SWAP2 PUSH1 0xA SWAP2 POP ADD PUSH1 0x1 DUP3 DUP3 SLOAD AND OR SWAP1 SSTORE PUSH1 0x3 SLOAD ISZERO PUSH2 0x4E6 JUMPI DUP4 DUP6 MSTORE DUP5 DUP3 MSTORE PUSH1 0x2 PUSH1 0x6 PUSH1 0x40 DUP8 KECCAK256 ADD SWAP2 DUP3 SLOAD AND OR SWAP1 SSTORE DUP1 PUSH1 0x5 SLOAD SWAP3 PUSH1 0xA4 PUSH1 0x6 SLOAD DUP8 PUSH1 0x7 SLOAD SWAP4 PUSH1 0x40 MLOAD SWAP8 DUP9 SWAP6 DUP7 SWAP5 PUSH4 0x5D3B1D3 PUSH1 0xE4 SHL DUP7 MSTORE PUSH1 0x4 DUP7 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 PUSH1 0xA0 SHR AND PUSH1 0x24 DUP7 ADD MSTORE PUSH2 0xFFFF DUP2 DUP10 SHR AND PUSH1 0x44 DUP7 ADD MSTORE PUSH4 0xFFFFFFFF SWAP1 DUP2 DUP2 AND PUSH1 0x64 DUP8 ADD MSTORE PUSH1 0x30 SHR AND PUSH1 0x84 DUP6 ADD MSTORE AND GAS CALL DUP1 ISZERO PUSH2 0x4DB JUMPI DUP5 SWAP1 PUSH2 0x4A9 JUMPI JUMPDEST PUSH1 0x1 SWAP3 POP DUP5 MSTORE MSTORE DUP1 PUSH1 0x40 DUP4 KECCAK256 SSTORE PUSH2 0x352 JUMP JUMPDEST POP DUP1 DUP3 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x4D4 JUMPI JUMPDEST PUSH2 0x4BF DUP2 DUP4 PUSH2 0x1A6E JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x4D0 JUMPI PUSH1 0x1 SWAP2 MLOAD PUSH2 0x497 JUMP JUMPDEST DUP4 DUP1 REVERT JUMPDEST POP RETURNDATASIZE PUSH2 0x4B5 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP7 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x4E6F2061637469766520726576696577657273 PUSH1 0x68 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP DUP8 ISZERO ISZERO PUSH2 0x33D JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP10 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 DUP10 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x4F6E6C79204149206F7261636C65 PUSH1 0x90 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x19E JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x19E JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 DUP2 AND SWAP2 DUP3 SWAP1 SUB PUSH2 0x6E7 JUMPI PUSH2 0x5B0 DUP2 PUSH1 0xA SLOAD AND CALLER EQ PUSH2 0x1CC1 JUMP JUMPDEST DUP2 DUP4 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 DUP5 KECCAK256 SLOAD AND ISZERO PUSH2 0x6B1 JUMPI DUP2 DUP4 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE DUP3 JUMPDEST PUSH1 0x3 DUP1 SLOAD DUP1 DUP4 LT ISZERO PUSH2 0x6A9 JUMPI DUP5 DUP5 PUSH2 0x5F2 DUP6 PUSH2 0x1AFC JUMP JUMPDEST SWAP1 SLOAD SWAP1 DUP6 SHL SHR AND EQ PUSH2 0x60E JUMPI POP POP PUSH2 0x609 SWAP1 PUSH2 0x1CFA JUMP JUMPDEST PUSH2 0x5DB JUMP JUMPDEST SWAP3 SWAP4 POP SWAP2 PUSH1 0x0 NOT SWAP2 SWAP1 DUP3 DUP2 ADD SWAP1 DUP2 GT PUSH2 0x695 JUMPI SWAP1 PUSH2 0x63F DUP6 PUSH2 0x632 PUSH2 0x65E SWAP5 PUSH2 0x1AFC JUMP JUMPDEST SWAP1 SLOAD SWAP1 DUP8 SHL SHR AND SWAP2 PUSH2 0x1AFC JUMP JUMPDEST SWAP1 SWAP2 SWAP1 DUP3 SLOAD SWAP1 PUSH1 0x3 SHL SWAP2 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP1 SWAP2 AND DUP4 SHL SWAP3 SHL NOT AND OR SWAP1 SSTORE JUMP JUMPDEST DUP2 SLOAD DUP1 ISZERO PUSH2 0x681 JUMPI ADD SWAP2 PUSH2 0x671 DUP4 PUSH2 0x1AFC JUMP JUMPDEST SWAP1 SWAP2 DUP3 SLOAD SWAP2 DUP5 SHL SHL NOT AND SWAP1 SSTORE SSTORE DUP1 RETURN JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP6 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 DUP6 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP7 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 DUP7 REVERT JUMPDEST POP POP POP POP POP DUP1 RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x2737BA1030903932BB34B2BBB2B9 PUSH1 0x91 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST DUP3 DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x19E JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x19E JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0xFF DUP2 AND DUP1 DUP3 SUB PUSH2 0x574 JUMPI PUSH2 0x713 PUSH2 0x1CB1 JUMP JUMPDEST PUSH1 0xA SLOAD SWAP2 PUSH2 0x72B CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND EQ PUSH2 0x1CC1 JUMP JUMPDEST PUSH1 0xFF DUP3 AND GT ISZERO PUSH2 0x75B JUMPI PUSH1 0xFF PUSH1 0xA8 SHL SWAP1 PUSH1 0xA8 SHL AND SWAP2 PUSH1 0xFF PUSH1 0xA0 SHL SWAP1 PUSH1 0xA0 SHL AND SWAP1 PUSH2 0xFFFF PUSH1 0xA0 SHL NOT AND OR OR PUSH1 0xA SSTORE DUP1 RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x496E76616C6964207468726573686F6C6473 PUSH1 0x70 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x19E JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x19E JUMPI PUSH1 0x40 PUSH1 0x20 SWAP2 PUSH1 0x4 CALLDATALOAD DUP2 MSTORE PUSH1 0x1 DUP4 MSTORE KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x19E JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x19E JUMPI PUSH1 0x40 SWAP1 PUSH1 0x4 CALLDATALOAD DUP2 MSTORE DUP1 PUSH1 0x20 MSTORE KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD SWAP2 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP1 PUSH1 0x2 DUP4 ADD SLOAD AND PUSH2 0x800 PUSH1 0x3 DUP5 ADD PUSH2 0x1C0B JUMP JUMPDEST SWAP3 PUSH1 0x5 DUP2 ADD SLOAD SWAP4 PUSH1 0x6 DUP3 ADD SLOAD PUSH1 0xFF PUSH1 0x7 DUP5 ADD SLOAD SWAP2 PUSH2 0x84B PUSH1 0x8 DUP7 ADD SLOAD SWAP5 PUSH1 0xA PUSH1 0x9 DUP9 ADD SLOAD SWAP8 ADD SLOAD SWAP8 PUSH1 0x40 MLOAD SWAP13 DUP14 SWAP13 DUP14 MSTORE PUSH1 0x20 DUP14 ADD MSTORE PUSH1 0x40 DUP13 ADD MSTORE PUSH2 0x1C0 DUP1 PUSH1 0x60 DUP14 ADD MSTORE DUP12 ADD SWAP1 PUSH2 0x1B49 JUMP JUMPDEST SWAP8 PUSH1 0x80 DUP11 ADD MSTORE PUSH2 0x860 PUSH1 0xA0 DUP11 ADD DUP4 DUP4 AND PUSH2 0x1B89 JUMP JUMPDEST DUP2 DUP2 PUSH1 0x8 SHR AND PUSH1 0xC0 DUP11 ADD MSTORE DUP2 DUP2 PUSH1 0x10 SHR AND PUSH1 0xE0 DUP11 ADD MSTORE PUSH1 0x18 SHR AND PUSH2 0x100 DUP9 ADD MSTORE PUSH2 0x120 DUP8 ADD MSTORE PUSH2 0x140 DUP7 ADD MSTORE PUSH2 0x160 DUP6 ADD MSTORE PUSH1 0xFF DUP2 AND ISZERO ISZERO PUSH2 0x180 DUP6 ADD MSTORE PUSH1 0x8 SHR AND PUSH2 0x1A0 DUP4 ADD MSTORE SUB SWAP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x19E JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x19E JUMPI PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x19E JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x19E JUMPI PUSH1 0x20 PUSH1 0x4 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x19E JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x19E JUMPI PUSH1 0x4 CALLDATALOAD CALLER DUP3 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH2 0x920 PUSH1 0xFF PUSH1 0x40 DUP5 KECCAK256 SLOAD AND PUSH2 0x1D73 JUMP JUMPDEST DUP1 DUP3 MSTORE DUP2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP3 KECCAK256 PUSH1 0xFF PUSH1 0x6 DUP3 ADD SLOAD AND PUSH1 0x6 DUP2 LT ISZERO PUSH2 0x973 JUMPI PUSH2 0x970 SWAP3 SWAP2 PUSH2 0x950 PUSH1 0x2 PUSH2 0x967 SWAP4 EQ PUSH2 0x1D36 JUMP JUMPDEST PUSH1 0xA ADD SLOAD PUSH1 0x8 SHR PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1DAF JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH2 0x1DF3 JUMP JUMPDEST DUP1 RETURN JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP5 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 DUP5 REVERT JUMPDEST POP CALLVALUE PUSH2 0x19E JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x19E JUMPI CALLER DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0xFF PUSH2 0x9B3 DUP2 PUSH1 0x40 DUP7 KECCAK256 SLOAD AND PUSH2 0x1D73 JUMP JUMPDEST PUSH1 0x4 SLOAD SWAP2 DUP5 PUSH1 0x1 JUMPDEST DUP5 DUP2 LT PUSH2 0xA62 JUMPI POP PUSH2 0x9CC SWAP1 PUSH2 0x20F7 JUMP JUMPDEST SWAP4 DUP6 SWAP3 PUSH1 0x1 JUMPDEST DUP6 DUP2 LT PUSH2 0x9EB JUMPI PUSH1 0x40 MLOAD DUP1 PUSH2 0x9E7 DUP10 DUP3 PUSH2 0x1B96 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST DUP1 DUP9 MSTORE DUP8 DUP5 MSTORE PUSH1 0x6 DUP3 DUP2 PUSH1 0x40 DUP12 KECCAK256 ADD SLOAD AND SWAP1 DUP2 LT ISZERO PUSH2 0x52A JUMPI DUP4 EQ DUP1 PUSH2 0xA40 JUMPI JUMPDEST PUSH2 0xA1F JUMPI JUMPDEST PUSH2 0xA1A SWAP1 PUSH2 0x1CFA JUMP JUMPDEST PUSH2 0x9D2 JUMP JUMPDEST SWAP4 PUSH2 0xA38 DUP2 DUP7 PUSH2 0xA32 PUSH2 0xA1A SWAP5 DUP12 PUSH2 0x1F70 JUMP JUMPDEST MSTORE PUSH2 0x1CFA JUMP JUMPDEST SWAP5 SWAP1 POP PUSH2 0xA11 JUMP JUMPDEST POP DUP1 DUP9 MSTORE DUP8 DUP5 MSTORE PUSH1 0x40 DUP9 KECCAK256 PUSH1 0xA ADD SLOAD PUSH1 0x8 SHR PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xA0C JUMP JUMPDEST DUP1 DUP8 MSTORE DUP7 DUP4 MSTORE PUSH1 0x6 DUP5 DUP2 PUSH1 0x40 DUP11 KECCAK256 ADD SLOAD AND SWAP1 DUP2 LT ISZERO PUSH2 0xACD JUMPI DUP7 EQ DUP1 PUSH2 0xAAB JUMPI JUMPDEST PUSH2 0xA96 JUMPI JUMPDEST PUSH2 0xA91 SWAP1 PUSH2 0x1CFA JUMP JUMPDEST PUSH2 0x9BB JUMP JUMPDEST SWAP1 PUSH2 0xAA3 PUSH2 0xA91 SWAP2 PUSH2 0x1CFA JUMP JUMPDEST SWAP2 SWAP1 POP PUSH2 0xA88 JUMP JUMPDEST POP DUP1 DUP8 MSTORE DUP7 DUP4 MSTORE PUSH1 0x40 DUP8 KECCAK256 PUSH1 0xA ADD SLOAD PUSH1 0x8 SHR PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xA83 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP9 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 DUP9 REVERT JUMPDEST POP CALLVALUE PUSH2 0x19E JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x19E JUMPI PUSH1 0x20 PUSH4 0xFFFFFFFF PUSH1 0x7 SLOAD PUSH1 0x30 SHR AND PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x19E JUMPI PUSH1 0x20 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1E3 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 PUSH1 0x4 CALLDATALOAD DUP3 DUP2 AND SWAP1 DUP2 SWAP1 SUB PUSH2 0x4D0 JUMPI PUSH1 0x4 SLOAD SWAP3 DUP5 PUSH1 0x1 JUMPDEST DUP6 DUP2 LT PUSH2 0xBA6 JUMPI POP PUSH2 0xB4B SWAP1 PUSH2 0x20F7 JUMP JUMPDEST SWAP5 DUP1 SWAP4 PUSH1 0x1 JUMPDEST DUP7 DUP2 LT PUSH2 0xB66 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH2 0x9E7 DUP11 DUP3 PUSH2 0x1B96 JUMP JUMPDEST DUP1 DUP4 MSTORE DUP3 DUP3 MSTORE DUP5 DUP5 PUSH1 0x2 PUSH1 0x40 DUP7 KECCAK256 ADD SLOAD AND EQ PUSH2 0xB8B JUMPI JUMPDEST PUSH2 0xB86 SWAP1 PUSH2 0x1CFA JUMP JUMPDEST PUSH2 0xB51 JUMP JUMPDEST SWAP5 PUSH2 0xB9E DUP2 DUP8 PUSH2 0xA32 PUSH2 0xB86 SWAP5 DUP13 PUSH2 0x1F70 JUMP JUMPDEST SWAP6 SWAP1 POP PUSH2 0xB7D JUMP JUMPDEST DUP1 DUP8 MSTORE DUP7 DUP6 MSTORE DUP4 DUP4 PUSH1 0x2 PUSH1 0x40 DUP11 KECCAK256 ADD SLOAD AND EQ PUSH2 0xBCB JUMPI JUMPDEST PUSH2 0xBC6 SWAP1 PUSH2 0x1CFA JUMP JUMPDEST PUSH2 0xB3A JUMP JUMPDEST SWAP1 PUSH2 0xBD8 PUSH2 0xBC6 SWAP2 PUSH2 0x1CFA JUMP JUMPDEST SWAP2 SWAP1 POP PUSH2 0xBBD JUMP JUMPDEST POP CALLVALUE PUSH2 0x19E JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x19E JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP3 AND SWAP1 DUP2 DUP4 SUB PUSH2 0x4D0 JUMPI PUSH2 0xC17 SWAP1 PUSH1 0xA SLOAD AND CALLER EQ PUSH2 0x1CC1 JUMP JUMPDEST DUP1 DUP4 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 DUP5 KECCAK256 SLOAD AND PUSH2 0xC78 JUMPI DUP3 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x40 SHL DUP2 LT ISZERO PUSH2 0xC64 JUMPI SWAP1 PUSH2 0x63F DUP3 PUSH1 0x1 PUSH2 0x970 SWAP5 ADD PUSH1 0x3 SSTORE PUSH2 0x1AFC JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP4 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 DUP4 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x20B63932B0B23C9030903932BB34B2BBB2B9 PUSH1 0x71 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x19E JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x19E JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 DUP2 AND SWAP2 DUP3 SWAP1 SUB PUSH2 0x6E7 JUMPI PUSH2 0xCE9 SWAP1 PUSH1 0xA SLOAD AND CALLER EQ PUSH2 0x1CC1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL PUSH1 0x8 SLOAD AND OR PUSH1 0x8 SSTORE DUP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x19E JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x19E JUMPI PUSH1 0x20 PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x19E JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x19E JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x24 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x6E7 JUMPI PUSH2 0xD51 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x1AA6 JUMP JUMPDEST CALLER DUP4 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH2 0xD69 PUSH1 0xFF PUSH1 0x40 DUP6 KECCAK256 SLOAD AND PUSH2 0x1D73 JUMP JUMPDEST DUP2 DUP4 MSTORE DUP3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 PUSH1 0x6 DUP2 ADD DUP1 SLOAD PUSH1 0xFF DUP2 AND PUSH1 0x6 DUP2 LT ISZERO PUSH2 0xE00 JUMPI SWAP2 PUSH1 0x4 PUSH2 0xDFA SWAP5 SWAP3 PUSH2 0xDBD PUSH1 0x2 PUSH32 0x43CC3D080E025C67C26D62B18BD442511DC9C76C8AA3F48CC0E8F456173E61F1 SWAP9 SWAP7 EQ PUSH2 0x1D36 JUMP JUMPDEST PUSH1 0xA DUP5 ADD SLOAD PUSH2 0xDD9 SWAP1 PUSH1 0x8 SHR PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1DAF JUMP JUMPDEST PUSH1 0xFF NOT AND OR SWAP1 SSTORE PUSH1 0x9 TIMESTAMP SWAP2 ADD SSTORE PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 PUSH1 0x20 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP1 PUSH2 0x1B49 JUMP JUMPDEST SUB SWAP1 LOG2 DUP1 RETURN JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP8 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 DUP8 REVERT JUMPDEST POP CALLVALUE PUSH2 0x19E JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x19E JUMPI DUP1 PUSH2 0x1C0 PUSH1 0x40 MLOAD PUSH2 0xE36 DUP2 PUSH2 0x1A29 JUMP JUMPDEST DUP3 DUP2 MSTORE DUP3 PUSH1 0x20 DUP3 ADD MSTORE DUP3 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 DUP1 DUP3 ADD MSTORE PUSH1 0x60 PUSH1 0x80 DUP3 ADD MSTORE DUP3 PUSH1 0xA0 DUP3 ADD MSTORE DUP3 PUSH1 0xC0 DUP3 ADD MSTORE DUP3 PUSH1 0xE0 DUP3 ADD MSTORE DUP3 PUSH2 0x100 DUP3 ADD MSTORE DUP3 PUSH2 0x120 DUP3 ADD MSTORE DUP3 PUSH2 0x140 DUP3 ADD MSTORE DUP3 PUSH2 0x160 DUP3 ADD MSTORE DUP3 PUSH2 0x180 DUP3 ADD MSTORE DUP3 PUSH2 0x1A0 DUP3 ADD MSTORE ADD MSTORE PUSH1 0x4 CALLDATALOAD DUP2 MSTORE DUP1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP1 PUSH1 0x40 MLOAD SWAP2 PUSH2 0xEAB DUP4 PUSH2 0x1A29 JUMP JUMPDEST DUP1 SLOAD DUP4 MSTORE PUSH1 0x1 DUP2 ADD SLOAD PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x2 DUP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x40 DUP5 ADD MSTORE PUSH2 0xED8 PUSH1 0x3 DUP3 ADD PUSH2 0x1C0B JUMP JUMPDEST PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x4 DUP2 ADD SLOAD PUSH2 0xEEB DUP2 PUSH2 0x1A8F JUMP JUMPDEST SWAP1 PUSH2 0xEF9 PUSH1 0x40 MLOAD SWAP3 DUP4 PUSH2 0x1A6E JUMP JUMPDEST DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD PUSH1 0x4 DUP5 ADD DUP6 MSTORE PUSH1 0x20 DUP6 KECCAK256 DUP6 SWAP2 JUMPDEST DUP4 DUP4 LT PUSH2 0x10FA JUMPI POP POP POP POP PUSH1 0x80 DUP5 ADD MSTORE PUSH1 0x5 DUP2 ADD SLOAD PUSH1 0xA0 DUP5 ADD MSTORE PUSH1 0x6 DUP2 ADD SLOAD SWAP1 PUSH1 0x6 PUSH1 0xFF DUP4 AND LT ISZERO PUSH2 0x10E4 JUMPI PUSH1 0xFF DUP3 DUP2 PUSH1 0xA SWAP5 AND PUSH1 0xC0 DUP8 ADD MSTORE DUP2 DUP2 PUSH1 0x8 SHR AND PUSH1 0xE0 DUP8 ADD MSTORE DUP2 DUP2 PUSH1 0x10 SHR AND PUSH2 0x100 DUP8 ADD MSTORE PUSH1 0x18 SHR AND PUSH2 0x120 DUP6 ADD MSTORE PUSH1 0x7 DUP2 ADD SLOAD PUSH2 0x140 DUP6 ADD MSTORE PUSH1 0x8 DUP2 ADD SLOAD PUSH2 0x160 DUP6 ADD MSTORE PUSH1 0x9 DUP2 ADD SLOAD PUSH2 0x180 DUP6 ADD MSTORE ADD SLOAD PUSH1 0xFF DUP2 AND ISZERO ISZERO PUSH2 0x1A0 DUP5 ADD MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP1 PUSH1 0x8 SHR AND PUSH2 0x1C0 DUP4 ADD MSTORE PUSH1 0x40 MLOAD SWAP1 PUSH1 0x20 DUP3 MSTORE DUP3 MLOAD PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x20 DUP4 ADD MLOAD PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x40 DUP5 ADD MLOAD AND PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0xFEE PUSH1 0x60 DUP5 ADD MLOAD PUSH2 0x1E0 PUSH1 0x80 DUP6 ADD MSTORE PUSH2 0x200 DUP5 ADD SWAP1 PUSH2 0x1B49 JUMP JUMPDEST SWAP1 PUSH1 0x80 DUP5 ADD MLOAD SWAP2 PUSH1 0x1F NOT DUP5 DUP3 SUB ADD PUSH1 0xA0 DUP6 ADD MSTORE DUP3 MLOAD SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 ADD PUSH1 0x20 DUP1 DUP5 PUSH1 0x5 SHL DUP5 ADD ADD SWAP6 ADD SWAP4 SWAP2 JUMPDEST DUP4 DUP4 LT PUSH2 0x10B7 JUMPI DUP7 DUP1 DUP8 DUP11 PUSH1 0xA0 DUP2 ADD MLOAD PUSH1 0xC0 DUP5 ADD MSTORE PUSH2 0x1041 PUSH1 0xC0 DUP3 ADD MLOAD PUSH1 0xE0 DUP6 ADD SWAP1 PUSH2 0x1B89 JUMP JUMPDEST PUSH1 0xFF PUSH1 0xE0 DUP3 ADD MLOAD AND PUSH2 0x100 DUP5 ADD MSTORE PUSH1 0xFF PUSH2 0x100 DUP3 ADD MLOAD AND PUSH2 0x120 DUP5 ADD MSTORE PUSH1 0xFF PUSH2 0x120 DUP3 ADD MLOAD AND PUSH2 0x140 DUP5 ADD MSTORE PUSH2 0x140 DUP2 ADD MLOAD PUSH2 0x160 DUP5 ADD MSTORE PUSH2 0x160 DUP2 ADD MLOAD PUSH2 0x180 DUP5 ADD MSTORE PUSH2 0x180 DUP2 ADD MLOAD PUSH2 0x1A0 DUP5 ADD MSTORE PUSH2 0x1A0 DUP2 ADD MLOAD ISZERO ISZERO PUSH2 0x1C0 DUP5 ADD MSTORE PUSH2 0x1C0 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP2 ADD MLOAD AND PUSH2 0x1E0 DUP4 ADD MSTORE SUB SWAP1 RETURN JUMPDEST SWAP1 SWAP2 SWAP3 SWAP4 SWAP5 PUSH1 0x20 DUP1 PUSH2 0x10D5 PUSH1 0x1 SWAP4 PUSH1 0x1F NOT DUP7 DUP3 SUB ADD DUP8 MSTORE DUP10 MLOAD PUSH2 0x1B49 JUMP JUMPDEST SWAP8 ADD SWAP4 ADD SWAP4 ADD SWAP2 SWAP4 SWAP3 SWAP1 PUSH2 0x101A JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x20 DUP2 SWAP3 PUSH2 0x1109 DUP6 PUSH2 0x1C0B JUMP JUMPDEST DUP2 MSTORE ADD SWAP3 ADD SWAP3 ADD SWAP2 SWAP1 PUSH2 0xF0D JUMP JUMPDEST POP CALLVALUE PUSH2 0x19E JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x19E JUMPI PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x3 SLOAD DUP3 LT ISZERO PUSH2 0x19E JUMPI PUSH1 0x20 PUSH2 0x1142 DUP4 PUSH2 0x1AFC JUMP JUMPDEST SWAP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x3 SWAP3 SWAP1 SWAP3 SHL SHR PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x19E JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x19E JUMPI PUSH1 0x20 PUSH1 0x7 SLOAD PUSH2 0xFFFF PUSH1 0x40 MLOAD SWAP2 DUP4 SHR AND DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x19E JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x19E JUMPI PUSH1 0x20 PUSH1 0xFF PUSH1 0xA SLOAD PUSH1 0xA0 SHR AND PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x19E JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x19E JUMPI PUSH1 0x20 PUSH4 0xFFFFFFFF PUSH1 0x7 SLOAD AND PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x19E JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x19E JUMPI PUSH1 0x24 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x1E3 JUMPI PUSH2 0x11F8 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x1AA6 JUMP JUMPDEST PUSH1 0x44 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x6E7 JUMPI CALLDATASIZE PUSH1 0x23 DUP4 ADD SLT ISZERO PUSH2 0x6E7 JUMPI DUP2 PUSH1 0x4 ADD CALLDATALOAD SWAP2 PUSH2 0x1224 DUP4 PUSH2 0x1A8F JUMP JUMPDEST SWAP3 PUSH2 0x1232 PUSH1 0x40 MLOAD SWAP5 DUP6 PUSH2 0x1A6E JUMP JUMPDEST DUP1 DUP5 MSTORE PUSH1 0x5 SHL DUP2 ADD PUSH1 0x24 ADD PUSH1 0x20 DUP5 ADD CALLDATASIZE DUP3 GT PUSH2 0x185F JUMPI PUSH1 0x24 DUP4 ADD SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x182C JUMPI POP POP PUSH1 0x7 SLOAD PUSH1 0x40 MLOAD PUSH4 0x4A1F98D3 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 DUP1 CALLDATALOAD SWAP1 DUP3 ADD MSTORE CALLER PUSH1 0x24 DUP3 ADD MSTORE SWAP3 POP PUSH1 0x20 SWAP2 POP DUP3 SWAP1 PUSH1 0x44 SWAP1 DUP3 SWAP1 PUSH1 0x50 SHR PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x4DB JUMPI DUP5 SWAP2 PUSH2 0x17F1 JUMPI JUMPDEST POP ISZERO PUSH2 0x17BB JUMPI PUSH1 0x4 SLOAD SWAP2 PUSH2 0x12B1 DUP4 PUSH2 0x1CFA JUMP JUMPDEST PUSH1 0x4 SSTORE PUSH1 0x40 MLOAD SWAP2 PUSH2 0x12C1 DUP4 PUSH2 0x1A29 JUMP JUMPDEST DUP4 DUP4 MSTORE PUSH1 0x4 CALLDATALOAD PUSH1 0x20 DUP5 ADD MSTORE CALLER PUSH1 0x40 DUP5 ADD MSTORE PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x80 DUP3 ADD MSTORE TIMESTAMP PUSH1 0xA0 DUP3 ADD MSTORE DUP3 PUSH1 0xC0 DUP3 ADD MSTORE DUP3 PUSH1 0xE0 DUP3 ADD MSTORE DUP3 PUSH2 0x100 DUP3 ADD MSTORE DUP3 PUSH2 0x120 DUP3 ADD MSTORE DUP3 PUSH2 0x140 DUP3 ADD MSTORE DUP3 PUSH2 0x160 DUP3 ADD MSTORE DUP3 PUSH2 0x180 DUP3 ADD MSTORE DUP3 PUSH2 0x1A0 DUP3 ADD MSTORE DUP3 PUSH2 0x1C0 DUP3 ADD MSTORE DUP2 DUP4 MSTORE DUP3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 SWAP1 DUP1 MLOAD DUP3 SSTORE PUSH1 0x20 DUP2 ADD MLOAD PUSH1 0x1 DUP4 ADD SSTORE PUSH1 0x2 DUP3 ADD PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x40 DUP4 ADD MLOAD AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL DUP3 SLOAD AND OR SWAP1 SSTORE PUSH1 0x60 DUP2 ADD MLOAD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x1708 JUMPI DUP1 PUSH1 0x3 DUP6 ADD SWAP3 PUSH2 0x1380 DUP5 SLOAD PUSH2 0x1BD1 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x178B JUMPI JUMPDEST POP PUSH1 0x20 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x1727 JUMPI DUP9 SWAP3 PUSH2 0x171C JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR SWAP1 SSTORE JUMPDEST PUSH1 0x80 DUP2 ADD MLOAD DUP1 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x40 SHL DUP3 GT PUSH2 0x1708 JUMPI PUSH1 0x4 DUP5 ADD SLOAD DUP3 PUSH1 0x4 DUP7 ADD SSTORE DUP1 DUP4 LT PUSH2 0x1694 JUMPI JUMPDEST POP PUSH1 0x20 ADD PUSH1 0x4 DUP5 ADD DUP7 MSTORE PUSH1 0x20 DUP7 KECCAK256 DUP7 SWAP2 JUMPDEST DUP4 DUP4 LT PUSH2 0x1566 JUMPI POP POP POP POP PUSH1 0xA0 DUP2 ADD MLOAD PUSH1 0x5 DUP4 ADD SSTORE PUSH1 0x6 DUP3 ADD SWAP2 PUSH1 0xC0 DUP3 ADD MLOAD SWAP3 PUSH1 0x6 DUP5 LT ISZERO PUSH2 0x1552 JUMPI DUP1 SLOAD PUSH1 0xE0 DUP5 ADD MLOAD PUSH2 0x100 DUP6 ADD MLOAD PUSH2 0x120 DUP7 ADD MLOAD PUSH4 0xFF000000 PUSH1 0x18 SWAP2 SWAP1 SWAP2 SHL AND PUSH4 0xFFFFFFFF NOT SWAP1 SWAP4 AND PUSH1 0xFF SWAP8 DUP9 AND OR PUSH1 0x8 SWAP3 DUP4 SHL PUSH2 0xFF00 AND OR PUSH3 0xFF0000 PUSH1 0x10 SWAP3 SWAP1 SWAP3 SHL SWAP2 SWAP1 SWAP2 AND OR SWAP2 SWAP1 SWAP2 OR SWAP1 SWAP2 SSTORE PUSH2 0x140 DUP4 ADD MLOAD PUSH1 0x7 DUP4 ADD SSTORE PUSH2 0x160 DUP4 ADD MLOAD DUP3 DUP3 ADD SSTORE PUSH2 0x180 DUP4 ADD MLOAD PUSH1 0x9 DUP4 ADD SSTORE PUSH2 0x1A0 DUP4 ADD MLOAD PUSH1 0xA SWAP1 SWAP3 ADD DUP1 SLOAD PUSH2 0x1C0 SWAP1 SWAP5 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT SWAP1 SWAP5 AND SWAP3 ISZERO ISZERO SWAP1 SWAP5 AND SWAP2 SWAP1 SWAP2 OR SWAP2 SWAP1 SHL PUSH2 0x100 PUSH1 0x1 PUSH1 0xA8 SHL SUB AND OR SWAP1 SSTORE PUSH1 0x7 SLOAD DUP3 SWAP1 PUSH1 0x50 SHR PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 EXTCODESIZE ISZERO PUSH2 0x1E3 JUMPI DUP2 SWAP1 PUSH1 0x24 PUSH1 0x40 MLOAD DUP1 SWAP7 DUP2 SWAP4 PUSH4 0x234D8A7 PUSH1 0xE6 SHL DUP4 MSTORE PUSH1 0x4 CALLDATALOAD PUSH1 0x4 DUP5 ADD MSTORE GAS CALL SWAP3 DUP4 ISZERO PUSH2 0x1545 JUMPI PUSH1 0x20 SWAP4 PUSH2 0x1536 JUMPI JUMPDEST POP SWAP1 PUSH1 0x40 MLOAD SWAP2 CALLER SWAP1 DUP3 PUSH32 0x9FE11E531030A058803617055E27F9F4768236E4322E13B9C4C09F4338E23A68 PUSH1 0x4 CALLDATALOAD SWAP3 DUP1 LOG4 DUP2 MSTORE RETURN JUMPDEST PUSH2 0x153F SWAP1 PUSH2 0x1A5B JUMP JUMPDEST CODESIZE PUSH2 0x1502 JUMP JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 RETURNDATASIZE SWAP1 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP7 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 DUP7 REVERT JUMPDEST DUP1 MLOAD DUP1 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x1680 JUMPI PUSH2 0x1583 DUP5 SLOAD PUSH2 0x1BD1 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x1645 JUMPI JUMPDEST POP PUSH1 0x20 SWAP1 DUP11 PUSH1 0x1F DUP5 GT PUSH1 0x1 EQ PUSH2 0x15D8 JUMPI SWAP3 DUP1 PUSH1 0x20 SWAP4 PUSH1 0x1 SWAP7 SWAP4 DUP8 SWAP7 SWAP3 PUSH2 0x15CD JUMPI JUMPDEST POP POP PUSH1 0x0 NOT PUSH1 0x3 DUP4 SWAP1 SHL SHR NOT AND SWAP1 DUP5 SHL OR DUP6 SSTORE JUMPDEST ADD SWAP3 ADD SWAP3 ADD SWAP2 SWAP1 PUSH2 0x13EB JUMP JUMPDEST ADD MLOAD SWAP1 POP CODESIZE DUP1 PUSH2 0x15AD JUMP JUMPDEST DUP6 SWAP1 MSTORE PUSH1 0x20 DUP12 KECCAK256 SWAP2 SWAP1 DUP12 JUMPDEST PUSH1 0x1F NOT DUP6 AND DUP2 LT PUSH2 0x162D JUMPI POP DUP4 PUSH1 0x20 SWAP4 PUSH1 0x1 SWAP7 SWAP4 DUP8 SWAP7 SWAP4 DUP8 SWAP5 PUSH1 0x1F NOT DUP2 AND LT PUSH2 0x1614 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD DUP6 SSTORE PUSH2 0x15C1 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH2 0x1607 JUMP JUMPDEST SWAP2 SWAP3 PUSH1 0x20 PUSH1 0x1 DUP2 SWAP3 DUP7 DUP6 ADD MLOAD DUP2 SSTORE ADD SWAP5 ADD SWAP3 ADD PUSH2 0x15E3 JUMP JUMPDEST PUSH2 0x1670 SWAP1 DUP6 DUP13 MSTORE PUSH1 0x20 DUP13 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD SWAP2 PUSH1 0x20 DUP7 LT PUSH2 0x1676 JUMPI JUMPDEST PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP1 PUSH2 0x1D1F JUMP JUMPDEST CODESIZE PUSH2 0x158C JUMP JUMPDEST SWAP1 SWAP2 POP DUP2 SWAP1 PUSH2 0x1663 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP11 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 DUP11 REVERT JUMPDEST PUSH1 0x4 DUP6 ADD DUP8 MSTORE PUSH1 0x20 DUP8 KECCAK256 SWAP1 DUP4 DUP3 ADD JUMPDEST DUP2 DUP4 ADD DUP2 LT PUSH2 0x16B3 JUMPI POP POP PUSH2 0x13DA JUMP JUMPDEST DUP1 DUP10 PUSH2 0x16C1 PUSH1 0x1 SWAP4 SLOAD PUSH2 0x1BD1 JUMP JUMPDEST DUP1 PUSH2 0x16CF JUMPI JUMPDEST POP POP ADD PUSH2 0x16A3 JUMP JUMPDEST PUSH1 0x1F DUP2 GT DUP5 EQ PUSH2 0x16E4 JUMPI POP DUP2 SSTORE JUMPDEST DUP10 CODESIZE PUSH2 0x16C7 JUMP JUMPDEST DUP3 DUP3 MSTORE PUSH2 0x16FF PUSH1 0x1F PUSH1 0x20 DUP5 KECCAK256 SWAP3 ADD PUSH1 0x5 SHR DUP3 ADD DUP6 DUP4 ADD PUSH2 0x1D1F JUMP JUMPDEST DUP2 DUP4 SSTORE SSTORE PUSH2 0x16DD JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP7 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 DUP7 REVERT JUMPDEST ADD MLOAD SWAP1 POP CODESIZE DUP1 PUSH2 0x139F JUMP JUMPDEST DUP5 DUP10 MSTORE PUSH1 0x20 DUP10 KECCAK256 SWAP3 POP PUSH1 0x1F NOT DUP5 AND DUP10 JUMPDEST DUP2 DUP2 LT PUSH2 0x1773 JUMPI POP SWAP1 DUP5 PUSH1 0x1 SWAP6 SWAP5 SWAP4 SWAP3 LT PUSH2 0x175A JUMPI JUMPDEST POP POP POP DUP2 SHL ADD SWAP1 SSTORE PUSH2 0x13B4 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH2 0x174D JUMP JUMPDEST SWAP3 SWAP4 PUSH1 0x20 PUSH1 0x1 DUP2 SWAP3 DUP8 DUP7 ADD MLOAD DUP2 SSTORE ADD SWAP6 ADD SWAP4 ADD PUSH2 0x1737 JUMP JUMPDEST PUSH2 0x17B5 SWAP1 DUP6 DUP11 MSTORE PUSH1 0x20 DUP11 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD SWAP2 PUSH1 0x20 DUP7 LT PUSH2 0x1676 JUMPI PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP1 PUSH2 0x1D1F JUMP JUMPDEST CODESIZE PUSH2 0x1389 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x496E76616C696420706F6C696379 PUSH1 0x90 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x1824 JUMPI JUMPDEST DUP2 PUSH2 0x180C PUSH1 0x20 SWAP4 DUP4 PUSH2 0x1A6E JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x4D0 JUMPI MLOAD DUP1 ISZERO ISZERO DUP2 SUB PUSH2 0x4D0 JUMPI CODESIZE PUSH2 0x129E JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x17FF JUMP JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x185B JUMPI PUSH1 0x20 SWAP2 PUSH2 0x1850 DUP4 SWAP3 PUSH1 0x24 CALLDATASIZE SWAP2 DUP10 ADD ADD PUSH2 0x1AA6 JUMP JUMPDEST DUP2 MSTORE ADD SWAP2 ADD SWAP1 PUSH2 0x124E JUMP JUMPDEST DUP8 DUP1 REVERT JUMPDEST DUP6 DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x19E JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x19E JUMPI PUSH1 0x9 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x19E JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x19E JUMPI PUSH1 0x8 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x19E JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x19E JUMPI PUSH1 0x24 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x1E3 JUMPI CALLDATASIZE PUSH1 0x23 DUP3 ADD SLT ISZERO PUSH2 0x1E3 JUMPI DUP1 PUSH1 0x4 ADD CALLDATALOAD PUSH2 0x18F1 DUP2 PUSH2 0x1A8F JUMP JUMPDEST SWAP2 PUSH2 0x18FF PUSH1 0x40 MLOAD SWAP4 DUP5 PUSH2 0x1A6E JUMP JUMPDEST DUP2 DUP4 MSTORE PUSH1 0x20 SWAP2 PUSH1 0x24 DUP4 DUP6 ADD SWAP2 PUSH1 0x5 SHL DUP4 ADD ADD SWAP2 CALLDATASIZE DUP4 GT PUSH2 0x185F JUMPI PUSH1 0x24 ADD SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x1984 JUMPI DUP6 DUP6 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER DUP2 SWAP1 SUB PUSH2 0x1966 JUMPI POP PUSH2 0x970 SWAP1 PUSH1 0x4 CALLDATALOAD PUSH2 0x1F84 JUMP JUMPDEST PUSH1 0x44 SWAP1 PUSH1 0x40 MLOAD SWAP1 PUSH4 0x73E64FD PUSH1 0xE2 SHL DUP3 MSTORE CALLER PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD MSTORE REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 MSTORE SWAP1 DUP4 ADD SWAP1 DUP4 ADD PUSH2 0x191E JUMP JUMPDEST POP CALLVALUE PUSH2 0x19E JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x19E JUMPI PUSH1 0x7 SLOAD PUSH1 0x40 MLOAD PUSH1 0x50 SWAP2 SWAP1 SWAP2 SHR PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x19E JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x19E JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 DUP2 AND SWAP2 DUP3 SWAP1 SUB PUSH2 0x6E7 JUMPI PUSH2 0x19F7 SWAP1 PUSH1 0xA SLOAD AND CALLER EQ PUSH2 0x1CC1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL PUSH1 0x9 SLOAD AND OR PUSH1 0x9 SSTORE DUP1 RETURN JUMPDEST SWAP1 POP CALLVALUE PUSH2 0x1E3 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1E3 JUMPI PUSH1 0x20 SWAP1 PUSH1 0x6 SLOAD DUP2 MSTORE RETURN JUMPDEST PUSH2 0x1E0 DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x1A45 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x1A45 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x1A45 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x1A45 JUMPI PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x1F DUP3 ADD SLT ISZERO PUSH2 0x574 JUMPI DUP1 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x1A45 JUMPI PUSH1 0x40 MLOAD SWAP3 PUSH2 0x1ADA PUSH1 0x1F DUP5 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP6 PUSH2 0x1A6E JUMP JUMPDEST DUP3 DUP5 MSTORE PUSH1 0x20 DUP4 DUP4 ADD ADD GT PUSH2 0x574 JUMPI DUP2 PUSH1 0x0 SWAP3 PUSH1 0x20 DUP1 SWAP4 ADD DUP4 DUP7 ADD CALLDATACOPY DUP4 ADD ADD MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 LT ISZERO PUSH2 0x1B33 JUMPI PUSH1 0x3 PUSH1 0x0 MSTORE PUSH32 0xC2575A0E9E593C00F959F8C92F12DB2869C3395A3B0502D05E2516446F71F85B ADD SWAP1 PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 SWAP1 DUP3 MLOAD SWAP3 DUP4 DUP3 MSTORE PUSH1 0x0 JUMPDEST DUP5 DUP2 LT PUSH2 0x1B75 JUMPI POP POP DUP3 PUSH1 0x0 PUSH1 0x20 DUP1 SWAP5 SWAP6 DUP5 ADD ADD MSTORE PUSH1 0x1F DUP1 NOT SWAP2 ADD AND ADD ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP2 DUP4 ADD DUP2 ADD MLOAD DUP5 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0x1B54 JUMP JUMPDEST SWAP1 PUSH1 0x6 DUP3 LT ISZERO PUSH2 0x10E4 JUMPI MSTORE JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 PUSH1 0x40 DUP2 DUP4 ADD SWAP3 DUP3 DUP2 MSTORE DUP6 MLOAD DUP1 SWAP5 MSTORE ADD SWAP4 ADD SWAP2 PUSH1 0x0 JUMPDEST DUP3 DUP2 LT PUSH2 0x1BBD JUMPI POP POP POP POP SWAP1 JUMP JUMPDEST DUP4 MLOAD DUP6 MSTORE SWAP4 DUP2 ADD SWAP4 SWAP3 DUP2 ADD SWAP3 PUSH1 0x1 ADD PUSH2 0x1BAF JUMP JUMPDEST SWAP1 PUSH1 0x1 DUP3 DUP2 SHR SWAP3 AND DUP1 ISZERO PUSH2 0x1C01 JUMPI JUMPDEST PUSH1 0x20 DUP4 LT EQ PUSH2 0x1BEB JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0x1BE0 JUMP JUMPDEST SWAP1 PUSH1 0x40 MLOAD SWAP2 DUP3 PUSH1 0x0 DUP3 SLOAD SWAP3 PUSH2 0x1C1F DUP5 PUSH2 0x1BD1 JUMP JUMPDEST SWAP1 DUP2 DUP5 MSTORE PUSH1 0x1 SWAP5 DUP6 DUP2 AND SWAP1 DUP2 PUSH1 0x0 EQ PUSH2 0x1C8E JUMPI POP PUSH1 0x1 EQ PUSH2 0x1C4B JUMPI JUMPDEST POP POP PUSH2 0x1C49 SWAP3 POP SUB DUP4 PUSH2 0x1A6E JUMP JUMPDEST JUMP JUMPDEST SWAP1 SWAP4 SWAP2 POP PUSH1 0x0 MSTORE PUSH1 0x20 SWAP1 DUP2 PUSH1 0x0 KECCAK256 SWAP4 PUSH1 0x0 SWAP2 JUMPDEST DUP2 DUP4 LT PUSH2 0x1C76 JUMPI POP POP PUSH2 0x1C49 SWAP4 POP DUP3 ADD ADD CODESIZE DUP1 PUSH2 0x1C3B JUMP JUMPDEST DUP6 SLOAD DUP9 DUP5 ADD DUP6 ADD MSTORE SWAP5 DUP6 ADD SWAP5 DUP8 SWAP5 POP SWAP2 DUP4 ADD SWAP2 PUSH2 0x1C5E JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1C49 SWAP5 POP PUSH1 0x20 SWAP3 POP PUSH1 0xFF NOT AND DUP3 DUP5 ADD MSTORE ISZERO ISZERO PUSH1 0x5 SHL DUP3 ADD ADD CODESIZE DUP1 PUSH2 0x1C3B JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH1 0xFF DUP3 AND DUP3 SUB PUSH2 0x574 JUMPI JUMP JUMPDEST ISZERO PUSH2 0x1CC8 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xA PUSH1 0x24 DUP3 ADD MSTORE PUSH10 0x27B7363C9030B236B4B7 PUSH1 0xB1 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x0 NOT DUP2 EQ PUSH2 0x1D09 JUMPI PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 DUP2 LT PUSH2 0x1D2A JUMPI POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x1D1F JUMP JUMPDEST ISZERO PUSH2 0x1D3D JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x496E76616C696420737461747573 PUSH1 0x90 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x1D7A JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH13 0x27B7363C903932BB34B2BBB2B9 PUSH1 0x99 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x1DB6 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x2737BA1030B9B9B4B3B732B2103932BB34B2BBB2B9 PUSH1 0x59 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP1 PUSH1 0x0 SWAP1 DUP3 DUP3 MSTORE DUP2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 DUP4 KECCAK256 PUSH1 0x6 DUP2 ADD SWAP3 PUSH1 0xFF NOT SWAP3 PUSH1 0x3 DUP5 DUP7 SLOAD AND OR DUP6 SSTORE DUP1 PUSH1 0x8 DUP5 ADD SSTORE TIMESTAMP PUSH1 0x9 DUP5 ADD SSTORE DUP7 PUSH32 0x638D892B8630B775FEA5D7A52B209E8BFA1D90C32B57CD37208AC84D4BCD6DCB PUSH1 0x20 DUP5 MLOAD DUP5 DUP2 MSTORE LOG2 PUSH1 0x8 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP1 PUSH2 0x1E6B JUMPI JUMPDEST POP POP POP POP POP POP POP POP POP JUMP JUMPDEST DUP2 PUSH1 0x2 DUP7 ADD SLOAD AND DUP2 EXTCODESIZE ISZERO PUSH2 0x1F6C JUMPI DUP9 SWAP1 PUSH1 0x64 DUP12 DUP4 DUP9 MLOAD SWAP6 DUP7 SWAP5 DUP6 SWAP4 PUSH4 0x652619A3 PUSH1 0xE1 SHL DUP6 MSTORE PUSH1 0x4 DUP6 ADD MSTORE PUSH1 0x24 DUP5 ADD MSTORE DUP9 PUSH1 0x44 DUP5 ADD MSTORE GAS CALL DUP1 ISZERO PUSH2 0x1F62 JUMPI PUSH2 0x1F4E JUMPI JUMPDEST POP PUSH1 0x1 SWAP1 PUSH1 0x7 SLOAD PUSH1 0x50 SHR AND SWAP4 ADD SLOAD DUP4 EXTCODESIZE ISZERO PUSH2 0x1F4A JUMPI SWAP1 PUSH1 0x44 DUP8 SWAP3 DUP4 DUP6 MLOAD SWAP7 DUP8 SWAP5 DUP6 SWAP4 PUSH4 0x1F0224AD PUSH1 0xE3 SHL DUP6 MSTORE PUSH1 0x4 DUP6 ADD MSTORE PUSH1 0x24 DUP5 ADD MSTORE GAS CALL SWAP1 DUP2 ISZERO PUSH2 0x1F41 JUMPI POP PUSH2 0x1F2D JUMPI JUMPDEST POP DUP2 SLOAD AND PUSH1 0x5 OR SWAP1 SSTORE PUSH32 0x633FF17603F543FB14610394A700602D41C32A3EDED36897C06EC7789E443650 SWAP1 DUP1 LOG2 CODESIZE DUP1 DUP1 DUP1 DUP1 DUP1 DUP1 DUP1 DUP1 PUSH2 0x1E60 JUMP JUMPDEST PUSH2 0x1F37 DUP5 SWAP2 PUSH2 0x1A5B JUMP JUMPDEST PUSH2 0x6E7 JUMPI CODESIZE PUSH2 0x1EF2 JUMP JUMPDEST MLOAD RETURNDATASIZE DUP7 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP7 DUP1 REVERT JUMPDEST SWAP7 PUSH2 0x1F5B PUSH1 0x1 SWAP3 SWAP9 PUSH2 0x1A5B JUMP JUMPDEST SWAP7 SWAP1 PUSH2 0x1EAD JUMP JUMPDEST DUP5 MLOAD RETURNDATASIZE DUP11 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP9 DUP1 REVERT JUMPDEST DUP1 MLOAD DUP3 LT ISZERO PUSH2 0x1B33 JUMPI PUSH1 0x20 SWAP2 PUSH1 0x5 SHL ADD ADD SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP3 KECCAK256 SLOAD SWAP1 DUP2 ISZERO PUSH2 0x20C0 JUMPI PUSH1 0x3 SLOAD ISZERO PUSH2 0x2057 JUMPI DUP1 MLOAD ISZERO PUSH2 0x2043 JUMPI PUSH1 0x20 ADD MLOAD PUSH1 0x3 SLOAD SWAP1 DUP2 ISZERO PUSH2 0x202F JUMPI PUSH32 0xBC1F3DAF62009283F8F2078BC45883E8DBB3F415BC325829CE38ECE15B5F8990 SWAP2 PUSH2 0x1FE4 SWAP2 MOD PUSH2 0x1AFC JUMP JUMPDEST SWAP1 SLOAD DUP4 DUP6 MSTORE PUSH1 0x20 DUP6 SWAP1 MSTORE PUSH1 0x40 DUP6 KECCAK256 PUSH1 0xA ADD DUP1 SLOAD PUSH2 0x100 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT AND PUSH1 0x3 SWAP4 SWAP1 SWAP4 SHL SWAP2 SWAP1 SWAP2 SHR PUSH1 0x8 DUP2 SWAP1 SHL PUSH2 0x100 PUSH1 0x1 PUSH1 0xA8 SHL SUB AND SWAP3 SWAP1 SWAP3 OR SWAP1 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP3 DUP1 LOG3 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP5 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 DUP5 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP4 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 DUP4 REVERT JUMPDEST POP PUSH1 0xA DUP1 SLOAD DUP3 DUP5 MSTORE PUSH1 0x20 DUP5 SWAP1 MSTORE PUSH1 0x40 DUP5 KECCAK256 SWAP1 SWAP2 ADD DUP1 SLOAD PUSH2 0x100 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT AND PUSH1 0x8 SWAP3 SWAP1 SWAP3 SHL PUSH2 0x100 PUSH1 0x1 PUSH1 0xA8 SHL SUB AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH32 0xBC1F3DAF62009283F8F2078BC45883E8DBB3F415BC325829CE38ECE15B5F8990 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0xA SLOAD AND SWAP3 DUP1 LOG3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x10DB185A5B481B9BDD08199BDD5B99 PUSH1 0x8A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP1 PUSH2 0x2101 DUP3 PUSH2 0x1A8F JUMP JUMPDEST PUSH2 0x210E PUSH1 0x40 MLOAD SWAP2 DUP3 PUSH2 0x1A6E JUMP JUMPDEST DUP3 DUP2 MSTORE DUP1 SWAP3 PUSH2 0x211F PUSH1 0x1F NOT SWAP2 PUSH2 0x1A8F JUMP JUMPDEST ADD SWAP1 PUSH1 0x20 CALLDATASIZE SWAP2 ADD CALLDATACOPY JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x25 COINBASE PUSH21 0xC0DAF1A0B0624F339D56A186B9BDF69240C2DA6083 ADDRESS DUP3 0xD7 PUSH7 0x8B1F453164736F PUSH13 0x63430008130033000000000000 ","sourceMap":"388:14037:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1897:20;388:14037;;;-1:-1:-1;;;;;388:14037:3;;;;;;;;;;;;;;;;;;-1:-1:-1;;388:14037:3;;;;;;-1:-1:-1;;;;;388:14037:3;;;;;;;;;;;;;;;1310:41;388:14037;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1547:31:3;388:14037;;;;;;;;;;;;;;;;;;;;;;;;;2024:37;388:14037;;;;;;;;;;;;;;;;;-1:-1:-1;;388:14037:3;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;2681:8;388:14037;;;;-1:-1:-1;;;;;388:14037:3;;;;;2667:10;:22;388:14037;;;;;;;;;;;7494:23;388:14037;;;7494:23;388:14037;;7494:23;388:14037;;;;;7494:48;;;7486:75;7702:28;7494:48;;7486:75;:::i;:::-;388:14037;;;;;;7666:26;388:14037;;;7628:15;:28;7494:23;7628:15;;:28;;388:14037;;;;;;;;;;;;;;;;7628:28;388:14037;;-1:-1:-1;;388:14037:3;;;;;;;;;;;;7666:26;388:14037;;-1:-1:-1;;388:14037:3;;;;;;;;;;;;7702:28;7740:23;;;;388:14037;;;;;;;;;;;;7923:20;388:14037;;;;;;7910:33;;:59;;;388:14037;7906:583;;;8009:18;;;;;;;;;;:::i;:::-;8512:28;;;;388:14037;;7906:583;388:14037;;;;;;;;;;;;-1:-1:-1;8094:395:3;388:14037;;;;;;;;;8249:51;388:14037;;;;;;;2681:8;8215:15;8195:17;;388:14037;;;;;;;;;;;;;;;;8249:51;7906:583;;8094:395;8400:25;;;7923:20;8400:25;;;388:14037;;;;;;;;;;10740:26;388:14037;;;;;;;;10835:23;7494;388:14037;;;10809:23;388:14037;;;;;;;;10897:14;388:14037;;;7494:23;388:14037;;7740:23;388:14037;;;;;;;;;;;;10897:190;;388:14037;10897:190;;388:14037;-1:-1:-1;;;;;388:14037:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10897:190;;;;;;;;;;8094:395;388:14037;;;;;;;;;;;7906:583;;10897:190;;;;;;;;;;;;;;;:::i;:::-;;;388:14037;;;;;;;10897:190;;388:14037;;;;10897:190;;;;;;388:14037;;;;;;;;;;;;-1:-1:-1;;;388:14037:3;;;;;;;;;;;;;-1:-1:-1;;;388:14037:3;;;;;;;7910:59;7947:22;;;;7910:59;;388:14037;-1:-1:-1;;;388:14037:3;;;;;;;;;;;-1:-1:-1;;;388:14037:3;;;;;;;;;;;;-1:-1:-1;;;388:14037:3;;;;;;;;;;;;;;;;;;-1:-1:-1;;388:14037:3;;;;;;-1:-1:-1;;;;;388:14037:3;;;;;;;;;2555:42;388:14037;2577:5;388:14037;;2563:10;:19;2555:42;:::i;:::-;388:14037;;;4602:9;388:14037;;;;;;;;;;;;;;4602:9;388:14037;;;;;;;-1:-1:-1;;388:14037:3;;;;4788:3;388:14037;;;4760:26;;;;;;4811:18;;;;;:::i;:::-;388:14037;;;;;;;4811:31;4807:249;;4788:3;;;;;:::i;:::-;4748:10;;4807:249;388:14037;;-1:-1:-1;388:14037:3;-1:-1:-1;;388:14037:3;;;;;;;;;;4936:43;4915:18;4936:43;;4915:64;4936:43;;:::i;:::-;388:14037;;;;;;;4915:18;;:::i;:::-;:64;388:14037;;;;;;;;;;;;;;;;;;;;;;;;;;4915:64;388:14037;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;-1:-1:-1;;;388:14037:3;;;;;;;;;-1:-1:-1;;;388:14037:3;;;;;;;;4760:26;;;;;;388:14037;;;;;-1:-1:-1;;;388:14037:3;;;;;;;;;;;;-1:-1:-1;;;388:14037:3;;;;;;;;;;;;;;;;;;-1:-1:-1;;388:14037:3;;;;;;;;;;;;;;;;:::i;:::-;2577:5;388:14037;;2555:42;2563:10;-1:-1:-1;;;;;388:14037:3;;2563:19;2555:42;:::i;:::-;388:14037;;;-1:-1:-1;388:14037:3;;;;;;;;;;;;;;;;;;;;;;;;;;2577:5;388:14037;;;;;;-1:-1:-1;;;388:14037:3;;;;;;;;;;;;-1:-1:-1;;;388:14037:3;;;;;;;;;;;;;;-1:-1:-1;;388:14037:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;388:14037:3;;;;;;;;;;;;;;;;;1177:39;;388:14037;;;;;;;1177:39;;;;388:14037;;1177:39;388:14037;1177:39;;;:::i;:::-;;;;;388:14037;1177:39;;;;388:14037;;1177:39;;;388:14037;1177:39;388:14037;;1177:39;;388:14037;1177:39;;;;;388:14037;1177:39;;388:14037;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1494:47;388:14037;;;-1:-1:-1;;;;;388:14037:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;388:14037:3;;;;;;2788:10;388:14037;;2778:9;388:14037;;2770:47;388:14037;;;;;;2770:47;:::i;:::-;388:14037;;;;;;;;;;8848:12;;;388:14037;;8848:12;388:14037;;;;;9029:7;8848:39;;8840:66;2778:9;8916:70;8848:39;;8840:66;:::i;:::-;8924:22;;388:14037;;;-1:-1:-1;;;;;388:14037:3;2788:10;8924:36;8916:70;:::i;:::-;388:14037;;9029:7;;:::i;:::-;388:14037;;;-1:-1:-1;;;388:14037:3;;;;;;;;;;;;;;;;;;;;;2788:10;388:14037;;2778:9;388:14037;;;;;2770:47;388:14037;;;;;;2770:47;:::i;:::-;388:14037;;;13194:17;13302:1;13305:15;;;;;;13547:20;;;;:::i;:::-;13577:17;;13659:13;13302:1;13674:15;;;;;;388:14037;;;;;;;:::i;:::-;;;;13691:3;388:14037;;;;;;13345:16;388:14037;;;;;13714:16;388:14037;;;;;;;;13714:43;;:104;;;13691:3;13710:187;;13691:3;;;;:::i;:::-;13659:13;;13710:187;13838:19;13875:7;13838:19;;;13691:3;13838:19;;;:::i;:::-;388:14037;13875:7;:::i;:::-;13710:187;;;;;13714:104;-1:-1:-1;388:14037:3;;;;;;;;;13778:26;;388:14037;;;-1:-1:-1;;;;;388:14037:3;2788:10;13778:40;13714:104;;13322:3;388:14037;;;;;;13345:16;388:14037;;;;;13345:16;388:14037;;;;;;;;13345:43;;:104;;;13322:3;13341:150;;13322:3;;;;:::i;:::-;13290:13;;13341:150;13469:7;;13322:3;13469:7;;:::i;:::-;13341:150;;;;;13345:104;-1:-1:-1;388:14037:3;;;;;;;;;13409:26;;388:14037;;;-1:-1:-1;;;;;388:14037:3;2788:10;13409:40;13345:104;;388:14037;-1:-1:-1;;;388:14037:3;;;;;;;;;;;;;;;;;;;;;;;1710:26;388:14037;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;388:14037:3;;;;;;;;;;;;;;;12379:17;388:14037;12493:15;;;;;;12658:20;;;;:::i;:::-;12688:17;;12770:13;388:14037;12785:15;;;;;;388:14037;;;;;;;:::i;12802:3::-;388:14037;;;;;;;;12533:18;388:14037;;;12825:18;388:14037;;12825:27;12821:110;;12802:3;;;;:::i;:::-;12770:13;;12821:110;12872:19;12909:7;12872:19;;;12802:3;12872:19;;;:::i;12909:7::-;12821:110;;;;;12510:3;388:14037;;;;;;;;12533:18;388:14037;;;12533:18;388:14037;;12533:27;12529:73;;12510:3;;;;:::i;:::-;12478:13;;12529:73;12580:7;;12510:3;12580:7;;:::i;:::-;12529:73;;;;;388:14037;;;;;;;-1:-1:-1;;388:14037:3;;;;;;-1:-1:-1;;;;;388:14037:3;;;;;;;;;2555:42;388:14037;2577:5;388:14037;;2563:10;:19;2555:42;:::i;:::-;388:14037;;;4273:9;388:14037;;;;;;;;;;;;4273:9;388:14037;;;;;;;-1:-1:-1;;388:14037:3;;;;;;;-1:-1:-1;;;388:14037:3;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;388:14037:3;;;;;;;;;;;-1:-1:-1;;;388:14037:3;;;;;;;;;;;;-1:-1:-1;;;388:14037:3;;;;;;;;;;;;;;-1:-1:-1;;388:14037:3;;;;;;-1:-1:-1;;;;;388:14037:3;;;;;;;;;2555:42;388:14037;2577:5;388:14037;;2563:10;:19;2555:42;:::i;:::-;-1:-1:-1;;;;;388:14037:3;;3823:39;388:14037;;;3823:39;388:14037;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;388:14037:3;;;;;;;;-1:-1:-1;;;;;388:14037:3;;;;;;;;;;;:::i;:::-;2788:10;388:14037;;2778:9;388:14037;;2770:47;388:14037;;;;;;2770:47;:::i;:::-;388:14037;;;;;;;;;9347:12;;;388:14037;;;;;9347:12;388:14037;;;;;9347:39;388:14037;;9347:39;;9339:66;2778:9;9599:32;9347:39;;;9339:66;:::i;:::-;9423:22;;;388:14037;9415:70;;388:14037;;-1:-1:-1;;;;;388:14037:3;2788:10;9423:36;9415:70;:::i;:::-;388:14037;;;;;;9549:17;9569:15;9549:17;;388:14037;;;;;;;;;;;;;;:::i;:::-;9599:32;;;388:14037;;;-1:-1:-1;;;388:14037:3;;;;;;;;;;;;;;;-1:-1:-1;;388:14037:3;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;388:14037:3;;;;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;-1:-1:-1;;388:14037:3;;;;;;;;;1387:32;;;;;388:14037;1387:32;;;:::i;:::-;388:14037;;;;;;;;;;-1:-1:-1;;;;;388:14037:3;;;;;;;;;;;;;;;;;;1663:41;388:14037;;;;;;;;;;;;;;;;;;;;;;;;;;1946:38;388:14037;;;;;;;;;;;;;;;;;;;;;;;;;1615:42;388:14037;;;;;;;;;;;;;;;-1:-1:-1;;388:14037:3;;;;;;-1:-1:-1;;;;;388:14037:3;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;388:14037:3;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6012:14:3;388:14037;;;-1:-1:-1;;;5997:76:3;;388:14037;;;5997:76;;;388:14037;6062:10;388:14037;;;;;-1:-1:-1;388:14037:3;;-1:-1:-1;388:14037:3;;;;;;;;-1:-1:-1;;;;;388:14037:3;5997:76;;;;;;;;;;;388:14037;;;;;;;6150:13;;;;:::i;:::-;388:14037;;;;;;;;:::i;:::-;;;;;;;6200:530;;388:14037;6062:10;388:14037;6200:530;;388:14037;;6200:530;;388:14037;6200:530;;;388:14037;6412:15;388:14037;6200:530;;388:14037;6200:530;;;;388:14037;6200:530;388:14037;6200:530;;388:14037;6200:530;;;;388:14037;6200:530;;;;388:14037;6200:530;;;;388:14037;6200:530;;;;388:14037;6200:530;;;;388:14037;6200:530;;;;388:14037;6200:530;;;;388:14037;;;;;;;;;;;;;;;;6200:530;;388:14037;;;;;;;;;;;;;;6200:530;;388:14037;;-1:-1:-1;;;;;388:14037:3;;;;;;;;;6200:530;;388:14037;;;-1:-1:-1;;;;;388:14037:3;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6200:530;;;388:14037;;;;-1:-1:-1;;;388:14037:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6200:530;;;;388:14037;6200:530;;388:14037;;;;;;;;6200:530;;;;388:14037;;;;;;;;;;;6200:530;;388:14037;6200:530;;;388:14037;6200:530;;;388:14037;;;;;;;;-1:-1:-1;;388:14037:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6200:530;;;388:14037;6012:14;388:14037;;;6200:530;;;388:14037;;;;;6200:530;;;388:14037;;;;;6200:530;;;388:14037;;;;;;;6200:530;;;;388:14037;-1:-1:-1;;;;;;388:14037:3;;;;;;;;;;;;;;;;-1:-1:-1;;;;;388:14037:3;;;;6012:14;388:14037;;;;;-1:-1:-1;;;;;388:14037:3;6792:61;;;;;388:14037;;;;;;;;;;;;6792:61;;388:14037;;;6792:61;;388:14037;6792:61;;;;;;;388:14037;6792:61;;;388:14037;;;;;6062:10;;388:14037;;6877:46;388:14037;;6877:46;;;388:14037;;;6792:61;;;;:::i;:::-;;;;;388:14037;;;;;;;;;;;;-1:-1:-1;;;388:14037:3;;;;;;;;;;;;;;-1:-1:-1;;;;;388:14037:3;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;388:14037:3;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;388:14037:3;;;;;;;;;;;;;;;-1:-1:-1;;388:14037:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;388:14037:3;;;;;-1:-1:-1;;;388:14037:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;-1:-1:-1;;;388:14037:3;;;;;;;;;;;;-1:-1:-1;388:14037:3;;;;;;;;;;;;-1:-1:-1;;;388:14037:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;388:14037:3;;;;;;;;;;;;-1:-1:-1;;;388:14037:3;;;;;;;5997:76;;;388:14037;5997:76;;388:14037;5997:76;;;;;;388:14037;5997:76;;;:::i;:::-;;;388:14037;;;;;;;;;;;;5997:76;;;;;;-1:-1:-1;5997:76:3;;388:14037;;;-1:-1:-1;;;;;388:14037:3;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1824:23;388:14037;;;-1:-1:-1;;;;;388:14037:3;;;;;;;;;;;;;;;;;;;;;1782:36;388:14037;;;-1:-1:-1;;;;;388:14037:3;;;;;;;;;;;;;;;-1:-1:-1;;388:14037:3;;;;;;-1:-1:-1;;;;;388:14037:3;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6731:14:0;-1:-1:-1;;;;;388:14037:3;6717:10:0;:28;;;6713:109;;388:14037:3;6857:11:0;388:14037:3;;;6857:11:0;:::i;6713:109::-;388:14037:3;;;;6762:53:0;;;;;;6717:10;388:14037:3;6762:53:0;;388:14037:3;;;;;6762:53:0;388:14037:3;;;;;;;;;;;;;;;;;;;;;;;;;;1747:29;388:14037;;;;;;;;-1:-1:-1;;;;;388:14037:3;;;;;;;;;;;;;-1:-1:-1;;388:14037:3;;;;;;-1:-1:-1;;;;;388:14037:3;;;;;;;;;2555:42;388:14037;2577:5;388:14037;;2563:10;:19;2555:42;:::i;:::-;-1:-1:-1;;;;;388:14037:3;;4052:20;388:14037;;;4052:20;388:14037;;;;;;;;;;;;;;;;;;;1584:25;388:14037;;;;;;;;;;;-1:-1:-1;;;;;388:14037:3;;;;;;;:::o;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;388:14037:3;;;;;;:::o;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;388:14037:3;;;;;;;:::o;:::-;-1:-1:-1;;;;;388:14037:3;;;;;;;;;:::o;:::-;;;;;;;;;;;;-1:-1:-1;;;;;388:14037:3;;;;;;;;;;;-1:-1:-1;;388:14037:3;;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;388:14037:3;;;;;;;;;;;;;;:::o;:::-;1387:32;388:14037;;;;;;1387:32;-1:-1:-1;388:14037:3;;;;-1:-1:-1;388:14037:3;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;388:14037:3;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:::o;:::-;;;;;-1:-1:-1;388:14037:3;;;;-1:-1:-1;388:14037:3;;-1:-1:-1;388:14037:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;388:14037:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;:::o;:::-;;;-1:-1:-1;;;388:14037:3;;;;;;;;;;;;-1:-1:-1;;;388:14037:3;;;;;;;;-1:-1:-1;;388:14037:3;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;388:14037:3;;;;;;;;;;;;-1:-1:-1;;;388:14037:3;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;388:14037:3;;;;;;;;;;;;-1:-1:-1;;;388:14037:3;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;388:14037:3;;;;;;;;;;;;-1:-1:-1;;;388:14037:3;;;;;;;9797:742;;9896:6;388:14037;;;;;;;;;;;;9922:12;;;388:14037;;;;9937:20;388:14037;;;;;;;9967:17;;;;388:14037;10024:15;10004:17;;;388:14037;;10063:32;388:14037;;;;;;10063:32;9967:17;388:14037;-1:-1:-1;;;;;388:14037:3;;;;10164:369;;9797:742;;;;;;;;;;:::o;10164:369::-;10264:14;;;;388:14037;;10211:77;;;;;388:14037;;;;;;;;;;;;;;;10211:77;;;;;388:14037;;;;;;;;;;10211:77;;;;;;;;10164:369;388:14037;;;10373:14;388:14037;;;;10402:14;;388:14037;10358:68;;;;;388:14037;;;;;;;;;;;;;;;10358:68;;10211:77;10358:68;;388:14037;;;;;10358:68;;;;;;;;;;10164:369;-1:-1:-1;388:14037:3;;;10468:16;388:14037;;;10503:19;;388:14037;10503:19;10164:369;;;;;;;;;;;10358:68;;;;;:::i;:::-;388:14037;;10358:68;;;;388:14037;;;;;;;;10358:68;388:14037;;;10211:77;;;388:14037;10211:77;;;:::i;:::-;;;;;;388:14037;;;;;;;;;10211:77;388:14037;;;;;;;;;;;;;;;;;;:::o;11333:800::-;;-1:-1:-1;388:14037:3;;;11456:17;388:14037;;;;;;11502:11;;;388:14037;;11599:15;388:14037;11599:27;11595:225;;388:14037;;;;;;;;11599:15;388:14037;;;;;;12083:43;388:14037;11938:30;388:14037;;11938:30;:::i;:::-;388:14037;;;;;;;;;;;;12017:32;;388:14037;;-1:-1:-1;;;;;;388:14037:3;11599:15;388:14037;;;;;;;;;;;;-1:-1:-1;;;;;388:14037:3;;;;;;;-1:-1:-1;;;;;388:14037:3;;12083:43;;11333:800::o;388:14037::-;-1:-1:-1;;;388:14037:3;;;;;;;;;-1:-1:-1;;;388:14037:3;;;;;;;;11595:225;-1:-1:-1;11733:5:3;388:14037;;;;;;;;;;;;11698:32;;;388:14037;;-1:-1:-1;;;;;;388:14037:3;;;;;;-1:-1:-1;;;;;388:14037:3;;;;;;;11757:32;-1:-1:-1;;;;;11733:5:3;388:14037;;11757:32;;;11803:7::o;388:14037::-;;;-1:-1:-1;;;388:14037:3;;;;;;;;;;;;-1:-1:-1;;;388:14037:3;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;:::o"},"methodIdentifiers":{"activeReviewers(uint256)":"5aad00d6","addReviewer(address)":"73a82b5f","admin()":"f851a440","aiOracle()":"31b221cd","autoApproveThreshold()":"54edb3a0","autoRejectThreshold()":"e456c58a","claims(uint256)":"a888c2cd","getActiveReviewerCount()":"6ae2a1c9","getClaim(uint256)":"5aef2447","getClaimsForReview()":"8c50fa1f","getUserClaims(address)":"7bcb4a64","nextClaimId()":"a0021cf1","numWords()":"7ccfd7fc","payoutManager()":"3083a8e3","policyRegistry()":"1c4dd7d0","rawFulfillRandomWords(uint256,uint256[])":"1fe543e3","removeReviewer(address)":"c9442dac","reviewerApproveClaim(uint256,uint256)":"9b052153","reviewerRejectClaim(uint256,string)":"5eb0ec39","reviewers(address)":"f7cbb1b2","setAIOracle(address)":"1aa632b3","setPayoutManager(address)":"7181896f","setThresholds(uint8,uint8)":"bfce86b3","submitAIAnalysis(uint256,uint8,uint8,uint8,uint256)":"e277c881","submitClaim(uint256,string,string[])":"324bc2a9","vrfCallbackGasLimit()":"3b7ed734","vrfCoordinator()":"a3e56fa8","vrfKeyHash()":"041d443e","vrfRequestConfirmations()":"598bc486","vrfRequestToClaim(uint256)":"b11b1d76","vrfSubscriptionId()":"ed647d21"}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_vrfCoordinator\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"_keyHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"_subscriptionId\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"_policyRegistry\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"have\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"want\",\"type\":\"address\"}],\"name\":\"OnlyCoordinatorCanFulfill\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"claimId\",\"type\":\"uint256\"}],\"name\":\"AIAnalysisReceived\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"claimId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"payout\",\"type\":\"uint256\"}],\"name\":\"ClaimApproved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"claimId\",\"type\":\"uint256\"}],\"name\":\"ClaimPaid\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"claimId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"reason\",\"type\":\"string\"}],\"name\":\"ClaimRejected\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"claimId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"policyId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"claimant\",\"type\":\"address\"}],\"name\":\"ClaimSubmitted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"claimId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"reviewer\",\"type\":\"address\"}],\"name\":\"ReviewerAssigned\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"activeReviewers\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_reviewer\",\"type\":\"address\"}],\"name\":\"addReviewer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"admin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"aiOracle\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"autoApproveThreshold\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"autoRejectThreshold\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"claims\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"claimId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"policyId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"claimant\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"enum ClaimsProcessor.ClaimStatus\",\"name\":\"status\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"claimType\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"severity\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"fraudRisk\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"recommendedPayout\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"finalPayout\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"processedAt\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"requiresHumanReview\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"assignedReviewer\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getActiveReviewerCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_claimId\",\"type\":\"uint256\"}],\"name\":\"getClaim\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"claimId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"policyId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"claimant\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"string[]\",\"name\":\"evidenceHashes\",\"type\":\"string[]\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"enum ClaimsProcessor.ClaimStatus\",\"name\":\"status\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"claimType\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"severity\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"fraudRisk\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"recommendedPayout\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"finalPayout\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"processedAt\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"requiresHumanReview\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"assignedReviewer\",\"type\":\"address\"}],\"internalType\":\"struct ClaimsProcessor.Claim\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getClaimsForReview\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"getUserClaims\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nextClaimId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"numWords\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"payoutManager\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"policyRegistry\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"requestId\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"randomWords\",\"type\":\"uint256[]\"}],\"name\":\"rawFulfillRandomWords\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_reviewer\",\"type\":\"address\"}],\"name\":\"removeReviewer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_claimId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_payout\",\"type\":\"uint256\"}],\"name\":\"reviewerApproveClaim\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_claimId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_reason\",\"type\":\"string\"}],\"name\":\"reviewerRejectClaim\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"reviewers\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_aiOracle\",\"type\":\"address\"}],\"name\":\"setAIOracle\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_payoutManager\",\"type\":\"address\"}],\"name\":\"setPayoutManager\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"_autoApprove\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"_autoReject\",\"type\":\"uint8\"}],\"name\":\"setThresholds\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_claimId\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"_claimType\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"_severity\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"_fraudRisk\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"_recommendedPayout\",\"type\":\"uint256\"}],\"name\":\"submitAIAnalysis\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_policyId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_description\",\"type\":\"string\"},{\"internalType\":\"string[]\",\"name\":\"_evidenceHashes\",\"type\":\"string[]\"}],\"name\":\"submitClaim\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"vrfCallbackGasLimit\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"vrfCoordinator\",\"outputs\":[{\"internalType\":\"contract VRFCoordinatorV2Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"vrfKeyHash\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"vrfRequestConfirmations\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"vrfRequestToClaim\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"vrfSubscriptionId\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Handles claim submissions, AI analysis, and reviewer selection using Chainlink VRF\",\"kind\":\"dev\",\"methods\":{\"addReviewer(address)\":{\"details\":\"Adds a reviewer to the system\",\"params\":{\"_reviewer\":\"Address of the reviewer\"}},\"constructor\":{\"details\":\"Constructor for the ClaimsProcessor contract\",\"params\":{\"_keyHash\":\"KeyHash for VRF\",\"_policyRegistry\":\"Address of the PolicyRegistry contract\",\"_subscriptionId\":\"VRF subscription ID\",\"_vrfCoordinator\":\"Address of the VRF Coordinator\"}},\"getActiveReviewerCount()\":{\"details\":\"Gets the number of active reviewers\",\"returns\":{\"_0\":\"uint256 Number of active reviewers\"}},\"getClaim(uint256)\":{\"details\":\"Gets the claim details\",\"params\":{\"_claimId\":\"ID of the claim\"},\"returns\":{\"_0\":\"Claim details\"}},\"getClaimsForReview()\":{\"details\":\"Gets claims that require human review\",\"returns\":{\"_0\":\"claimIds Array of claim IDs\"}},\"getUserClaims(address)\":{\"details\":\"Gets all claims submitted by a user\",\"params\":{\"_user\":\"Address of the user\"},\"returns\":{\"_0\":\"claimIds Array of claim IDs\"}},\"removeReviewer(address)\":{\"details\":\"Removes a reviewer from the system\",\"params\":{\"_reviewer\":\"Address of the reviewer\"}},\"reviewerApproveClaim(uint256,uint256)\":{\"details\":\"Reviewer approves a claim\",\"params\":{\"_claimId\":\"ID of the claim\",\"_payout\":\"Approved payout amount\"}},\"reviewerRejectClaim(uint256,string)\":{\"details\":\"Reviewer rejects a claim\",\"params\":{\"_claimId\":\"ID of the claim\",\"_reason\":\"Reason for rejection\"}},\"setAIOracle(address)\":{\"details\":\"Sets the AI Oracle address\",\"params\":{\"_aiOracle\":\"Address of the AI Oracle\"}},\"setPayoutManager(address)\":{\"details\":\"Sets the payout manager address\",\"params\":{\"_payoutManager\":\"Address of the PayoutManager contract\"}},\"setThresholds(uint8,uint8)\":{\"details\":\"Sets the auto-approve and auto-reject thresholds\",\"params\":{\"_autoApprove\":\"Auto-approve threshold\",\"_autoReject\":\"Auto-reject threshold\"}},\"submitAIAnalysis(uint256,uint8,uint8,uint8,uint256)\":{\"details\":\"Submits AI analysis results for a claim\",\"params\":{\"_claimId\":\"ID of the claim\",\"_claimType\":\"Type of claim (0-3)\",\"_fraudRisk\":\"Fraud risk percentage (0-100)\",\"_recommendedPayout\":\"Recommended payout amount\",\"_severity\":\"Severity of the claim (1-10)\"}},\"submitClaim(uint256,string,string[])\":{\"details\":\"Submits a new insurance claim\",\"params\":{\"_description\":\"Description of the claim\",\"_evidenceHashes\":\"IPFS hashes of the evidence files\",\"_policyId\":\"ID of the policy\"},\"returns\":{\"_0\":\"claimId ID of the submitted claim\"}}},\"title\":\"ClaimsProcessor\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/ClaimsProcessor.sol\":\"ClaimsProcessor\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@chainlink/contracts/src/v0.8/VRFConsumerBaseV2.sol\":{\"keccak256\":\"0x3d709a5e0f1f9b8841172b10ba8af785dd51a13eda9fc395723a706e51329904\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://038eef992d813c20737fbe94e3a36e5d541d1aa736158dd2a43dd5b840b8c360\",\"dweb:/ipfs/QmZWJ25Yr1sUSAsfJRKvTMDmGkmy63hHhB495CUL1bpNz4\"]},\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"keccak256\":\"0x6e6e4b0835904509406b070ee173b5bc8f677c19421b76be38aea3b1b3d30846\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3beaa37ee61e4ab615e250fbf01601ae481de843fd0ef55e6b44fd9d5fff8a7\",\"dweb:/ipfs/QmeZUVwd26LzK4Mfp8Zba5JbQNkZFfTzFu1A6FVMMZDg9c\"]},\"@chainlink/contracts/src/v0.8/interfaces/VRFCoordinatorV2Interface.sol\":{\"keccak256\":\"0x54cdc97717cbae1a51a5500c8ee4875ebf056c95b54d2155a9544a79cb4f4494\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4bd670a55aacc0ab372835cd7e21b487f9fb69d8c6375234b68862a58f3b1153\",\"dweb:/ipfs/QmRMdB9TFLgG1LXg9VSTWbZZ1yf3uY1RY3pPkoMN23JfZk\"]},\"contracts/ClaimsProcessor.sol\":{\"keccak256\":\"0xb8ae211856d9658c9192c87183b4e49ecdc53c6ab3dbecbcd040c7808ca7a625\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9119c9ff88542eadec93f14ddd5f49d34e69e4166a3d6a50c5f8e68813cbfd95\",\"dweb:/ipfs/QmPLUKUo8TeE7NeZF7Zqg6CKHtrYLcnj9mDR4QvxaoCi3c\"]},\"contracts/PayoutManager.sol\":{\"keccak256\":\"0x358ee342b75e8c129aaaffb8f7b89701c9495f3d2573ec76a25877388472bc21\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e4f3bf7c026fa029858ffa7f29fc3821ede642e0593e2f6d076149a8ebd624f1\",\"dweb:/ipfs/QmPtxjYNWRrfHS2xVorVgkxKEX1SQ8958KrTGYVsDFeaYS\"]},\"contracts/PolicyRegistry.sol\":{\"keccak256\":\"0xe231440c1c6544bc5f4492a6a25d9696eacdfe0f9555e7aa20ed485d78069a80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0f5b5341cb27aeb5afb29bef82f1c3e8785107fd564c6892d168457f597f3feb\",\"dweb:/ipfs/QmVivAuQa7ymmsPdFSZXUUQpLnDNUE92ZG16JtuRtUrBFg\"]}},\"version\":1}"}},"contracts/PayoutManager.sol":{"PayoutManager":{"abi":[{"inputs":[{"internalType":"address","name":"_claimsProcessor","type":"address"},{"internalType":"address","name":"_priceFeed","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"depositor","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"FundsDeposited","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"recipient","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"FundsWithdrawn","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"claimId","type":"uint256"},{"indexed":true,"internalType":"address","name":"recipient","type":"address"},{"indexed":false,"internalType":"uint256","name":"usdAmount","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"avaxAmount","type":"uint256"}],"name":"PayoutProcessed","type":"event"},{"inputs":[],"name":"admin","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"availableFunds","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"balances","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"claimsProcessor","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_usdAmount","type":"uint256"}],"name":"convertUSDToAVAX","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"deposit","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[],"name":"getContractBalance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_claimId","type":"uint256"}],"name":"getPayoutDetails","outputs":[{"components":[{"internalType":"uint256","name":"claimId","type":"uint256"},{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"usdAmount","type":"uint256"},{"internalType":"uint256","name":"avaxAmount","type":"uint256"},{"internalType":"uint256","name":"timestamp","type":"uint256"},{"internalType":"bool","name":"processed","type":"bool"},{"internalType":"bool","name":"withdrawn","type":"bool"}],"internalType":"struct PayoutManager.Payout","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_user","type":"address"}],"name":"getUserBalance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"payouts","outputs":[{"internalType":"uint256","name":"claimId","type":"uint256"},{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"usdAmount","type":"uint256"},{"internalType":"uint256","name":"avaxAmount","type":"uint256"},{"internalType":"uint256","name":"timestamp","type":"uint256"},{"internalType":"bool","name":"processed","type":"bool"},{"internalType":"bool","name":"withdrawn","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"priceFeed","outputs":[{"internalType":"contract AggregatorV3Interface","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_claimId","type":"uint256"},{"internalType":"address","name":"_recipient","type":"address"},{"internalType":"uint256","name":"_usdAmount","type":"uint256"}],"name":"processPayout","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_priceFeed","type":"address"}],"name":"setPriceFeed","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_treasury","type":"address"}],"name":"setTreasury","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"totalPayouts","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalWithdrawn","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"treasury","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"withdraw","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_amount","type":"uint256"}],"name":"withdrawToTreasury","outputs":[],"stateMutability":"nonpayable","type":"function"},{"stateMutability":"payable","type":"receive"}],"evm":{"bytecode":{"functionDebugData":{"abi_decode_address_fromMemory":{"entryPoint":182,"id":null,"parameterSlots":1,"returnSlots":1}},"generatedSources":[],"linkReferences":{},"object":"60803461009b57601f610c8338819003918201601f19168301916001600160401b038311848410176100a057808492604094855283398101031261009b57610052602061004b836100b6565b92016100b6565b60018060a01b03908160018060a01b03199316836002541617600255168160055416176005553381600354161760035533906004541617600455604051610bb890816100cb8239f35b600080fd5b634e487b7160e01b600052604160045260246000fd5b51906001600160a01b038216820361009b5756fe608060408181526004918236101561002a575b505050361561002057600080fd5b610028610b45565b005b600092833560e01c9182631faa0414146107c75750816327e235e31461061b57816329652e861461074f5781633ccfd60b146106915781634089b1701461067257816346fcff4c14610653578163477348921461061b5781634b319713146105fc578163536a7e4f146105d357816361d027b3146105ab5781636f9fb98a14610590578163724e78da14610540578163741bef1a14610517578163abae70c51461042a578163c0348b0714610403578163ca4c334614610199578163d0e30db01461017f578163f0f4426014610136575063f851a4401461010b5780610012565b3461013257816003193601126101325760035490516001600160a01b039091168152602090f35b5080fd5b839034610132576020366003190112610132576101516108b7565b6003546001600160a01b03919061016b90831633146108d2565b82546001600160a01b031916911617905580f35b838060031936011261019657610193610b45565b80f35b80fd5b919050346103ff5760603660031901126103ff576024356001600160a01b0381811693803593928590036103fb5760443591806002541633036103c0578487526020908782528488205461037d57831561033a576101f6846109a6565b9283600854106103025786600587969594938b937fb4aeb9fb59644d1c26001b986295cde5bbfae34be7c5240fbccf4c37308e20fe9951916102378361090b565b8483528683018d81528a84018a815260608501918a835260808601934285528d60a088019a60018c5260c089019a818c528152808d522096518755600187019151166bffffffffffffffffffffffff60a01b825416179055516002850155516003840155519082015501915115159060ff61ff0084549251151560081b1692169061ffff191617179055868852600181528388206102d683825461095f565b90556102e482600854610982565b6008556102f38260065461095f565b6006558351928352820152a380f35b855162461bcd60e51b81529081018390526012602482015271496e73756666696369656e742066756e647360701b6044820152606490fd5b845162461bcd60e51b8152808401839052601760248201527f416d6f756e74206d75737420626520706f7369746976650000000000000000006044820152606490fd5b845162461bcd60e51b8152808401839052601860248201527f5061796f757420616c72656164792070726f63657373656400000000000000006044820152606490fd5b835162461bcd60e51b8152602081840152601560248201527427b7363c9031b630b4b6b990383937b1b2b9b9b7b960591b6044820152606490fd5b8580fd5b8280fd5b8284346101965760203660031901126101965750610423602092356109a6565b9051908152f35b9050346103ff5760203660031901126103ff576003548135916001600160a01b039161045990831633146108d2565b6104726104694760065490610982565b6007549061095f565b83116104d457916020917feaff4b37086828766ad3268786972c0cd24259d4c87a80f9d3963a3c3d999b0d936104aa83600854610982565b6008556104c98780808087878754165af16104c3610ac7565b50610b07565b54169351908152a280f35b606490602085519162461bcd60e51b8352820152601760248201527f4578636565647320617661696c61626c652066756e64730000000000000000006044820152fd5b50503461013257816003193601126101325760055490516001600160a01b039091168152602090f35b83346101965760203660031901126101965761055a6108b7565b6003546001600160a01b03919061057490831633146108d2565b166bffffffffffffffffffffffff60a01b600554161760055580f35b50503461013257816003193601126101325751478152602090f35b9050346103ff57826003193601126103ff575490516001600160a01b03909116815260209150f35b50503461013257816003193601126101325760025490516001600160a01b039091168152602090f35b5050346101325781600319360112610132576020906007549051908152f35b5050346101325760203660031901126101325760209181906001600160a01b036106436108b7565b1681526001845220549051908152f35b5050346101325781600319360112610132576020906008549051908152f35b5050346101325781600319360112610132576020906006549051908152f35b919050346103ff57826003193601126103ff573383526001602052808320549182156107145750338352600160205282818120556106d88380808086335af16104c3610ac7565b6106e48260075461095f565b600755519081527feaff4b37086828766ad3268786972c0cd24259d4c87a80f9d3963a3c3d999b0d60203392a280f35b6020606492519162461bcd60e51b835282015260166024820152754e6f2062616c616e636520746f20776974686472617760501b6044820152fd5b919050346103ff5760203660031901126103ff578060ff9160e09484358152806020522080549360018060a01b03600183015416926002830154906005600385015493850154940154948151978852602088015286015260608501526080840152818116151560a084015260081c16151560c0820152f35b90929150346108b35760203660031901126108b3578360e09460c0836107ed869561090b565b82815282602082015282858201528260608201528260808201528260a082015201528335815280602052208151906108248261090b565b80549384835260018060a01b0393846001840154169460208501958652600284015490828601918252600560038601549460608801958652860154956080880196875201549660ff60c060a0890198828b1615158a52019860081c1615158852835198895251166020880152519086015251606085015251608084015251151560a083015251151560c0820152f35b8380fd5b600435906001600160a01b03821682036108cd57565b600080fd5b156108d957565b60405162461bcd60e51b815260206004820152600a60248201526927b7363c9030b236b4b760b11b6044820152606490fd5b60e0810190811067ffffffffffffffff82111761092757604052565b634e487b7160e01b600052604160045260246000fd5b90601f8019910116810190811067ffffffffffffffff82111761092757604052565b9190820180921161096c57565b634e487b7160e01b600052601160045260246000fd5b9190820391821161096c57565b519069ffffffffffffffffffff821682036108cd57565b600554604051633fabe5a360e21b8152919060a090839060049082906001600160a01b03165afa918215610abb57600092610a6d575b506000821315610a3357670de0b6b3a76400009081810291818304149015171561096c5760648202918083046064149015171561096c578115610a1d570490565b634e487b7160e01b600052601260045260246000fd5b60405162461bcd60e51b8152602060048201526012602482015271496e76616c6964207072696365206461746160701b6044820152606490fd5b909160a0823d8211610ab3575b81610a8760a0938361093d565b810103126101965750610a998161098f565b50610aab60806020830151920161098f565b5090386109dc565b3d9150610a7a565b6040513d6000823e3d90fd5b3d15610b02573d9067ffffffffffffffff82116109275760405191610af6601f8201601f19166020018461093d565b82523d6000602084013e565b606090565b15610b0e57565b60405162461bcd60e51b815260206004820152600f60248201526e151c985b9cd9995c8819985a5b1959608a1b6044820152606490fd5b610b513460085461095f565b6008556040513481527f543ba50a5eec5e6178218e364b1d0f396157b3c8fa278522c2cb7fd99407d47460203392a256fea2646970667358221220888ba8a6dd0b865a7a92ae5a69bf327d922cbb27a73bc880d55b0528a44f426c64736f6c63430008130033","opcodes":"PUSH1 0x80 CALLVALUE PUSH2 0x9B JUMPI PUSH1 0x1F PUSH2 0xC83 CODESIZE DUP2 SWAP1 SUB SWAP2 DUP3 ADD PUSH1 0x1F NOT AND DUP4 ADD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP4 GT DUP5 DUP5 LT OR PUSH2 0xA0 JUMPI DUP1 DUP5 SWAP3 PUSH1 0x40 SWAP5 DUP6 MSTORE DUP4 CODECOPY DUP2 ADD SUB SLT PUSH2 0x9B JUMPI PUSH2 0x52 PUSH1 0x20 PUSH2 0x4B DUP4 PUSH2 0xB6 JUMP JUMPDEST SWAP3 ADD PUSH2 0xB6 JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB NOT SWAP4 AND DUP4 PUSH1 0x2 SLOAD AND OR PUSH1 0x2 SSTORE AND DUP2 PUSH1 0x5 SLOAD AND OR PUSH1 0x5 SSTORE CALLER DUP2 PUSH1 0x3 SLOAD AND OR PUSH1 0x3 SSTORE CALLER SWAP1 PUSH1 0x4 SLOAD AND OR PUSH1 0x4 SSTORE PUSH1 0x40 MLOAD PUSH2 0xBB8 SWAP1 DUP2 PUSH2 0xCB DUP3 CODECOPY RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x9B JUMPI JUMP INVALID PUSH1 0x80 PUSH1 0x40 DUP2 DUP2 MSTORE PUSH1 0x4 SWAP2 DUP3 CALLDATASIZE LT ISZERO PUSH2 0x2A JUMPI JUMPDEST POP POP POP CALLDATASIZE ISZERO PUSH2 0x20 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x28 PUSH2 0xB45 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 SWAP3 DUP4 CALLDATALOAD PUSH1 0xE0 SHR SWAP2 DUP3 PUSH4 0x1FAA0414 EQ PUSH2 0x7C7 JUMPI POP DUP2 PUSH4 0x27E235E3 EQ PUSH2 0x61B JUMPI DUP2 PUSH4 0x29652E86 EQ PUSH2 0x74F JUMPI DUP2 PUSH4 0x3CCFD60B EQ PUSH2 0x691 JUMPI DUP2 PUSH4 0x4089B170 EQ PUSH2 0x672 JUMPI DUP2 PUSH4 0x46FCFF4C EQ PUSH2 0x653 JUMPI DUP2 PUSH4 0x47734892 EQ PUSH2 0x61B JUMPI DUP2 PUSH4 0x4B319713 EQ PUSH2 0x5FC JUMPI DUP2 PUSH4 0x536A7E4F EQ PUSH2 0x5D3 JUMPI DUP2 PUSH4 0x61D027B3 EQ PUSH2 0x5AB JUMPI DUP2 PUSH4 0x6F9FB98A EQ PUSH2 0x590 JUMPI DUP2 PUSH4 0x724E78DA EQ PUSH2 0x540 JUMPI DUP2 PUSH4 0x741BEF1A EQ PUSH2 0x517 JUMPI DUP2 PUSH4 0xABAE70C5 EQ PUSH2 0x42A JUMPI DUP2 PUSH4 0xC0348B07 EQ PUSH2 0x403 JUMPI DUP2 PUSH4 0xCA4C3346 EQ PUSH2 0x199 JUMPI DUP2 PUSH4 0xD0E30DB0 EQ PUSH2 0x17F JUMPI DUP2 PUSH4 0xF0F44260 EQ PUSH2 0x136 JUMPI POP PUSH4 0xF851A440 EQ PUSH2 0x10B JUMPI DUP1 PUSH2 0x12 JUMP JUMPDEST CALLVALUE PUSH2 0x132 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x132 JUMPI PUSH1 0x3 SLOAD SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP DUP1 REVERT JUMPDEST DUP4 SWAP1 CALLVALUE PUSH2 0x132 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x132 JUMPI PUSH2 0x151 PUSH2 0x8B7 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 PUSH2 0x16B SWAP1 DUP4 AND CALLER EQ PUSH2 0x8D2 JUMP JUMPDEST DUP3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP2 AND OR SWAP1 SSTORE DUP1 RETURN JUMPDEST DUP4 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x196 JUMPI PUSH2 0x193 PUSH2 0xB45 JUMP JUMPDEST DUP1 RETURN JUMPDEST DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP CALLVALUE PUSH2 0x3FF JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3FF JUMPI PUSH1 0x24 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 DUP2 AND SWAP4 DUP1 CALLDATALOAD SWAP4 SWAP3 DUP6 SWAP1 SUB PUSH2 0x3FB JUMPI PUSH1 0x44 CALLDATALOAD SWAP2 DUP1 PUSH1 0x2 SLOAD AND CALLER SUB PUSH2 0x3C0 JUMPI DUP5 DUP8 MSTORE PUSH1 0x20 SWAP1 DUP8 DUP3 MSTORE DUP5 DUP9 KECCAK256 SLOAD PUSH2 0x37D JUMPI DUP4 ISZERO PUSH2 0x33A JUMPI PUSH2 0x1F6 DUP5 PUSH2 0x9A6 JUMP JUMPDEST SWAP3 DUP4 PUSH1 0x8 SLOAD LT PUSH2 0x302 JUMPI DUP7 PUSH1 0x5 DUP8 SWAP7 SWAP6 SWAP5 SWAP4 DUP12 SWAP4 PUSH32 0xB4AEB9FB59644D1C26001B986295CDE5BBFAE34BE7C5240FBCCF4C37308E20FE SWAP10 MLOAD SWAP2 PUSH2 0x237 DUP4 PUSH2 0x90B JUMP JUMPDEST DUP5 DUP4 MSTORE DUP7 DUP4 ADD DUP14 DUP2 MSTORE DUP11 DUP5 ADD DUP11 DUP2 MSTORE PUSH1 0x60 DUP6 ADD SWAP2 DUP11 DUP4 MSTORE PUSH1 0x80 DUP7 ADD SWAP4 TIMESTAMP DUP6 MSTORE DUP14 PUSH1 0xA0 DUP9 ADD SWAP11 PUSH1 0x1 DUP13 MSTORE PUSH1 0xC0 DUP10 ADD SWAP11 DUP2 DUP13 MSTORE DUP2 MSTORE DUP1 DUP14 MSTORE KECCAK256 SWAP7 MLOAD DUP8 SSTORE PUSH1 0x1 DUP8 ADD SWAP2 MLOAD AND PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0xA0 SHL DUP3 SLOAD AND OR SWAP1 SSTORE MLOAD PUSH1 0x2 DUP6 ADD SSTORE MLOAD PUSH1 0x3 DUP5 ADD SSTORE MLOAD SWAP1 DUP3 ADD SSTORE ADD SWAP2 MLOAD ISZERO ISZERO SWAP1 PUSH1 0xFF PUSH2 0xFF00 DUP5 SLOAD SWAP3 MLOAD ISZERO ISZERO PUSH1 0x8 SHL AND SWAP3 AND SWAP1 PUSH2 0xFFFF NOT AND OR OR SWAP1 SSTORE DUP7 DUP9 MSTORE PUSH1 0x1 DUP2 MSTORE DUP4 DUP9 KECCAK256 PUSH2 0x2D6 DUP4 DUP3 SLOAD PUSH2 0x95F JUMP JUMPDEST SWAP1 SSTORE PUSH2 0x2E4 DUP3 PUSH1 0x8 SLOAD PUSH2 0x982 JUMP JUMPDEST PUSH1 0x8 SSTORE PUSH2 0x2F3 DUP3 PUSH1 0x6 SLOAD PUSH2 0x95F JUMP JUMPDEST PUSH1 0x6 SSTORE DUP4 MLOAD SWAP3 DUP4 MSTORE DUP3 ADD MSTORE LOG3 DUP1 RETURN JUMPDEST DUP6 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE SWAP1 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x496E73756666696369656E742066756E6473 PUSH1 0x70 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST DUP5 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE DUP1 DUP5 ADD DUP4 SWAP1 MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416D6F756E74206D75737420626520706F736974697665000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST DUP5 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE DUP1 DUP5 ADD DUP4 SWAP1 MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5061796F757420616C72656164792070726F6365737365640000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST DUP4 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 DUP2 DUP5 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x27B7363C9031B630B4B6B990383937B1B2B9B9B7B9 PUSH1 0x59 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST DUP6 DUP1 REVERT JUMPDEST DUP3 DUP1 REVERT JUMPDEST DUP3 DUP5 CALLVALUE PUSH2 0x196 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x196 JUMPI POP PUSH2 0x423 PUSH1 0x20 SWAP3 CALLDATALOAD PUSH2 0x9A6 JUMP JUMPDEST SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST SWAP1 POP CALLVALUE PUSH2 0x3FF JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3FF JUMPI PUSH1 0x3 SLOAD DUP2 CALLDATALOAD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 PUSH2 0x459 SWAP1 DUP4 AND CALLER EQ PUSH2 0x8D2 JUMP JUMPDEST PUSH2 0x472 PUSH2 0x469 SELFBALANCE PUSH1 0x6 SLOAD SWAP1 PUSH2 0x982 JUMP JUMPDEST PUSH1 0x7 SLOAD SWAP1 PUSH2 0x95F JUMP JUMPDEST DUP4 GT PUSH2 0x4D4 JUMPI SWAP2 PUSH1 0x20 SWAP2 PUSH32 0xEAFF4B37086828766AD3268786972C0CD24259D4C87A80F9D3963A3C3D999B0D SWAP4 PUSH2 0x4AA DUP4 PUSH1 0x8 SLOAD PUSH2 0x982 JUMP JUMPDEST PUSH1 0x8 SSTORE PUSH2 0x4C9 DUP8 DUP1 DUP1 DUP1 DUP8 DUP8 DUP8 SLOAD AND GAS CALL PUSH2 0x4C3 PUSH2 0xAC7 JUMP JUMPDEST POP PUSH2 0xB07 JUMP JUMPDEST SLOAD AND SWAP4 MLOAD SWAP1 DUP2 MSTORE LOG2 DUP1 RETURN JUMPDEST PUSH1 0x64 SWAP1 PUSH1 0x20 DUP6 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4578636565647320617661696C61626C652066756E6473000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST POP POP CALLVALUE PUSH2 0x132 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x132 JUMPI PUSH1 0x5 SLOAD SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST DUP4 CALLVALUE PUSH2 0x196 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x196 JUMPI PUSH2 0x55A PUSH2 0x8B7 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 PUSH2 0x574 SWAP1 DUP4 AND CALLER EQ PUSH2 0x8D2 JUMP JUMPDEST AND PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0xA0 SHL PUSH1 0x5 SLOAD AND OR PUSH1 0x5 SSTORE DUP1 RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x132 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x132 JUMPI MLOAD SELFBALANCE DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST SWAP1 POP CALLVALUE PUSH2 0x3FF JUMPI DUP3 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x3FF JUMPI SLOAD SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP2 POP RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x132 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x132 JUMPI PUSH1 0x2 SLOAD SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x132 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x132 JUMPI PUSH1 0x20 SWAP1 PUSH1 0x7 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x132 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x132 JUMPI PUSH1 0x20 SWAP2 DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x643 PUSH2 0x8B7 JUMP JUMPDEST AND DUP2 MSTORE PUSH1 0x1 DUP5 MSTORE KECCAK256 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x132 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x132 JUMPI PUSH1 0x20 SWAP1 PUSH1 0x8 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x132 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x132 JUMPI PUSH1 0x20 SWAP1 PUSH1 0x6 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST SWAP2 SWAP1 POP CALLVALUE PUSH2 0x3FF JUMPI DUP3 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x3FF JUMPI CALLER DUP4 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE DUP1 DUP4 KECCAK256 SLOAD SWAP2 DUP3 ISZERO PUSH2 0x714 JUMPI POP CALLER DUP4 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE DUP3 DUP2 DUP2 KECCAK256 SSTORE PUSH2 0x6D8 DUP4 DUP1 DUP1 DUP1 DUP7 CALLER GAS CALL PUSH2 0x4C3 PUSH2 0xAC7 JUMP JUMPDEST PUSH2 0x6E4 DUP3 PUSH1 0x7 SLOAD PUSH2 0x95F JUMP JUMPDEST PUSH1 0x7 SSTORE MLOAD SWAP1 DUP2 MSTORE PUSH32 0xEAFF4B37086828766AD3268786972C0CD24259D4C87A80F9D3963A3C3D999B0D PUSH1 0x20 CALLER SWAP3 LOG2 DUP1 RETURN JUMPDEST PUSH1 0x20 PUSH1 0x64 SWAP3 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x4E6F2062616C616E636520746F207769746864726177 PUSH1 0x50 SHL PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST SWAP2 SWAP1 POP CALLVALUE PUSH2 0x3FF JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3FF JUMPI DUP1 PUSH1 0xFF SWAP2 PUSH1 0xE0 SWAP5 DUP5 CALLDATALOAD DUP2 MSTORE DUP1 PUSH1 0x20 MSTORE KECCAK256 DUP1 SLOAD SWAP4 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x1 DUP4 ADD SLOAD AND SWAP3 PUSH1 0x2 DUP4 ADD SLOAD SWAP1 PUSH1 0x5 PUSH1 0x3 DUP6 ADD SLOAD SWAP4 DUP6 ADD SLOAD SWAP5 ADD SLOAD SWAP5 DUP2 MLOAD SWAP8 DUP9 MSTORE PUSH1 0x20 DUP9 ADD MSTORE DUP7 ADD MSTORE PUSH1 0x60 DUP6 ADD MSTORE PUSH1 0x80 DUP5 ADD MSTORE DUP2 DUP2 AND ISZERO ISZERO PUSH1 0xA0 DUP5 ADD MSTORE PUSH1 0x8 SHR AND ISZERO ISZERO PUSH1 0xC0 DUP3 ADD MSTORE RETURN JUMPDEST SWAP1 SWAP3 SWAP2 POP CALLVALUE PUSH2 0x8B3 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x8B3 JUMPI DUP4 PUSH1 0xE0 SWAP5 PUSH1 0xC0 DUP4 PUSH2 0x7ED DUP7 SWAP6 PUSH2 0x90B JUMP JUMPDEST DUP3 DUP2 MSTORE DUP3 PUSH1 0x20 DUP3 ADD MSTORE DUP3 DUP6 DUP3 ADD MSTORE DUP3 PUSH1 0x60 DUP3 ADD MSTORE DUP3 PUSH1 0x80 DUP3 ADD MSTORE DUP3 PUSH1 0xA0 DUP3 ADD MSTORE ADD MSTORE DUP4 CALLDATALOAD DUP2 MSTORE DUP1 PUSH1 0x20 MSTORE KECCAK256 DUP2 MLOAD SWAP1 PUSH2 0x824 DUP3 PUSH2 0x90B JUMP JUMPDEST DUP1 SLOAD SWAP4 DUP5 DUP4 MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 PUSH1 0x1 DUP5 ADD SLOAD AND SWAP5 PUSH1 0x20 DUP6 ADD SWAP6 DUP7 MSTORE PUSH1 0x2 DUP5 ADD SLOAD SWAP1 DUP3 DUP7 ADD SWAP2 DUP3 MSTORE PUSH1 0x5 PUSH1 0x3 DUP7 ADD SLOAD SWAP5 PUSH1 0x60 DUP9 ADD SWAP6 DUP7 MSTORE DUP7 ADD SLOAD SWAP6 PUSH1 0x80 DUP9 ADD SWAP7 DUP8 MSTORE ADD SLOAD SWAP7 PUSH1 0xFF PUSH1 0xC0 PUSH1 0xA0 DUP10 ADD SWAP9 DUP3 DUP12 AND ISZERO ISZERO DUP11 MSTORE ADD SWAP9 PUSH1 0x8 SHR AND ISZERO ISZERO DUP9 MSTORE DUP4 MLOAD SWAP9 DUP10 MSTORE MLOAD AND PUSH1 0x20 DUP9 ADD MSTORE MLOAD SWAP1 DUP7 ADD MSTORE MLOAD PUSH1 0x60 DUP6 ADD MSTORE MLOAD PUSH1 0x80 DUP5 ADD MSTORE MLOAD ISZERO ISZERO PUSH1 0xA0 DUP4 ADD MSTORE MLOAD ISZERO ISZERO PUSH1 0xC0 DUP3 ADD MSTORE RETURN JUMPDEST DUP4 DUP1 REVERT JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x8CD JUMPI JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST ISZERO PUSH2 0x8D9 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xA PUSH1 0x24 DUP3 ADD MSTORE PUSH10 0x27B7363C9030B236B4B7 PUSH1 0xB1 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0xE0 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x927 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x927 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP2 SWAP1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0x96C JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 SWAP1 DUP3 SUB SWAP2 DUP3 GT PUSH2 0x96C JUMPI JUMP JUMPDEST MLOAD SWAP1 PUSH10 0xFFFFFFFFFFFFFFFFFFFF DUP3 AND DUP3 SUB PUSH2 0x8CD JUMPI JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD PUSH4 0x3FABE5A3 PUSH1 0xE2 SHL DUP2 MSTORE SWAP2 SWAP1 PUSH1 0xA0 SWAP1 DUP4 SWAP1 PUSH1 0x4 SWAP1 DUP3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS STATICCALL SWAP2 DUP3 ISZERO PUSH2 0xABB JUMPI PUSH1 0x0 SWAP3 PUSH2 0xA6D JUMPI JUMPDEST POP PUSH1 0x0 DUP3 SGT ISZERO PUSH2 0xA33 JUMPI PUSH8 0xDE0B6B3A7640000 SWAP1 DUP2 DUP2 MUL SWAP2 DUP2 DUP4 DIV EQ SWAP1 ISZERO OR ISZERO PUSH2 0x96C JUMPI PUSH1 0x64 DUP3 MUL SWAP2 DUP1 DUP4 DIV PUSH1 0x64 EQ SWAP1 ISZERO OR ISZERO PUSH2 0x96C JUMPI DUP2 ISZERO PUSH2 0xA1D JUMPI DIV SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x496E76616C69642070726963652064617461 PUSH1 0x70 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP1 SWAP2 PUSH1 0xA0 DUP3 RETURNDATASIZE DUP3 GT PUSH2 0xAB3 JUMPI JUMPDEST DUP2 PUSH2 0xA87 PUSH1 0xA0 SWAP4 DUP4 PUSH2 0x93D JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x196 JUMPI POP PUSH2 0xA99 DUP2 PUSH2 0x98F JUMP JUMPDEST POP PUSH2 0xAAB PUSH1 0x80 PUSH1 0x20 DUP4 ADD MLOAD SWAP3 ADD PUSH2 0x98F JUMP JUMPDEST POP SWAP1 CODESIZE PUSH2 0x9DC JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0xA7A JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST RETURNDATASIZE ISZERO PUSH2 0xB02 JUMPI RETURNDATASIZE SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0x927 JUMPI PUSH1 0x40 MLOAD SWAP2 PUSH2 0xAF6 PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP5 PUSH2 0x93D JUMP JUMPDEST DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY JUMP JUMPDEST PUSH1 0x60 SWAP1 JUMP JUMPDEST ISZERO PUSH2 0xB0E JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x151C985B9CD9995C8819985A5B1959 PUSH1 0x8A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH2 0xB51 CALLVALUE PUSH1 0x8 SLOAD PUSH2 0x95F JUMP JUMPDEST PUSH1 0x8 SSTORE PUSH1 0x40 MLOAD CALLVALUE DUP2 MSTORE PUSH32 0x543BA50A5EEC5E6178218E364B1D0F396157B3C8FA278522C2CB7FD99407D474 PUSH1 0x20 CALLER SWAP3 LOG2 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP9 DUP12 0xA8 0xA6 0xDD SIGNEXTEND DUP7 GAS PUSH27 0x92AE5A69BF327D922CBB27A73BC880D55B0528A44F426C64736F6C PUSH4 0x43000813 STOP CALLER ","sourceMap":"254:6450:4:-:0;;;;;;;;;;;;;-1:-1:-1;;254:6450:4;;;;-1:-1:-1;;;;;254:6450:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;;;;;;;;;1637:34;254:6450;;;1637:34;254:6450;;;1681:45;254:6450;;;1681:45;254:6450;1744:10;254:6450;1736:18;254:6450;;;1736:18;254:6450;1744:10;254:6450;1764:21;254:6450;;;1764:21;254:6450;;;;;;;;;;;-1:-1:-1;254:6450:4;;;;;;-1:-1:-1;254:6450:4;;;;;-1:-1:-1;254:6450:4;;;;-1:-1:-1;;;;;254:6450:4;;;;;;:::o"},"deployedBytecode":{"functionDebugData":{"abi_decode_address":{"entryPoint":2231,"id":null,"parameterSlots":0,"returnSlots":1},"abi_decode_uint80_fromMemory":{"entryPoint":2447,"id":null,"parameterSlots":1,"returnSlots":1},"checked_add_uint256":{"entryPoint":2399,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_uint256":{"entryPoint":2434,"id":null,"parameterSlots":2,"returnSlots":1},"extract_returndata":{"entryPoint":2759,"id":null,"parameterSlots":0,"returnSlots":1},"finalize_allocation":{"entryPoint":2365,"id":null,"parameterSlots":2,"returnSlots":0},"finalize_allocation_10466":{"entryPoint":2315,"id":null,"parameterSlots":1,"returnSlots":0},"fun":{"entryPoint":2885,"id":1582,"parameterSlots":0,"returnSlots":0},"fun_convertUSDToAVAX":{"entryPoint":2470,"id":1511,"parameterSlots":1,"returnSlots":1},"require_helper_stringliteral_25ad":{"entryPoint":2823,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_519e":{"entryPoint":2258,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"608060408181526004918236101561002a575b505050361561002057600080fd5b610028610b45565b005b600092833560e01c9182631faa0414146107c75750816327e235e31461061b57816329652e861461074f5781633ccfd60b146106915781634089b1701461067257816346fcff4c14610653578163477348921461061b5781634b319713146105fc578163536a7e4f146105d357816361d027b3146105ab5781636f9fb98a14610590578163724e78da14610540578163741bef1a14610517578163abae70c51461042a578163c0348b0714610403578163ca4c334614610199578163d0e30db01461017f578163f0f4426014610136575063f851a4401461010b5780610012565b3461013257816003193601126101325760035490516001600160a01b039091168152602090f35b5080fd5b839034610132576020366003190112610132576101516108b7565b6003546001600160a01b03919061016b90831633146108d2565b82546001600160a01b031916911617905580f35b838060031936011261019657610193610b45565b80f35b80fd5b919050346103ff5760603660031901126103ff576024356001600160a01b0381811693803593928590036103fb5760443591806002541633036103c0578487526020908782528488205461037d57831561033a576101f6846109a6565b9283600854106103025786600587969594938b937fb4aeb9fb59644d1c26001b986295cde5bbfae34be7c5240fbccf4c37308e20fe9951916102378361090b565b8483528683018d81528a84018a815260608501918a835260808601934285528d60a088019a60018c5260c089019a818c528152808d522096518755600187019151166bffffffffffffffffffffffff60a01b825416179055516002850155516003840155519082015501915115159060ff61ff0084549251151560081b1692169061ffff191617179055868852600181528388206102d683825461095f565b90556102e482600854610982565b6008556102f38260065461095f565b6006558351928352820152a380f35b855162461bcd60e51b81529081018390526012602482015271496e73756666696369656e742066756e647360701b6044820152606490fd5b845162461bcd60e51b8152808401839052601760248201527f416d6f756e74206d75737420626520706f7369746976650000000000000000006044820152606490fd5b845162461bcd60e51b8152808401839052601860248201527f5061796f757420616c72656164792070726f63657373656400000000000000006044820152606490fd5b835162461bcd60e51b8152602081840152601560248201527427b7363c9031b630b4b6b990383937b1b2b9b9b7b960591b6044820152606490fd5b8580fd5b8280fd5b8284346101965760203660031901126101965750610423602092356109a6565b9051908152f35b9050346103ff5760203660031901126103ff576003548135916001600160a01b039161045990831633146108d2565b6104726104694760065490610982565b6007549061095f565b83116104d457916020917feaff4b37086828766ad3268786972c0cd24259d4c87a80f9d3963a3c3d999b0d936104aa83600854610982565b6008556104c98780808087878754165af16104c3610ac7565b50610b07565b54169351908152a280f35b606490602085519162461bcd60e51b8352820152601760248201527f4578636565647320617661696c61626c652066756e64730000000000000000006044820152fd5b50503461013257816003193601126101325760055490516001600160a01b039091168152602090f35b83346101965760203660031901126101965761055a6108b7565b6003546001600160a01b03919061057490831633146108d2565b166bffffffffffffffffffffffff60a01b600554161760055580f35b50503461013257816003193601126101325751478152602090f35b9050346103ff57826003193601126103ff575490516001600160a01b03909116815260209150f35b50503461013257816003193601126101325760025490516001600160a01b039091168152602090f35b5050346101325781600319360112610132576020906007549051908152f35b5050346101325760203660031901126101325760209181906001600160a01b036106436108b7565b1681526001845220549051908152f35b5050346101325781600319360112610132576020906008549051908152f35b5050346101325781600319360112610132576020906006549051908152f35b919050346103ff57826003193601126103ff573383526001602052808320549182156107145750338352600160205282818120556106d88380808086335af16104c3610ac7565b6106e48260075461095f565b600755519081527feaff4b37086828766ad3268786972c0cd24259d4c87a80f9d3963a3c3d999b0d60203392a280f35b6020606492519162461bcd60e51b835282015260166024820152754e6f2062616c616e636520746f20776974686472617760501b6044820152fd5b919050346103ff5760203660031901126103ff578060ff9160e09484358152806020522080549360018060a01b03600183015416926002830154906005600385015493850154940154948151978852602088015286015260608501526080840152818116151560a084015260081c16151560c0820152f35b90929150346108b35760203660031901126108b3578360e09460c0836107ed869561090b565b82815282602082015282858201528260608201528260808201528260a082015201528335815280602052208151906108248261090b565b80549384835260018060a01b0393846001840154169460208501958652600284015490828601918252600560038601549460608801958652860154956080880196875201549660ff60c060a0890198828b1615158a52019860081c1615158852835198895251166020880152519086015251606085015251608084015251151560a083015251151560c0820152f35b8380fd5b600435906001600160a01b03821682036108cd57565b600080fd5b156108d957565b60405162461bcd60e51b815260206004820152600a60248201526927b7363c9030b236b4b760b11b6044820152606490fd5b60e0810190811067ffffffffffffffff82111761092757604052565b634e487b7160e01b600052604160045260246000fd5b90601f8019910116810190811067ffffffffffffffff82111761092757604052565b9190820180921161096c57565b634e487b7160e01b600052601160045260246000fd5b9190820391821161096c57565b519069ffffffffffffffffffff821682036108cd57565b600554604051633fabe5a360e21b8152919060a090839060049082906001600160a01b03165afa918215610abb57600092610a6d575b506000821315610a3357670de0b6b3a76400009081810291818304149015171561096c5760648202918083046064149015171561096c578115610a1d570490565b634e487b7160e01b600052601260045260246000fd5b60405162461bcd60e51b8152602060048201526012602482015271496e76616c6964207072696365206461746160701b6044820152606490fd5b909160a0823d8211610ab3575b81610a8760a0938361093d565b810103126101965750610a998161098f565b50610aab60806020830151920161098f565b5090386109dc565b3d9150610a7a565b6040513d6000823e3d90fd5b3d15610b02573d9067ffffffffffffffff82116109275760405191610af6601f8201601f19166020018461093d565b82523d6000602084013e565b606090565b15610b0e57565b60405162461bcd60e51b815260206004820152600f60248201526e151c985b9cd9995c8819985a5b1959608a1b6044820152606490fd5b610b513460085461095f565b6008556040513481527f543ba50a5eec5e6178218e364b1d0f396157b3c8fa278522c2cb7fd99407d47460203392a256fea2646970667358221220888ba8a6dd0b865a7a92ae5a69bf327d922cbb27a73bc880d55b0528a44f426c64736f6c63430008130033","opcodes":"PUSH1 0x80 PUSH1 0x40 DUP2 DUP2 MSTORE PUSH1 0x4 SWAP2 DUP3 CALLDATASIZE LT ISZERO PUSH2 0x2A JUMPI JUMPDEST POP POP POP CALLDATASIZE ISZERO PUSH2 0x20 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x28 PUSH2 0xB45 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 SWAP3 DUP4 CALLDATALOAD PUSH1 0xE0 SHR SWAP2 DUP3 PUSH4 0x1FAA0414 EQ PUSH2 0x7C7 JUMPI POP DUP2 PUSH4 0x27E235E3 EQ PUSH2 0x61B JUMPI DUP2 PUSH4 0x29652E86 EQ PUSH2 0x74F JUMPI DUP2 PUSH4 0x3CCFD60B EQ PUSH2 0x691 JUMPI DUP2 PUSH4 0x4089B170 EQ PUSH2 0x672 JUMPI DUP2 PUSH4 0x46FCFF4C EQ PUSH2 0x653 JUMPI DUP2 PUSH4 0x47734892 EQ PUSH2 0x61B JUMPI DUP2 PUSH4 0x4B319713 EQ PUSH2 0x5FC JUMPI DUP2 PUSH4 0x536A7E4F EQ PUSH2 0x5D3 JUMPI DUP2 PUSH4 0x61D027B3 EQ PUSH2 0x5AB JUMPI DUP2 PUSH4 0x6F9FB98A EQ PUSH2 0x590 JUMPI DUP2 PUSH4 0x724E78DA EQ PUSH2 0x540 JUMPI DUP2 PUSH4 0x741BEF1A EQ PUSH2 0x517 JUMPI DUP2 PUSH4 0xABAE70C5 EQ PUSH2 0x42A JUMPI DUP2 PUSH4 0xC0348B07 EQ PUSH2 0x403 JUMPI DUP2 PUSH4 0xCA4C3346 EQ PUSH2 0x199 JUMPI DUP2 PUSH4 0xD0E30DB0 EQ PUSH2 0x17F JUMPI DUP2 PUSH4 0xF0F44260 EQ PUSH2 0x136 JUMPI POP PUSH4 0xF851A440 EQ PUSH2 0x10B JUMPI DUP1 PUSH2 0x12 JUMP JUMPDEST CALLVALUE PUSH2 0x132 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x132 JUMPI PUSH1 0x3 SLOAD SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP DUP1 REVERT JUMPDEST DUP4 SWAP1 CALLVALUE PUSH2 0x132 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x132 JUMPI PUSH2 0x151 PUSH2 0x8B7 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 PUSH2 0x16B SWAP1 DUP4 AND CALLER EQ PUSH2 0x8D2 JUMP JUMPDEST DUP3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP2 AND OR SWAP1 SSTORE DUP1 RETURN JUMPDEST DUP4 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x196 JUMPI PUSH2 0x193 PUSH2 0xB45 JUMP JUMPDEST DUP1 RETURN JUMPDEST DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP CALLVALUE PUSH2 0x3FF JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3FF JUMPI PUSH1 0x24 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 DUP2 AND SWAP4 DUP1 CALLDATALOAD SWAP4 SWAP3 DUP6 SWAP1 SUB PUSH2 0x3FB JUMPI PUSH1 0x44 CALLDATALOAD SWAP2 DUP1 PUSH1 0x2 SLOAD AND CALLER SUB PUSH2 0x3C0 JUMPI DUP5 DUP8 MSTORE PUSH1 0x20 SWAP1 DUP8 DUP3 MSTORE DUP5 DUP9 KECCAK256 SLOAD PUSH2 0x37D JUMPI DUP4 ISZERO PUSH2 0x33A JUMPI PUSH2 0x1F6 DUP5 PUSH2 0x9A6 JUMP JUMPDEST SWAP3 DUP4 PUSH1 0x8 SLOAD LT PUSH2 0x302 JUMPI DUP7 PUSH1 0x5 DUP8 SWAP7 SWAP6 SWAP5 SWAP4 DUP12 SWAP4 PUSH32 0xB4AEB9FB59644D1C26001B986295CDE5BBFAE34BE7C5240FBCCF4C37308E20FE SWAP10 MLOAD SWAP2 PUSH2 0x237 DUP4 PUSH2 0x90B JUMP JUMPDEST DUP5 DUP4 MSTORE DUP7 DUP4 ADD DUP14 DUP2 MSTORE DUP11 DUP5 ADD DUP11 DUP2 MSTORE PUSH1 0x60 DUP6 ADD SWAP2 DUP11 DUP4 MSTORE PUSH1 0x80 DUP7 ADD SWAP4 TIMESTAMP DUP6 MSTORE DUP14 PUSH1 0xA0 DUP9 ADD SWAP11 PUSH1 0x1 DUP13 MSTORE PUSH1 0xC0 DUP10 ADD SWAP11 DUP2 DUP13 MSTORE DUP2 MSTORE DUP1 DUP14 MSTORE KECCAK256 SWAP7 MLOAD DUP8 SSTORE PUSH1 0x1 DUP8 ADD SWAP2 MLOAD AND PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0xA0 SHL DUP3 SLOAD AND OR SWAP1 SSTORE MLOAD PUSH1 0x2 DUP6 ADD SSTORE MLOAD PUSH1 0x3 DUP5 ADD SSTORE MLOAD SWAP1 DUP3 ADD SSTORE ADD SWAP2 MLOAD ISZERO ISZERO SWAP1 PUSH1 0xFF PUSH2 0xFF00 DUP5 SLOAD SWAP3 MLOAD ISZERO ISZERO PUSH1 0x8 SHL AND SWAP3 AND SWAP1 PUSH2 0xFFFF NOT AND OR OR SWAP1 SSTORE DUP7 DUP9 MSTORE PUSH1 0x1 DUP2 MSTORE DUP4 DUP9 KECCAK256 PUSH2 0x2D6 DUP4 DUP3 SLOAD PUSH2 0x95F JUMP JUMPDEST SWAP1 SSTORE PUSH2 0x2E4 DUP3 PUSH1 0x8 SLOAD PUSH2 0x982 JUMP JUMPDEST PUSH1 0x8 SSTORE PUSH2 0x2F3 DUP3 PUSH1 0x6 SLOAD PUSH2 0x95F JUMP JUMPDEST PUSH1 0x6 SSTORE DUP4 MLOAD SWAP3 DUP4 MSTORE DUP3 ADD MSTORE LOG3 DUP1 RETURN JUMPDEST DUP6 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE SWAP1 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x496E73756666696369656E742066756E6473 PUSH1 0x70 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST DUP5 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE DUP1 DUP5 ADD DUP4 SWAP1 MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416D6F756E74206D75737420626520706F736974697665000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST DUP5 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE DUP1 DUP5 ADD DUP4 SWAP1 MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5061796F757420616C72656164792070726F6365737365640000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST DUP4 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 DUP2 DUP5 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x27B7363C9031B630B4B6B990383937B1B2B9B9B7B9 PUSH1 0x59 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST DUP6 DUP1 REVERT JUMPDEST DUP3 DUP1 REVERT JUMPDEST DUP3 DUP5 CALLVALUE PUSH2 0x196 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x196 JUMPI POP PUSH2 0x423 PUSH1 0x20 SWAP3 CALLDATALOAD PUSH2 0x9A6 JUMP JUMPDEST SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST SWAP1 POP CALLVALUE PUSH2 0x3FF JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3FF JUMPI PUSH1 0x3 SLOAD DUP2 CALLDATALOAD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 PUSH2 0x459 SWAP1 DUP4 AND CALLER EQ PUSH2 0x8D2 JUMP JUMPDEST PUSH2 0x472 PUSH2 0x469 SELFBALANCE PUSH1 0x6 SLOAD SWAP1 PUSH2 0x982 JUMP JUMPDEST PUSH1 0x7 SLOAD SWAP1 PUSH2 0x95F JUMP JUMPDEST DUP4 GT PUSH2 0x4D4 JUMPI SWAP2 PUSH1 0x20 SWAP2 PUSH32 0xEAFF4B37086828766AD3268786972C0CD24259D4C87A80F9D3963A3C3D999B0D SWAP4 PUSH2 0x4AA DUP4 PUSH1 0x8 SLOAD PUSH2 0x982 JUMP JUMPDEST PUSH1 0x8 SSTORE PUSH2 0x4C9 DUP8 DUP1 DUP1 DUP1 DUP8 DUP8 DUP8 SLOAD AND GAS CALL PUSH2 0x4C3 PUSH2 0xAC7 JUMP JUMPDEST POP PUSH2 0xB07 JUMP JUMPDEST SLOAD AND SWAP4 MLOAD SWAP1 DUP2 MSTORE LOG2 DUP1 RETURN JUMPDEST PUSH1 0x64 SWAP1 PUSH1 0x20 DUP6 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4578636565647320617661696C61626C652066756E6473000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST POP POP CALLVALUE PUSH2 0x132 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x132 JUMPI PUSH1 0x5 SLOAD SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST DUP4 CALLVALUE PUSH2 0x196 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x196 JUMPI PUSH2 0x55A PUSH2 0x8B7 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 PUSH2 0x574 SWAP1 DUP4 AND CALLER EQ PUSH2 0x8D2 JUMP JUMPDEST AND PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0xA0 SHL PUSH1 0x5 SLOAD AND OR PUSH1 0x5 SSTORE DUP1 RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x132 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x132 JUMPI MLOAD SELFBALANCE DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST SWAP1 POP CALLVALUE PUSH2 0x3FF JUMPI DUP3 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x3FF JUMPI SLOAD SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP2 POP RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x132 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x132 JUMPI PUSH1 0x2 SLOAD SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x132 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x132 JUMPI PUSH1 0x20 SWAP1 PUSH1 0x7 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x132 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x132 JUMPI PUSH1 0x20 SWAP2 DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x643 PUSH2 0x8B7 JUMP JUMPDEST AND DUP2 MSTORE PUSH1 0x1 DUP5 MSTORE KECCAK256 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x132 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x132 JUMPI PUSH1 0x20 SWAP1 PUSH1 0x8 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x132 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x132 JUMPI PUSH1 0x20 SWAP1 PUSH1 0x6 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST SWAP2 SWAP1 POP CALLVALUE PUSH2 0x3FF JUMPI DUP3 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x3FF JUMPI CALLER DUP4 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE DUP1 DUP4 KECCAK256 SLOAD SWAP2 DUP3 ISZERO PUSH2 0x714 JUMPI POP CALLER DUP4 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE DUP3 DUP2 DUP2 KECCAK256 SSTORE PUSH2 0x6D8 DUP4 DUP1 DUP1 DUP1 DUP7 CALLER GAS CALL PUSH2 0x4C3 PUSH2 0xAC7 JUMP JUMPDEST PUSH2 0x6E4 DUP3 PUSH1 0x7 SLOAD PUSH2 0x95F JUMP JUMPDEST PUSH1 0x7 SSTORE MLOAD SWAP1 DUP2 MSTORE PUSH32 0xEAFF4B37086828766AD3268786972C0CD24259D4C87A80F9D3963A3C3D999B0D PUSH1 0x20 CALLER SWAP3 LOG2 DUP1 RETURN JUMPDEST PUSH1 0x20 PUSH1 0x64 SWAP3 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x4E6F2062616C616E636520746F207769746864726177 PUSH1 0x50 SHL PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST SWAP2 SWAP1 POP CALLVALUE PUSH2 0x3FF JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3FF JUMPI DUP1 PUSH1 0xFF SWAP2 PUSH1 0xE0 SWAP5 DUP5 CALLDATALOAD DUP2 MSTORE DUP1 PUSH1 0x20 MSTORE KECCAK256 DUP1 SLOAD SWAP4 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x1 DUP4 ADD SLOAD AND SWAP3 PUSH1 0x2 DUP4 ADD SLOAD SWAP1 PUSH1 0x5 PUSH1 0x3 DUP6 ADD SLOAD SWAP4 DUP6 ADD SLOAD SWAP5 ADD SLOAD SWAP5 DUP2 MLOAD SWAP8 DUP9 MSTORE PUSH1 0x20 DUP9 ADD MSTORE DUP7 ADD MSTORE PUSH1 0x60 DUP6 ADD MSTORE PUSH1 0x80 DUP5 ADD MSTORE DUP2 DUP2 AND ISZERO ISZERO PUSH1 0xA0 DUP5 ADD MSTORE PUSH1 0x8 SHR AND ISZERO ISZERO PUSH1 0xC0 DUP3 ADD MSTORE RETURN JUMPDEST SWAP1 SWAP3 SWAP2 POP CALLVALUE PUSH2 0x8B3 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x8B3 JUMPI DUP4 PUSH1 0xE0 SWAP5 PUSH1 0xC0 DUP4 PUSH2 0x7ED DUP7 SWAP6 PUSH2 0x90B JUMP JUMPDEST DUP3 DUP2 MSTORE DUP3 PUSH1 0x20 DUP3 ADD MSTORE DUP3 DUP6 DUP3 ADD MSTORE DUP3 PUSH1 0x60 DUP3 ADD MSTORE DUP3 PUSH1 0x80 DUP3 ADD MSTORE DUP3 PUSH1 0xA0 DUP3 ADD MSTORE ADD MSTORE DUP4 CALLDATALOAD DUP2 MSTORE DUP1 PUSH1 0x20 MSTORE KECCAK256 DUP2 MLOAD SWAP1 PUSH2 0x824 DUP3 PUSH2 0x90B JUMP JUMPDEST DUP1 SLOAD SWAP4 DUP5 DUP4 MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 PUSH1 0x1 DUP5 ADD SLOAD AND SWAP5 PUSH1 0x20 DUP6 ADD SWAP6 DUP7 MSTORE PUSH1 0x2 DUP5 ADD SLOAD SWAP1 DUP3 DUP7 ADD SWAP2 DUP3 MSTORE PUSH1 0x5 PUSH1 0x3 DUP7 ADD SLOAD SWAP5 PUSH1 0x60 DUP9 ADD SWAP6 DUP7 MSTORE DUP7 ADD SLOAD SWAP6 PUSH1 0x80 DUP9 ADD SWAP7 DUP8 MSTORE ADD SLOAD SWAP7 PUSH1 0xFF PUSH1 0xC0 PUSH1 0xA0 DUP10 ADD SWAP9 DUP3 DUP12 AND ISZERO ISZERO DUP11 MSTORE ADD SWAP9 PUSH1 0x8 SHR AND ISZERO ISZERO DUP9 MSTORE DUP4 MLOAD SWAP9 DUP10 MSTORE MLOAD AND PUSH1 0x20 DUP9 ADD MSTORE MLOAD SWAP1 DUP7 ADD MSTORE MLOAD PUSH1 0x60 DUP6 ADD MSTORE MLOAD PUSH1 0x80 DUP5 ADD MSTORE MLOAD ISZERO ISZERO PUSH1 0xA0 DUP4 ADD MSTORE MLOAD ISZERO ISZERO PUSH1 0xC0 DUP3 ADD MSTORE RETURN JUMPDEST DUP4 DUP1 REVERT JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x8CD JUMPI JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST ISZERO PUSH2 0x8D9 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xA PUSH1 0x24 DUP3 ADD MSTORE PUSH10 0x27B7363C9030B236B4B7 PUSH1 0xB1 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0xE0 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x927 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x927 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP2 SWAP1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0x96C JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 SWAP1 DUP3 SUB SWAP2 DUP3 GT PUSH2 0x96C JUMPI JUMP JUMPDEST MLOAD SWAP1 PUSH10 0xFFFFFFFFFFFFFFFFFFFF DUP3 AND DUP3 SUB PUSH2 0x8CD JUMPI JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD PUSH4 0x3FABE5A3 PUSH1 0xE2 SHL DUP2 MSTORE SWAP2 SWAP1 PUSH1 0xA0 SWAP1 DUP4 SWAP1 PUSH1 0x4 SWAP1 DUP3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS STATICCALL SWAP2 DUP3 ISZERO PUSH2 0xABB JUMPI PUSH1 0x0 SWAP3 PUSH2 0xA6D JUMPI JUMPDEST POP PUSH1 0x0 DUP3 SGT ISZERO PUSH2 0xA33 JUMPI PUSH8 0xDE0B6B3A7640000 SWAP1 DUP2 DUP2 MUL SWAP2 DUP2 DUP4 DIV EQ SWAP1 ISZERO OR ISZERO PUSH2 0x96C JUMPI PUSH1 0x64 DUP3 MUL SWAP2 DUP1 DUP4 DIV PUSH1 0x64 EQ SWAP1 ISZERO OR ISZERO PUSH2 0x96C JUMPI DUP2 ISZERO PUSH2 0xA1D JUMPI DIV SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x496E76616C69642070726963652064617461 PUSH1 0x70 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP1 SWAP2 PUSH1 0xA0 DUP3 RETURNDATASIZE DUP3 GT PUSH2 0xAB3 JUMPI JUMPDEST DUP2 PUSH2 0xA87 PUSH1 0xA0 SWAP4 DUP4 PUSH2 0x93D JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x196 JUMPI POP PUSH2 0xA99 DUP2 PUSH2 0x98F JUMP JUMPDEST POP PUSH2 0xAAB PUSH1 0x80 PUSH1 0x20 DUP4 ADD MLOAD SWAP3 ADD PUSH2 0x98F JUMP JUMPDEST POP SWAP1 CODESIZE PUSH2 0x9DC JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0xA7A JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST RETURNDATASIZE ISZERO PUSH2 0xB02 JUMPI RETURNDATASIZE SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0x927 JUMPI PUSH1 0x40 MLOAD SWAP2 PUSH2 0xAF6 PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP5 PUSH2 0x93D JUMP JUMPDEST DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY JUMP JUMPDEST PUSH1 0x60 SWAP1 JUMP JUMPDEST ISZERO PUSH2 0xB0E JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x151C985B9CD9995C8819985A5B1959 PUSH1 0x8A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH2 0xB51 CALLVALUE PUSH1 0x8 SLOAD PUSH2 0x95F JUMP JUMPDEST PUSH1 0x8 SSTORE PUSH1 0x40 MLOAD CALLVALUE DUP2 MSTORE PUSH32 0x543BA50A5EEC5E6178218E364B1D0F396157B3C8FA278522C2CB7FD99407D474 PUSH1 0x20 CALLER SWAP3 LOG2 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP9 DUP12 0xA8 0xA6 0xDD SIGNEXTEND DUP7 GAS PUSH27 0x92AE5A69BF327D922CBB27A73BC880D55B0528A44F426C64736F6C PUSH4 0x43000813 STOP CALLER ","sourceMap":"254:6450:4:-:0;;;;;;;;;;;;;-1:-1:-1;254:6450:4;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;254:6450:4;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;254:6450:4;;;;;;:::i;:::-;;;-1:-1:-1;;;;;254:6450:4;;1296:42;;254:6450;;1304:10;:19;1296:42;:::i;:::-;254:6450;;-1:-1:-1;;;;;;254:6450:4;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;-1:-1:-1;;254:6450:4;;;;;;-1:-1:-1;;;;;254:6450:4;;;;;;;;;;;;;;;;;1196:15;254:6450;;1182:10;:29;254:6450;;;;;;;;;;;;;;;;2708:14;;254:6450;;2848:28;;;:::i;:::-;254:6450;;2960:14;254:6450;2960:28;254:6450;;;;;;;;;;;3488:61;254:6450;;;;;;:::i;:::-;;;;3050:254;;;254:6450;;;3050:254;;;254:6450;;;;3050:254;;254:6450;;;;3050:254;;;3219:15;;254:6450;;3050:254;254:6450;3050:254;;254:6450;;;;3050:254;;;254:6450;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1196:15;254:6450;;;;;;;;;;;;;;;;;;;;;;;;;;;2960:14;254:6450;;;;;;;;;;;;;;;;;;;;;3356:34;254:6450;;;3356:34;:::i;:::-;254:6450;;3400:28;254:6450;2960:14;254:6450;3400:28;:::i;:::-;2960:14;254:6450;3438:26;254:6450;3438:26;254:6450;3438:26;:::i;:::-;;254:6450;;;;;;;;;3488:61;254:6450;;;;;-1:-1:-1;;;254:6450:4;;;;;;;;;;;;;-1:-1:-1;;;254:6450:4;;;;;;;;;;-1:-1:-1;;;254:6450:4;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;254:6450:4;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;254:6450:4;;;;;;;;;;;;-1:-1:-1;;;254:6450:4;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;254:6450:4;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;-1:-1:-1;;254:6450:4;;;;;;;;;-1:-1:-1;;;;;254:6450:4;1296:42;;254:6450;;1304:10;:19;1296:42;:::i;:::-;5665:53;:36;:21;5689:12;254:6450;5665:36;;:::i;:::-;5704:14;254:6450;5665:53;;:::i;:::-;5654:64;;254:6450;;;;;5939:33;254:6450;5765:25;254:6450;5765:25;254:6450;5765:25;:::i;:::-;;254:6450;5880:35;254:6450;;;;;;;;;5828:42;;;;:::i;:::-;;5880:35;:::i;:::-;254:6450;;;;;;;5939:33;254:6450;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;688:38;254:6450;;;-1:-1:-1;;;;;254:6450:4;;;;;;;;;;;;;;;-1:-1:-1;;254:6450:4;;;;;;:::i;:::-;;;-1:-1:-1;;;;;254:6450:4;;1296:42;;254:6450;;1304:10;:19;1296:42;:::i;:::-;254:6450;;;;2185:45;254:6450;;;2185:45;254:6450;;;;;;;;;;;;;;;;;;6674:21;254:6450;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;254:6450:4;;;;;;;-1:-1:-1;254:6450:4;;;;;;;;;;;;;;;597:30;254:6450;;;-1:-1:-1;;;;;254:6450:4;;;;;;;;;;;;;;;;;;;;;;;;797:29;254:6450;;;;;;;;;;;;;;;-1:-1:-1;;254:6450:4;;;;;;;;-1:-1:-1;;;;;254:6450:4;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;832:29;254:6450;;;;;;;;;;;;;;;;;;;;;;;764:27;254:6450;;;;;;;;;;;;;;;;;;;;;;4621:10;254:6450;;4612:8;254:6450;;;;;;4650:10;;;254:6450;;4621:10;;254:6450;;4612:8;254:6450;;;;;;;4909:35;4621:10;;;;;;4856:43;;;;:::i;4909:35::-;4963:24;254:6450;4963:24;254:6450;4963:24;:::i;:::-;;254:6450;;;;;5011:34;254:6450;4621:10;5011:34;;254:6450;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;254:6450:4;;;;;;;;;;;;;;-1:-1:-1;;254:6450:4;;;;;;;;;;;;;;;;;;;;;;;;;;496:41;;254:6450;;496:41;;;;254:6450;496:41;;254:6450;496:41;;254:6450;496:41;;;254:6450;496:41;;254:6450;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;254:6450:4;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;254:6450:4;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;-1:-1:-1;;;254:6450:4;;;;;;;;;;;;-1:-1:-1;;;254:6450:4;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;:::o;3776:704::-;3940:9;254:6450;;;-1:-1:-1;;;3940:27:4;;254:6450;3776:704;254:6450;;;;3940:27;;254:6450;;-1:-1:-1;;;;;254:6450:4;3940:27;;;;;;;-1:-1:-1;3940:27:4;;;3776:704;3985:9;-1:-1:-1;3985:9:4;;254:6450;;;4409:4;254:6450;;;;;;;;;;;;;;;4433:3;254:6450;;;;;;4433:3;254:6450;;;;;;;;;;;;3776:704;:::o;254:6450::-;;;;-1:-1:-1;254:6450:4;;3940:27;254:6450;;-1:-1:-1;254:6450:4;;;;-1:-1:-1;;;254:6450:4;;;3940:27;254:6450;;;;;;;;-1:-1:-1;;;254:6450:4;;;;;;;3940:27;;;254:6450;3940:27;;;;;;;;;254:6450;3940:27;;;:::i;:::-;;;254:6450;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;3940:27;;;;;;;-1:-1:-1;3940:27:4;;;254:6450;;;-1:-1:-1;254:6450:4;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;254:6450:4;;;;;:::i;:::-;;;;-1:-1:-1;254:6450:4;;;;:::o;:::-;;;:::o;:::-;;;;:::o;:::-;;;-1:-1:-1;;;254:6450:4;;;;;;;;;;;;-1:-1:-1;;;254:6450:4;;;;;;;5120:123;5157:27;5175:9;5157:27;254:6450;5157:27;:::i;:::-;;254:6450;;;5175:9;254:6450;;5199:37;254:6450;5214:10;5199:37;;5120:123::o"},"methodIdentifiers":{"admin()":"f851a440","availableFunds()":"46fcff4c","balances(address)":"27e235e3","claimsProcessor()":"536a7e4f","convertUSDToAVAX(uint256)":"c0348b07","deposit()":"d0e30db0","getContractBalance()":"6f9fb98a","getPayoutDetails(uint256)":"1faa0414","getUserBalance(address)":"47734892","payouts(uint256)":"29652e86","priceFeed()":"741bef1a","processPayout(uint256,address,uint256)":"ca4c3346","setPriceFeed(address)":"724e78da","setTreasury(address)":"f0f44260","totalPayouts()":"4089b170","totalWithdrawn()":"4b319713","treasury()":"61d027b3","withdraw()":"3ccfd60b","withdrawToTreasury(uint256)":"abae70c5"}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_claimsProcessor\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_priceFeed\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"depositor\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"FundsDeposited\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"FundsWithdrawn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"claimId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"usdAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"avaxAmount\",\"type\":\"uint256\"}],\"name\":\"PayoutProcessed\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"admin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"availableFunds\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"balances\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claimsProcessor\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_usdAmount\",\"type\":\"uint256\"}],\"name\":\"convertUSDToAVAX\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getContractBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_claimId\",\"type\":\"uint256\"}],\"name\":\"getPayoutDetails\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"claimId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"usdAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"avaxAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"processed\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"withdrawn\",\"type\":\"bool\"}],\"internalType\":\"struct PayoutManager.Payout\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"getUserBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"payouts\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"claimId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"usdAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"avaxAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"processed\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"withdrawn\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"priceFeed\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_claimId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_usdAmount\",\"type\":\"uint256\"}],\"name\":\"processPayout\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_priceFeed\",\"type\":\"address\"}],\"name\":\"setPriceFeed\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_treasury\",\"type\":\"address\"}],\"name\":\"setTreasury\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalPayouts\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalWithdrawn\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"treasury\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"withdrawToTreasury\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"details\":\"Manages payouts for approved insurance claims\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Constructor for PayoutManager\",\"params\":{\"_claimsProcessor\":\"Address of the ClaimsProcessor contract\",\"_priceFeed\":\"Address of the Chainlink Price Feed for AVAX/USD\"}},\"convertUSDToAVAX(uint256)\":{\"details\":\"Convert USD amount to AVAX using Chainlink price feed\",\"params\":{\"_usdAmount\":\"Amount in USD (with 6 decimals)\"},\"returns\":{\"_0\":\"avaxAmount Equivalent amount in AVAX (with 18 decimals)\"}},\"deposit()\":{\"details\":\"Allows admin to deposit funds\"},\"getContractBalance()\":{\"details\":\"Get contract balance\",\"returns\":{\"_0\":\"Total contract balance\"}},\"getPayoutDetails(uint256)\":{\"details\":\"Get payout details for a claim\",\"params\":{\"_claimId\":\"ID of the claim\"},\"returns\":{\"_0\":\"Payout details\"}},\"getUserBalance(address)\":{\"details\":\"Get user's withdrawable balance\",\"params\":{\"_user\":\"Address of the user\"},\"returns\":{\"_0\":\"balance User's balance\"}},\"processPayout(uint256,address,uint256)\":{\"details\":\"Process payout for an approved claim\",\"params\":{\"_claimId\":\"ID of the approved claim\",\"_recipient\":\"Address of the claim recipient\",\"_usdAmount\":\"Payout amount in USD (with 6 decimals, e.g., 1000000 = 1 USD)\"}},\"setPriceFeed(address)\":{\"details\":\"Updates the price feed address\",\"params\":{\"_priceFeed\":\"New price feed address\"}},\"setTreasury(address)\":{\"details\":\"Sets the treasury address\",\"params\":{\"_treasury\":\"New treasury address\"}},\"withdraw()\":{\"details\":\"Allow users to withdraw their balance\"},\"withdrawToTreasury(uint256)\":{\"details\":\"Allows admin to withdraw excess funds to treasury\",\"params\":{\"_amount\":\"Amount to withdraw\"}}},\"title\":\"PayoutManager\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/PayoutManager.sol\":\"PayoutManager\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@chainlink/contracts/src/v0.8/VRFConsumerBaseV2.sol\":{\"keccak256\":\"0x3d709a5e0f1f9b8841172b10ba8af785dd51a13eda9fc395723a706e51329904\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://038eef992d813c20737fbe94e3a36e5d541d1aa736158dd2a43dd5b840b8c360\",\"dweb:/ipfs/QmZWJ25Yr1sUSAsfJRKvTMDmGkmy63hHhB495CUL1bpNz4\"]},\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"keccak256\":\"0x6e6e4b0835904509406b070ee173b5bc8f677c19421b76be38aea3b1b3d30846\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3beaa37ee61e4ab615e250fbf01601ae481de843fd0ef55e6b44fd9d5fff8a7\",\"dweb:/ipfs/QmeZUVwd26LzK4Mfp8Zba5JbQNkZFfTzFu1A6FVMMZDg9c\"]},\"@chainlink/contracts/src/v0.8/interfaces/VRFCoordinatorV2Interface.sol\":{\"keccak256\":\"0x54cdc97717cbae1a51a5500c8ee4875ebf056c95b54d2155a9544a79cb4f4494\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4bd670a55aacc0ab372835cd7e21b487f9fb69d8c6375234b68862a58f3b1153\",\"dweb:/ipfs/QmRMdB9TFLgG1LXg9VSTWbZZ1yf3uY1RY3pPkoMN23JfZk\"]},\"contracts/ClaimsProcessor.sol\":{\"keccak256\":\"0xb8ae211856d9658c9192c87183b4e49ecdc53c6ab3dbecbcd040c7808ca7a625\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9119c9ff88542eadec93f14ddd5f49d34e69e4166a3d6a50c5f8e68813cbfd95\",\"dweb:/ipfs/QmPLUKUo8TeE7NeZF7Zqg6CKHtrYLcnj9mDR4QvxaoCi3c\"]},\"contracts/PayoutManager.sol\":{\"keccak256\":\"0x358ee342b75e8c129aaaffb8f7b89701c9495f3d2573ec76a25877388472bc21\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e4f3bf7c026fa029858ffa7f29fc3821ede642e0593e2f6d076149a8ebd624f1\",\"dweb:/ipfs/QmPtxjYNWRrfHS2xVorVgkxKEX1SQ8958KrTGYVsDFeaYS\"]},\"contracts/PolicyRegistry.sol\":{\"keccak256\":\"0xe231440c1c6544bc5f4492a6a25d9696eacdfe0f9555e7aa20ed485d78069a80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0f5b5341cb27aeb5afb29bef82f1c3e8785107fd564c6892d168457f597f3feb\",\"dweb:/ipfs/QmVivAuQa7ymmsPdFSZXUUQpLnDNUE92ZG16JtuRtUrBFg\"]}},\"version\":1}"}},"contracts/PolicyRegistry.sol":{"PolicyRegistry":{"abi":[{"inputs":[],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"policyId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"newCount","type":"uint256"}],"name":"ClaimCountUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"policyId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"PayoutRecorded","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"policyId","type":"uint256"}],"name":"PolicyCancelled","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"policyId","type":"uint256"},{"indexed":true,"internalType":"address","name":"policyholder","type":"address"}],"name":"PolicyCreated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"policyId","type":"uint256"}],"name":"PolicyUpdated","type":"event"},{"inputs":[],"name":"admin","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_policyId","type":"uint256"}],"name":"cancelPolicy","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"claimsProcessor","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_policyholder","type":"address"},{"internalType":"uint256","name":"_premium","type":"uint256"},{"internalType":"uint256","name":"_coverage","type":"uint256"},{"internalType":"uint256","name":"_deductible","type":"uint256"},{"internalType":"string","name":"_policyType","type":"string"},{"internalType":"uint256","name":"_duration","type":"uint256"}],"name":"createPolicy","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_policyId","type":"uint256"}],"name":"getPolicy","outputs":[{"components":[{"internalType":"uint256","name":"policyId","type":"uint256"},{"internalType":"address","name":"policyholder","type":"address"},{"internalType":"uint256","name":"premium","type":"uint256"},{"internalType":"uint256","name":"coverage","type":"uint256"},{"internalType":"uint256","name":"deductible","type":"uint256"},{"internalType":"string","name":"policyType","type":"string"},{"internalType":"uint256","name":"startDate","type":"uint256"},{"internalType":"uint256","name":"endDate","type":"uint256"},{"internalType":"bool","name":"isActive","type":"bool"},{"internalType":"uint256","name":"claimsCount","type":"uint256"},{"internalType":"uint256","name":"totalPayouts","type":"uint256"}],"internalType":"struct PolicyRegistry.Policy","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_user","type":"address"}],"name":"getUserPolicies","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_policyId","type":"uint256"}],"name":"incrementClaimCount","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_policyId","type":"uint256"},{"internalType":"address","name":"_claimant","type":"address"}],"name":"isPolicyValidForClaims","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"nextPolicyId","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"policies","outputs":[{"internalType":"uint256","name":"policyId","type":"uint256"},{"internalType":"address","name":"policyholder","type":"address"},{"internalType":"uint256","name":"premium","type":"uint256"},{"internalType":"uint256","name":"coverage","type":"uint256"},{"internalType":"uint256","name":"deductible","type":"uint256"},{"internalType":"string","name":"policyType","type":"string"},{"internalType":"uint256","name":"startDate","type":"uint256"},{"internalType":"uint256","name":"endDate","type":"uint256"},{"internalType":"bool","name":"isActive","type":"bool"},{"internalType":"uint256","name":"claimsCount","type":"uint256"},{"internalType":"uint256","name":"totalPayouts","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_policyId","type":"uint256"},{"internalType":"uint256","name":"_amount","type":"uint256"}],"name":"recordPayout","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_claimsProcessor","type":"address"}],"name":"setClaimsProcessor","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_policyId","type":"uint256"},{"internalType":"uint256","name":"_premium","type":"uint256"},{"internalType":"uint256","name":"_coverage","type":"uint256"},{"internalType":"uint256","name":"_deductible","type":"uint256"},{"internalType":"uint256","name":"_duration","type":"uint256"}],"name":"updatePolicy","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"uint256","name":"","type":"uint256"}],"name":"userPolicies","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"6080806040523461002d576001600255600380546001600160a01b03191633179055610f0490816100338239f35b600080fdfe608080604052600436101561001357600080fd5b60003560e01c90816319ac461414610b715750806326d13b0014610aa35780632b07fce31461090f5780633a8e94f5146108be5780633d36adc514610866578063536a7e4f1461083d57806376d0629e146104c35780638d3629c0146103f3578063943f31a614610351578063b20e8bcc14610270578063cad0b8db14610252578063d3e8948314610190578063f8112568146100e75763f851a440146100b957600080fd5b346100e25760003660031901126100e2576003546040516001600160a01b039091168152602090f35b600080fd5b346100e25760403660031901126100e2576004357f899732479a7415c852b353630c0c7aa1a6f275d4e17e3196363d995b3e1da72f602060243561013660018060a01b03600454163314610e8a565b836000526000825261014e8460406000205414610e03565b836000526000825261016a60ff60086040600020015416610e47565b8360005260008252600a604060002001610185828254610df6565b9055604051908152a2005b346100e25760203660031901126100e25760043560005260006020526040600020805460018060a01b036001830154169160028101546003820154916004810154926101de60058301610d17565b9361022f60068401549560078501549260ff60088701541694600a6009880154970154976040519b8c9b8c5260208c015260408b015260608a015260808901526101608060a08a0152880190610c30565b9460c087015260e086015215156101008501526101208401526101408301520390f35b346100e25760003660031901126100e2576020600254604051908152f35b346100e25760203660031901126100e25760043561029960018060a01b03600354163314610dbd565b8060005260006020526102b28160406000205414610e03565b80600052600060205260ff600860406000200154161561030c57806000526000602052600860406000200160ff1981541690557fbb1ae509b65d9486a686f3f1b0435353031b5607109dc80aa4d063887e10f3e8600080a2005b60405162461bcd60e51b815260206004820152601a60248201527f506f6c69637920697320616c726561647920696e6163746976650000000000006044820152606490fd5b346100e25760403660031901126100e2576024356001600160a01b0381811691600435908390036100e257602092816000526000845260406000209182541492836103e3575b5050816103d4575b816103c5575b816103b6575b506040519015158152f35b600791500154421115826103ab565b600681015442101591506103a5565b600881015460ff16915061039f565b6001830154161491508380610397565b346100e2576020806003193601126100e2576004359061041e60018060a01b03600454163314610e8a565b81600052600081526104368260406000205414610e03565b816000526000815261045260ff60086040600020015416610e47565b81600052600081526009604060002001908154600181018091116104ad577fde9d9328490fbf56bf6fb489ad69f4cc297e9642da86fbd4f5c823494a4e01f692558260005260008152600960406000200154604051908152a2005b634e487b7160e01b600052601160045260246000fd5b346100e25760c03660031901126100e2576104dc610c1a565b6084359067ffffffffffffffff82116100e257366023830112156100e257816004013567ffffffffffffffff811161075f5760405192610526601f8301601f191660200185610cbb565b81845236602483830101116100e25781600092602460209301838701378401015261055c60018060a01b03600354163314610dbd565b6002549160001983146104ad576001830160025561057c60a43542610df6565b6040519161058983610c9e565b84835260018060a01b038416602084015260243560408401526044356060840152606435608084015260a08301524260c083015260e0820152600161010082015260006101208201526000610140820152826000526000602052604060002090805182556001820160018060a01b036020830151166bffffffffffffffffffffffff60a01b82541617905560408101516002830155606081015160038301556080810151600483015560a081015180519067ffffffffffffffff821161075f576106566005850154610cdd565b601f81116107f6575b50602090601f8311600114610780579180600a949261014094600092610775575b50508160011b916000199060031b1c19161760058501555b60c0810151600685015560e0810151600785015560088401610100820151151560ff801983541691161790556101208101516009850155015191015560018060a01b03811660005260016020526040600020918254926801000000000000000084101561075f5783610711916001602096018155610c70565b815460001960039290921b91821b19169083901b179055604051916001600160a01b0316817f692975d6d42aec50e0f6ff672acde3bf011e71355ed86dd49de0a1f533950cba600080a38152f35b634e487b7160e01b600052604160045260246000fd5b015190508880610680565b906005850160005260206000209160005b601f19851681106107de575092600a94926001926101409583601f198116106107c5575b505050811b016005850155610698565b015160001960f88460031b161c191690558880806107b5565b91926020600181928685015181550194019201610791565b600585016000526020600020601f840160051c810160208510610836575b601f830160051c8201811061082a57505061065f565b60008155600101610814565b5080610814565b346100e25760003660031901126100e2576004546040516001600160a01b039091168152602090f35b346100e25760403660031901126100e25761087f610c1a565b6001600160a01b03166000908152600160205260409020805460243591908210156100e2576020916108b091610c70565b90546040519160031b1c8152f35b346100e25760203660031901126100e2576108d7610c1a565b6003546001600160a01b0391906108f19083163314610dbd565b166bffffffffffffffffffffffff60a01b6004541617600455600080f35b346100e25760203660031901126100e257600061014060405161093181610c9e565b828152826020820152826040820152826060820152826080820152606060a08201528260c08201528260e08201528261010082015282610120820152015260043560005260006020526040600020600a6040519161098e83610c9e565b8054835260018101546001600160a01b031660208401526002810154604084015260038101546060840152600481015460808401526109cf60058201610d17565b60a0840152600681015460c0840152600781015460e084015260ff6008820154161515610100840152600981015461012084015201546101408201526040518091602082528051602083015260018060a01b0360208201511660408301526040810151606083015260608101516080830152608081015160a083015260a0810151610140610a6b610160928360c0870152610180860190610c30565b9260c081015160e086015260e08101516101008601526101008101511515610120860152610120810151828601520151908301520390f35b346100e25760a03660031901126100e257600435608435610acf60018060a01b03600354163314610dbd565b816000526000602052610ae88260406000205414610e03565b816000526000602052610b0560ff60086040600020015416610e47565b816000526000602052604060002060243560028201556044356003820155606435600482015581610b59575b827f912ce63c438aca9d2f50d1d12de5b42efbcc84ce223b08122e8c2e3c000ca1f8600080a2005b6007610b689101918254610df6565b90558180610b31565b346100e2576020806003193601126100e257906001600160a01b03610b94610c1a565b1660005260018083526040600020928354808452818401908195600052826000209060005b818110610c075750505083610bcf910384610cbb565b60405192818401908285525180915260408401949160005b828110610bf45785870386f35b8351875295810195928101928401610be7565b8254845292840192918501918501610bb9565b600435906001600160a01b03821682036100e257565b919082519283825260005b848110610c5c575050826000602080949584010152601f8019910116010190565b602081830181015184830182015201610c3b565b8054821015610c885760005260206000200190600090565b634e487b7160e01b600052603260045260246000fd5b610160810190811067ffffffffffffffff82111761075f57604052565b90601f8019910116810190811067ffffffffffffffff82111761075f57604052565b90600182811c92168015610d0d575b6020831014610cf757565b634e487b7160e01b600052602260045260246000fd5b91607f1691610cec565b9060405191826000825492610d2b84610cdd565b908184526001948581169081600014610d9a5750600114610d57575b5050610d5592500383610cbb565b565b9093915060005260209081600020936000915b818310610d82575050610d5593508201013880610d47565b85548884018501529485019487945091830191610d6a565b915050610d5594506020925060ff191682840152151560051b8201013880610d47565b15610dc457565b60405162461bcd60e51b815260206004820152600a60248201526927b7363c9030b236b4b760b11b6044820152606490fd5b919082018092116104ad57565b15610e0a57565b60405162461bcd60e51b8152602060048201526015602482015274141bdb1a58de48191bd95cc81b9bdd08195e1a5cdd605a1b6044820152606490fd5b15610e4e57565b60405162461bcd60e51b8152602060048201526014602482015273506f6c696379206973206e6f742061637469766560601b6044820152606490fd5b15610e9157565b60405162461bcd60e51b815260206004820152601560248201527427b7363c9031b630b4b6b990383937b1b2b9b9b7b960591b6044820152606490fdfea2646970667358221220561acb700171db0fb354b395f3a0c6cc754e9ed07e83f5546d55ecfcdfa8317464736f6c63430008130033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH2 0x2D JUMPI PUSH1 0x1 PUSH1 0x2 SSTORE PUSH1 0x3 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER OR SWAP1 SSTORE PUSH2 0xF04 SWAP1 DUP2 PUSH2 0x33 DUP3 CODECOPY RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x13 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0x19AC4614 EQ PUSH2 0xB71 JUMPI POP DUP1 PUSH4 0x26D13B00 EQ PUSH2 0xAA3 JUMPI DUP1 PUSH4 0x2B07FCE3 EQ PUSH2 0x90F JUMPI DUP1 PUSH4 0x3A8E94F5 EQ PUSH2 0x8BE JUMPI DUP1 PUSH4 0x3D36ADC5 EQ PUSH2 0x866 JUMPI DUP1 PUSH4 0x536A7E4F EQ PUSH2 0x83D JUMPI DUP1 PUSH4 0x76D0629E EQ PUSH2 0x4C3 JUMPI DUP1 PUSH4 0x8D3629C0 EQ PUSH2 0x3F3 JUMPI DUP1 PUSH4 0x943F31A6 EQ PUSH2 0x351 JUMPI DUP1 PUSH4 0xB20E8BCC EQ PUSH2 0x270 JUMPI DUP1 PUSH4 0xCAD0B8DB EQ PUSH2 0x252 JUMPI DUP1 PUSH4 0xD3E89483 EQ PUSH2 0x190 JUMPI DUP1 PUSH4 0xF8112568 EQ PUSH2 0xE7 JUMPI PUSH4 0xF851A440 EQ PUSH2 0xB9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0xE2 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xE2 JUMPI PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0xE2 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xE2 JUMPI PUSH1 0x4 CALLDATALOAD PUSH32 0x899732479A7415C852B353630C0C7AA1A6F275D4E17E3196363D995B3E1DA72F PUSH1 0x20 PUSH1 0x24 CALLDATALOAD PUSH2 0x136 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x4 SLOAD AND CALLER EQ PUSH2 0xE8A JUMP JUMPDEST DUP4 PUSH1 0x0 MSTORE PUSH1 0x0 DUP3 MSTORE PUSH2 0x14E DUP5 PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD EQ PUSH2 0xE03 JUMP JUMPDEST DUP4 PUSH1 0x0 MSTORE PUSH1 0x0 DUP3 MSTORE PUSH2 0x16A PUSH1 0xFF PUSH1 0x8 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SLOAD AND PUSH2 0xE47 JUMP JUMPDEST DUP4 PUSH1 0x0 MSTORE PUSH1 0x0 DUP3 MSTORE PUSH1 0xA PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD PUSH2 0x185 DUP3 DUP3 SLOAD PUSH2 0xDF6 JUMP JUMPDEST SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG2 STOP JUMPDEST CALLVALUE PUSH2 0xE2 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xE2 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x1 DUP4 ADD SLOAD AND SWAP2 PUSH1 0x2 DUP2 ADD SLOAD PUSH1 0x3 DUP3 ADD SLOAD SWAP2 PUSH1 0x4 DUP2 ADD SLOAD SWAP3 PUSH2 0x1DE PUSH1 0x5 DUP4 ADD PUSH2 0xD17 JUMP JUMPDEST SWAP4 PUSH2 0x22F PUSH1 0x6 DUP5 ADD SLOAD SWAP6 PUSH1 0x7 DUP6 ADD SLOAD SWAP3 PUSH1 0xFF PUSH1 0x8 DUP8 ADD SLOAD AND SWAP5 PUSH1 0xA PUSH1 0x9 DUP9 ADD SLOAD SWAP8 ADD SLOAD SWAP8 PUSH1 0x40 MLOAD SWAP12 DUP13 SWAP12 DUP13 MSTORE PUSH1 0x20 DUP13 ADD MSTORE PUSH1 0x40 DUP12 ADD MSTORE PUSH1 0x60 DUP11 ADD MSTORE PUSH1 0x80 DUP10 ADD MSTORE PUSH2 0x160 DUP1 PUSH1 0xA0 DUP11 ADD MSTORE DUP9 ADD SWAP1 PUSH2 0xC30 JUMP JUMPDEST SWAP5 PUSH1 0xC0 DUP8 ADD MSTORE PUSH1 0xE0 DUP7 ADD MSTORE ISZERO ISZERO PUSH2 0x100 DUP6 ADD MSTORE PUSH2 0x120 DUP5 ADD MSTORE PUSH2 0x140 DUP4 ADD MSTORE SUB SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0xE2 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xE2 JUMPI PUSH1 0x20 PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0xE2 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xE2 JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x299 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x3 SLOAD AND CALLER EQ PUSH2 0xDBD JUMP JUMPDEST DUP1 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x20 MSTORE PUSH2 0x2B2 DUP2 PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD EQ PUSH2 0xE03 JUMP JUMPDEST DUP1 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x8 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SLOAD AND ISZERO PUSH2 0x30C JUMPI DUP1 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x20 MSTORE PUSH1 0x8 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD PUSH1 0xFF NOT DUP2 SLOAD AND SWAP1 SSTORE PUSH32 0xBB1AE509B65D9486A686F3F1B0435353031B5607109DC80AA4D063887E10F3E8 PUSH1 0x0 DUP1 LOG2 STOP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x506F6C69637920697320616C726561647920696E616374697665000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0xE2 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xE2 JUMPI PUSH1 0x24 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 DUP2 AND SWAP2 PUSH1 0x4 CALLDATALOAD SWAP1 DUP4 SWAP1 SUB PUSH2 0xE2 JUMPI PUSH1 0x20 SWAP3 DUP2 PUSH1 0x0 MSTORE PUSH1 0x0 DUP5 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP2 DUP3 SLOAD EQ SWAP3 DUP4 PUSH2 0x3E3 JUMPI JUMPDEST POP POP DUP2 PUSH2 0x3D4 JUMPI JUMPDEST DUP2 PUSH2 0x3C5 JUMPI JUMPDEST DUP2 PUSH2 0x3B6 JUMPI JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST PUSH1 0x7 SWAP2 POP ADD SLOAD TIMESTAMP GT ISZERO DUP3 PUSH2 0x3AB JUMP JUMPDEST PUSH1 0x6 DUP2 ADD SLOAD TIMESTAMP LT ISZERO SWAP2 POP PUSH2 0x3A5 JUMP JUMPDEST PUSH1 0x8 DUP2 ADD SLOAD PUSH1 0xFF AND SWAP2 POP PUSH2 0x39F JUMP JUMPDEST PUSH1 0x1 DUP4 ADD SLOAD AND EQ SWAP2 POP DUP4 DUP1 PUSH2 0x397 JUMP JUMPDEST CALLVALUE PUSH2 0xE2 JUMPI PUSH1 0x20 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0xE2 JUMPI PUSH1 0x4 CALLDATALOAD SWAP1 PUSH2 0x41E PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x4 SLOAD AND CALLER EQ PUSH2 0xE8A JUMP JUMPDEST DUP2 PUSH1 0x0 MSTORE PUSH1 0x0 DUP2 MSTORE PUSH2 0x436 DUP3 PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD EQ PUSH2 0xE03 JUMP JUMPDEST DUP2 PUSH1 0x0 MSTORE PUSH1 0x0 DUP2 MSTORE PUSH2 0x452 PUSH1 0xFF PUSH1 0x8 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SLOAD AND PUSH2 0xE47 JUMP JUMPDEST DUP2 PUSH1 0x0 MSTORE PUSH1 0x0 DUP2 MSTORE PUSH1 0x9 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SWAP1 DUP2 SLOAD PUSH1 0x1 DUP2 ADD DUP1 SWAP2 GT PUSH2 0x4AD JUMPI PUSH32 0xDE9D9328490FBF56BF6FB489AD69F4CC297E9642DA86FBD4F5C823494A4E01F6 SWAP3 SSTORE DUP3 PUSH1 0x0 MSTORE PUSH1 0x0 DUP2 MSTORE PUSH1 0x9 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG2 STOP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST CALLVALUE PUSH2 0xE2 JUMPI PUSH1 0xC0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xE2 JUMPI PUSH2 0x4DC PUSH2 0xC1A JUMP JUMPDEST PUSH1 0x84 CALLDATALOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0xE2 JUMPI CALLDATASIZE PUSH1 0x23 DUP4 ADD SLT ISZERO PUSH2 0xE2 JUMPI DUP2 PUSH1 0x4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x75F JUMPI PUSH1 0x40 MLOAD SWAP3 PUSH2 0x526 PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP6 PUSH2 0xCBB JUMP JUMPDEST DUP2 DUP5 MSTORE CALLDATASIZE PUSH1 0x24 DUP4 DUP4 ADD ADD GT PUSH2 0xE2 JUMPI DUP2 PUSH1 0x0 SWAP3 PUSH1 0x24 PUSH1 0x20 SWAP4 ADD DUP4 DUP8 ADD CALLDATACOPY DUP5 ADD ADD MSTORE PUSH2 0x55C PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x3 SLOAD AND CALLER EQ PUSH2 0xDBD JUMP JUMPDEST PUSH1 0x2 SLOAD SWAP2 PUSH1 0x0 NOT DUP4 EQ PUSH2 0x4AD JUMPI PUSH1 0x1 DUP4 ADD PUSH1 0x2 SSTORE PUSH2 0x57C PUSH1 0xA4 CALLDATALOAD TIMESTAMP PUSH2 0xDF6 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 PUSH2 0x589 DUP4 PUSH2 0xC9E JUMP JUMPDEST DUP5 DUP4 MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x24 CALLDATALOAD PUSH1 0x40 DUP5 ADD MSTORE PUSH1 0x44 CALLDATALOAD PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x64 CALLDATALOAD PUSH1 0x80 DUP5 ADD MSTORE PUSH1 0xA0 DUP4 ADD MSTORE TIMESTAMP PUSH1 0xC0 DUP4 ADD MSTORE PUSH1 0xE0 DUP3 ADD MSTORE PUSH1 0x1 PUSH2 0x100 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x120 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x140 DUP3 ADD MSTORE DUP3 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 DUP1 MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x20 DUP4 ADD MLOAD AND PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0xA0 SHL DUP3 SLOAD AND OR SWAP1 SSTORE PUSH1 0x40 DUP2 ADD MLOAD PUSH1 0x2 DUP4 ADD SSTORE PUSH1 0x60 DUP2 ADD MLOAD PUSH1 0x3 DUP4 ADD SSTORE PUSH1 0x80 DUP2 ADD MLOAD PUSH1 0x4 DUP4 ADD SSTORE PUSH1 0xA0 DUP2 ADD MLOAD DUP1 MLOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0x75F JUMPI PUSH2 0x656 PUSH1 0x5 DUP6 ADD SLOAD PUSH2 0xCDD JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x7F6 JUMPI JUMPDEST POP PUSH1 0x20 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x780 JUMPI SWAP2 DUP1 PUSH1 0xA SWAP5 SWAP3 PUSH2 0x140 SWAP5 PUSH1 0x0 SWAP3 PUSH2 0x775 JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0x5 DUP6 ADD SSTORE JUMPDEST PUSH1 0xC0 DUP2 ADD MLOAD PUSH1 0x6 DUP6 ADD SSTORE PUSH1 0xE0 DUP2 ADD MLOAD PUSH1 0x7 DUP6 ADD SSTORE PUSH1 0x8 DUP5 ADD PUSH2 0x100 DUP3 ADD MLOAD ISZERO ISZERO PUSH1 0xFF DUP1 NOT DUP4 SLOAD AND SWAP2 AND OR SWAP1 SSTORE PUSH2 0x120 DUP2 ADD MLOAD PUSH1 0x9 DUP6 ADD SSTORE ADD MLOAD SWAP2 ADD SSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP2 DUP3 SLOAD SWAP3 PUSH9 0x10000000000000000 DUP5 LT ISZERO PUSH2 0x75F JUMPI DUP4 PUSH2 0x711 SWAP2 PUSH1 0x1 PUSH1 0x20 SWAP7 ADD DUP2 SSTORE PUSH2 0xC70 JUMP JUMPDEST DUP2 SLOAD PUSH1 0x0 NOT PUSH1 0x3 SWAP3 SWAP1 SWAP3 SHL SWAP2 DUP3 SHL NOT AND SWAP1 DUP4 SWAP1 SHL OR SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH32 0x692975D6D42AEC50E0F6FF672ACDE3BF011E71355ED86DD49DE0A1F533950CBA PUSH1 0x0 DUP1 LOG3 DUP2 MSTORE RETURN JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADD MLOAD SWAP1 POP DUP9 DUP1 PUSH2 0x680 JUMP JUMPDEST SWAP1 PUSH1 0x5 DUP6 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP2 PUSH1 0x0 JUMPDEST PUSH1 0x1F NOT DUP6 AND DUP2 LT PUSH2 0x7DE JUMPI POP SWAP3 PUSH1 0xA SWAP5 SWAP3 PUSH1 0x1 SWAP3 PUSH2 0x140 SWAP6 DUP4 PUSH1 0x1F NOT DUP2 AND LT PUSH2 0x7C5 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0x5 DUP6 ADD SSTORE PUSH2 0x698 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE DUP9 DUP1 DUP1 PUSH2 0x7B5 JUMP JUMPDEST SWAP2 SWAP3 PUSH1 0x20 PUSH1 0x1 DUP2 SWAP3 DUP7 DUP6 ADD MLOAD DUP2 SSTORE ADD SWAP5 ADD SWAP3 ADD PUSH2 0x791 JUMP JUMPDEST PUSH1 0x5 DUP6 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP6 LT PUSH2 0x836 JUMPI JUMPDEST PUSH1 0x1F DUP4 ADD PUSH1 0x5 SHR DUP3 ADD DUP2 LT PUSH2 0x82A JUMPI POP POP PUSH2 0x65F JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x814 JUMP JUMPDEST POP DUP1 PUSH2 0x814 JUMP JUMPDEST CALLVALUE PUSH2 0xE2 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xE2 JUMPI PUSH1 0x4 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0xE2 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xE2 JUMPI PUSH2 0x87F PUSH2 0xC1A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x24 CALLDATALOAD SWAP2 SWAP1 DUP3 LT ISZERO PUSH2 0xE2 JUMPI PUSH1 0x20 SWAP2 PUSH2 0x8B0 SWAP2 PUSH2 0xC70 JUMP JUMPDEST SWAP1 SLOAD PUSH1 0x40 MLOAD SWAP2 PUSH1 0x3 SHL SHR DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0xE2 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xE2 JUMPI PUSH2 0x8D7 PUSH2 0xC1A JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 PUSH2 0x8F1 SWAP1 DUP4 AND CALLER EQ PUSH2 0xDBD JUMP JUMPDEST AND PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0xA0 SHL PUSH1 0x4 SLOAD AND OR PUSH1 0x4 SSTORE PUSH1 0x0 DUP1 RETURN JUMPDEST CALLVALUE PUSH2 0xE2 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xE2 JUMPI PUSH1 0x0 PUSH2 0x140 PUSH1 0x40 MLOAD PUSH2 0x931 DUP2 PUSH2 0xC9E JUMP JUMPDEST DUP3 DUP2 MSTORE DUP3 PUSH1 0x20 DUP3 ADD MSTORE DUP3 PUSH1 0x40 DUP3 ADD MSTORE DUP3 PUSH1 0x60 DUP3 ADD MSTORE DUP3 PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0x60 PUSH1 0xA0 DUP3 ADD MSTORE DUP3 PUSH1 0xC0 DUP3 ADD MSTORE DUP3 PUSH1 0xE0 DUP3 ADD MSTORE DUP3 PUSH2 0x100 DUP3 ADD MSTORE DUP3 PUSH2 0x120 DUP3 ADD MSTORE ADD MSTORE PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0xA PUSH1 0x40 MLOAD SWAP2 PUSH2 0x98E DUP4 PUSH2 0xC9E JUMP JUMPDEST DUP1 SLOAD DUP4 MSTORE PUSH1 0x1 DUP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x2 DUP2 ADD SLOAD PUSH1 0x40 DUP5 ADD MSTORE PUSH1 0x3 DUP2 ADD SLOAD PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x4 DUP2 ADD SLOAD PUSH1 0x80 DUP5 ADD MSTORE PUSH2 0x9CF PUSH1 0x5 DUP3 ADD PUSH2 0xD17 JUMP JUMPDEST PUSH1 0xA0 DUP5 ADD MSTORE PUSH1 0x6 DUP2 ADD SLOAD PUSH1 0xC0 DUP5 ADD MSTORE PUSH1 0x7 DUP2 ADD SLOAD PUSH1 0xE0 DUP5 ADD MSTORE PUSH1 0xFF PUSH1 0x8 DUP3 ADD SLOAD AND ISZERO ISZERO PUSH2 0x100 DUP5 ADD MSTORE PUSH1 0x9 DUP2 ADD SLOAD PUSH2 0x120 DUP5 ADD MSTORE ADD SLOAD PUSH2 0x140 DUP3 ADD MSTORE PUSH1 0x40 MLOAD DUP1 SWAP2 PUSH1 0x20 DUP3 MSTORE DUP1 MLOAD PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x20 DUP3 ADD MLOAD AND PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x40 DUP2 ADD MLOAD PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x60 DUP2 ADD MLOAD PUSH1 0x80 DUP4 ADD MSTORE PUSH1 0x80 DUP2 ADD MLOAD PUSH1 0xA0 DUP4 ADD MSTORE PUSH1 0xA0 DUP2 ADD MLOAD PUSH2 0x140 PUSH2 0xA6B PUSH2 0x160 SWAP3 DUP4 PUSH1 0xC0 DUP8 ADD MSTORE PUSH2 0x180 DUP7 ADD SWAP1 PUSH2 0xC30 JUMP JUMPDEST SWAP3 PUSH1 0xC0 DUP2 ADD MLOAD PUSH1 0xE0 DUP7 ADD MSTORE PUSH1 0xE0 DUP2 ADD MLOAD PUSH2 0x100 DUP7 ADD MSTORE PUSH2 0x100 DUP2 ADD MLOAD ISZERO ISZERO PUSH2 0x120 DUP7 ADD MSTORE PUSH2 0x120 DUP2 ADD MLOAD DUP3 DUP7 ADD MSTORE ADD MLOAD SWAP1 DUP4 ADD MSTORE SUB SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0xE2 JUMPI PUSH1 0xA0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xE2 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x84 CALLDATALOAD PUSH2 0xACF PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x3 SLOAD AND CALLER EQ PUSH2 0xDBD JUMP JUMPDEST DUP2 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x20 MSTORE PUSH2 0xAE8 DUP3 PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD EQ PUSH2 0xE03 JUMP JUMPDEST DUP2 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x20 MSTORE PUSH2 0xB05 PUSH1 0xFF PUSH1 0x8 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SLOAD AND PUSH2 0xE47 JUMP JUMPDEST DUP2 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x24 CALLDATALOAD PUSH1 0x2 DUP3 ADD SSTORE PUSH1 0x44 CALLDATALOAD PUSH1 0x3 DUP3 ADD SSTORE PUSH1 0x64 CALLDATALOAD PUSH1 0x4 DUP3 ADD SSTORE DUP2 PUSH2 0xB59 JUMPI JUMPDEST DUP3 PUSH32 0x912CE63C438ACA9D2F50D1D12DE5B42EFBCC84CE223B08122E8C2E3C000CA1F8 PUSH1 0x0 DUP1 LOG2 STOP JUMPDEST PUSH1 0x7 PUSH2 0xB68 SWAP2 ADD SWAP2 DUP3 SLOAD PUSH2 0xDF6 JUMP JUMPDEST SWAP1 SSTORE DUP2 DUP1 PUSH2 0xB31 JUMP JUMPDEST CALLVALUE PUSH2 0xE2 JUMPI PUSH1 0x20 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0xE2 JUMPI SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0xB94 PUSH2 0xC1A JUMP JUMPDEST AND PUSH1 0x0 MSTORE PUSH1 0x1 DUP1 DUP4 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP3 DUP4 SLOAD DUP1 DUP5 MSTORE DUP2 DUP5 ADD SWAP1 DUP2 SWAP6 PUSH1 0x0 MSTORE DUP3 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0xC07 JUMPI POP POP POP DUP4 PUSH2 0xBCF SWAP2 SUB DUP5 PUSH2 0xCBB JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP3 DUP2 DUP5 ADD SWAP1 DUP3 DUP6 MSTORE MLOAD DUP1 SWAP2 MSTORE PUSH1 0x40 DUP5 ADD SWAP5 SWAP2 PUSH1 0x0 JUMPDEST DUP3 DUP2 LT PUSH2 0xBF4 JUMPI DUP6 DUP8 SUB DUP7 RETURN JUMPDEST DUP4 MLOAD DUP8 MSTORE SWAP6 DUP2 ADD SWAP6 SWAP3 DUP2 ADD SWAP3 DUP5 ADD PUSH2 0xBE7 JUMP JUMPDEST DUP3 SLOAD DUP5 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP2 DUP6 ADD SWAP2 DUP6 ADD PUSH2 0xBB9 JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0xE2 JUMPI JUMP JUMPDEST SWAP2 SWAP1 DUP3 MLOAD SWAP3 DUP4 DUP3 MSTORE PUSH1 0x0 JUMPDEST DUP5 DUP2 LT PUSH2 0xC5C JUMPI POP POP DUP3 PUSH1 0x0 PUSH1 0x20 DUP1 SWAP5 SWAP6 DUP5 ADD ADD MSTORE PUSH1 0x1F DUP1 NOT SWAP2 ADD AND ADD ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP2 DUP4 ADD DUP2 ADD MLOAD DUP5 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0xC3B JUMP JUMPDEST DUP1 SLOAD DUP3 LT ISZERO PUSH2 0xC88 JUMPI PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SWAP1 PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x160 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x75F JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x75F JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x1 DUP3 DUP2 SHR SWAP3 AND DUP1 ISZERO PUSH2 0xD0D JUMPI JUMPDEST PUSH1 0x20 DUP4 LT EQ PUSH2 0xCF7 JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0xCEC JUMP JUMPDEST SWAP1 PUSH1 0x40 MLOAD SWAP2 DUP3 PUSH1 0x0 DUP3 SLOAD SWAP3 PUSH2 0xD2B DUP5 PUSH2 0xCDD JUMP JUMPDEST SWAP1 DUP2 DUP5 MSTORE PUSH1 0x1 SWAP5 DUP6 DUP2 AND SWAP1 DUP2 PUSH1 0x0 EQ PUSH2 0xD9A JUMPI POP PUSH1 0x1 EQ PUSH2 0xD57 JUMPI JUMPDEST POP POP PUSH2 0xD55 SWAP3 POP SUB DUP4 PUSH2 0xCBB JUMP JUMPDEST JUMP JUMPDEST SWAP1 SWAP4 SWAP2 POP PUSH1 0x0 MSTORE PUSH1 0x20 SWAP1 DUP2 PUSH1 0x0 KECCAK256 SWAP4 PUSH1 0x0 SWAP2 JUMPDEST DUP2 DUP4 LT PUSH2 0xD82 JUMPI POP POP PUSH2 0xD55 SWAP4 POP DUP3 ADD ADD CODESIZE DUP1 PUSH2 0xD47 JUMP JUMPDEST DUP6 SLOAD DUP9 DUP5 ADD DUP6 ADD MSTORE SWAP5 DUP6 ADD SWAP5 DUP8 SWAP5 POP SWAP2 DUP4 ADD SWAP2 PUSH2 0xD6A JUMP JUMPDEST SWAP2 POP POP PUSH2 0xD55 SWAP5 POP PUSH1 0x20 SWAP3 POP PUSH1 0xFF NOT AND DUP3 DUP5 ADD MSTORE ISZERO ISZERO PUSH1 0x5 SHL DUP3 ADD ADD CODESIZE DUP1 PUSH2 0xD47 JUMP JUMPDEST ISZERO PUSH2 0xDC4 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xA PUSH1 0x24 DUP3 ADD MSTORE PUSH10 0x27B7363C9030B236B4B7 PUSH1 0xB1 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP2 SWAP1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0x4AD JUMPI JUMP JUMPDEST ISZERO PUSH2 0xE0A JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x141BDB1A58DE48191BD95CC81B9BDD08195E1A5CDD PUSH1 0x5A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0xE4E JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x506F6C696379206973206E6F7420616374697665 PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0xE91 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x27B7363C9031B630B4B6B990383937B1B2B9B9B7B9 PUSH1 0x59 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 JUMP BYTE 0xCB PUSH17 0x171DB0FB354B395F3A0C6CC754E9ED07E DUP4 CREATE2 SLOAD PUSH14 0x55ECFCDFA8317464736F6C634300 ADDMOD SGT STOP CALLER ","sourceMap":"153:6464:5:-:0;;;;;;;686:1;;153:6464;1348:18;153:6464;;-1:-1:-1;;;;;;153:6464:5;1356:10;153:6464;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"abi_decode_address":{"entryPoint":3098,"id":null,"parameterSlots":0,"returnSlots":1},"abi_encode_string":{"entryPoint":3120,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_uint256":{"entryPoint":3574,"id":null,"parameterSlots":2,"returnSlots":1},"copy_array_from_storage_to_memory_string":{"entryPoint":3351,"id":null,"parameterSlots":1,"returnSlots":1},"extract_byte_array_length":{"entryPoint":3293,"id":null,"parameterSlots":1,"returnSlots":1},"finalize_allocation":{"entryPoint":3259,"id":null,"parameterSlots":2,"returnSlots":0},"finalize_allocation_14697":{"entryPoint":3230,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral":{"entryPoint":3655,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_519e":{"entryPoint":3517,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_aea6":{"entryPoint":3587,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_d946":{"entryPoint":3722,"id":null,"parameterSlots":1,"returnSlots":0},"storage_array_index_access_uint256_dyn":{"entryPoint":3184,"id":null,"parameterSlots":2,"returnSlots":2}},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"608080604052600436101561001357600080fd5b60003560e01c90816319ac461414610b715750806326d13b0014610aa35780632b07fce31461090f5780633a8e94f5146108be5780633d36adc514610866578063536a7e4f1461083d57806376d0629e146104c35780638d3629c0146103f3578063943f31a614610351578063b20e8bcc14610270578063cad0b8db14610252578063d3e8948314610190578063f8112568146100e75763f851a440146100b957600080fd5b346100e25760003660031901126100e2576003546040516001600160a01b039091168152602090f35b600080fd5b346100e25760403660031901126100e2576004357f899732479a7415c852b353630c0c7aa1a6f275d4e17e3196363d995b3e1da72f602060243561013660018060a01b03600454163314610e8a565b836000526000825261014e8460406000205414610e03565b836000526000825261016a60ff60086040600020015416610e47565b8360005260008252600a604060002001610185828254610df6565b9055604051908152a2005b346100e25760203660031901126100e25760043560005260006020526040600020805460018060a01b036001830154169160028101546003820154916004810154926101de60058301610d17565b9361022f60068401549560078501549260ff60088701541694600a6009880154970154976040519b8c9b8c5260208c015260408b015260608a015260808901526101608060a08a0152880190610c30565b9460c087015260e086015215156101008501526101208401526101408301520390f35b346100e25760003660031901126100e2576020600254604051908152f35b346100e25760203660031901126100e25760043561029960018060a01b03600354163314610dbd565b8060005260006020526102b28160406000205414610e03565b80600052600060205260ff600860406000200154161561030c57806000526000602052600860406000200160ff1981541690557fbb1ae509b65d9486a686f3f1b0435353031b5607109dc80aa4d063887e10f3e8600080a2005b60405162461bcd60e51b815260206004820152601a60248201527f506f6c69637920697320616c726561647920696e6163746976650000000000006044820152606490fd5b346100e25760403660031901126100e2576024356001600160a01b0381811691600435908390036100e257602092816000526000845260406000209182541492836103e3575b5050816103d4575b816103c5575b816103b6575b506040519015158152f35b600791500154421115826103ab565b600681015442101591506103a5565b600881015460ff16915061039f565b6001830154161491508380610397565b346100e2576020806003193601126100e2576004359061041e60018060a01b03600454163314610e8a565b81600052600081526104368260406000205414610e03565b816000526000815261045260ff60086040600020015416610e47565b81600052600081526009604060002001908154600181018091116104ad577fde9d9328490fbf56bf6fb489ad69f4cc297e9642da86fbd4f5c823494a4e01f692558260005260008152600960406000200154604051908152a2005b634e487b7160e01b600052601160045260246000fd5b346100e25760c03660031901126100e2576104dc610c1a565b6084359067ffffffffffffffff82116100e257366023830112156100e257816004013567ffffffffffffffff811161075f5760405192610526601f8301601f191660200185610cbb565b81845236602483830101116100e25781600092602460209301838701378401015261055c60018060a01b03600354163314610dbd565b6002549160001983146104ad576001830160025561057c60a43542610df6565b6040519161058983610c9e565b84835260018060a01b038416602084015260243560408401526044356060840152606435608084015260a08301524260c083015260e0820152600161010082015260006101208201526000610140820152826000526000602052604060002090805182556001820160018060a01b036020830151166bffffffffffffffffffffffff60a01b82541617905560408101516002830155606081015160038301556080810151600483015560a081015180519067ffffffffffffffff821161075f576106566005850154610cdd565b601f81116107f6575b50602090601f8311600114610780579180600a949261014094600092610775575b50508160011b916000199060031b1c19161760058501555b60c0810151600685015560e0810151600785015560088401610100820151151560ff801983541691161790556101208101516009850155015191015560018060a01b03811660005260016020526040600020918254926801000000000000000084101561075f5783610711916001602096018155610c70565b815460001960039290921b91821b19169083901b179055604051916001600160a01b0316817f692975d6d42aec50e0f6ff672acde3bf011e71355ed86dd49de0a1f533950cba600080a38152f35b634e487b7160e01b600052604160045260246000fd5b015190508880610680565b906005850160005260206000209160005b601f19851681106107de575092600a94926001926101409583601f198116106107c5575b505050811b016005850155610698565b015160001960f88460031b161c191690558880806107b5565b91926020600181928685015181550194019201610791565b600585016000526020600020601f840160051c810160208510610836575b601f830160051c8201811061082a57505061065f565b60008155600101610814565b5080610814565b346100e25760003660031901126100e2576004546040516001600160a01b039091168152602090f35b346100e25760403660031901126100e25761087f610c1a565b6001600160a01b03166000908152600160205260409020805460243591908210156100e2576020916108b091610c70565b90546040519160031b1c8152f35b346100e25760203660031901126100e2576108d7610c1a565b6003546001600160a01b0391906108f19083163314610dbd565b166bffffffffffffffffffffffff60a01b6004541617600455600080f35b346100e25760203660031901126100e257600061014060405161093181610c9e565b828152826020820152826040820152826060820152826080820152606060a08201528260c08201528260e08201528261010082015282610120820152015260043560005260006020526040600020600a6040519161098e83610c9e565b8054835260018101546001600160a01b031660208401526002810154604084015260038101546060840152600481015460808401526109cf60058201610d17565b60a0840152600681015460c0840152600781015460e084015260ff6008820154161515610100840152600981015461012084015201546101408201526040518091602082528051602083015260018060a01b0360208201511660408301526040810151606083015260608101516080830152608081015160a083015260a0810151610140610a6b610160928360c0870152610180860190610c30565b9260c081015160e086015260e08101516101008601526101008101511515610120860152610120810151828601520151908301520390f35b346100e25760a03660031901126100e257600435608435610acf60018060a01b03600354163314610dbd565b816000526000602052610ae88260406000205414610e03565b816000526000602052610b0560ff60086040600020015416610e47565b816000526000602052604060002060243560028201556044356003820155606435600482015581610b59575b827f912ce63c438aca9d2f50d1d12de5b42efbcc84ce223b08122e8c2e3c000ca1f8600080a2005b6007610b689101918254610df6565b90558180610b31565b346100e2576020806003193601126100e257906001600160a01b03610b94610c1a565b1660005260018083526040600020928354808452818401908195600052826000209060005b818110610c075750505083610bcf910384610cbb565b60405192818401908285525180915260408401949160005b828110610bf45785870386f35b8351875295810195928101928401610be7565b8254845292840192918501918501610bb9565b600435906001600160a01b03821682036100e257565b919082519283825260005b848110610c5c575050826000602080949584010152601f8019910116010190565b602081830181015184830182015201610c3b565b8054821015610c885760005260206000200190600090565b634e487b7160e01b600052603260045260246000fd5b610160810190811067ffffffffffffffff82111761075f57604052565b90601f8019910116810190811067ffffffffffffffff82111761075f57604052565b90600182811c92168015610d0d575b6020831014610cf757565b634e487b7160e01b600052602260045260246000fd5b91607f1691610cec565b9060405191826000825492610d2b84610cdd565b908184526001948581169081600014610d9a5750600114610d57575b5050610d5592500383610cbb565b565b9093915060005260209081600020936000915b818310610d82575050610d5593508201013880610d47565b85548884018501529485019487945091830191610d6a565b915050610d5594506020925060ff191682840152151560051b8201013880610d47565b15610dc457565b60405162461bcd60e51b815260206004820152600a60248201526927b7363c9030b236b4b760b11b6044820152606490fd5b919082018092116104ad57565b15610e0a57565b60405162461bcd60e51b8152602060048201526015602482015274141bdb1a58de48191bd95cc81b9bdd08195e1a5cdd605a1b6044820152606490fd5b15610e4e57565b60405162461bcd60e51b8152602060048201526014602482015273506f6c696379206973206e6f742061637469766560601b6044820152606490fd5b15610e9157565b60405162461bcd60e51b815260206004820152601560248201527427b7363c9031b630b4b6b990383937b1b2b9b9b7b960591b6044820152606490fdfea2646970667358221220561acb700171db0fb354b395f3a0c6cc754e9ed07e83f5546d55ecfcdfa8317464736f6c63430008130033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x13 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0x19AC4614 EQ PUSH2 0xB71 JUMPI POP DUP1 PUSH4 0x26D13B00 EQ PUSH2 0xAA3 JUMPI DUP1 PUSH4 0x2B07FCE3 EQ PUSH2 0x90F JUMPI DUP1 PUSH4 0x3A8E94F5 EQ PUSH2 0x8BE JUMPI DUP1 PUSH4 0x3D36ADC5 EQ PUSH2 0x866 JUMPI DUP1 PUSH4 0x536A7E4F EQ PUSH2 0x83D JUMPI DUP1 PUSH4 0x76D0629E EQ PUSH2 0x4C3 JUMPI DUP1 PUSH4 0x8D3629C0 EQ PUSH2 0x3F3 JUMPI DUP1 PUSH4 0x943F31A6 EQ PUSH2 0x351 JUMPI DUP1 PUSH4 0xB20E8BCC EQ PUSH2 0x270 JUMPI DUP1 PUSH4 0xCAD0B8DB EQ PUSH2 0x252 JUMPI DUP1 PUSH4 0xD3E89483 EQ PUSH2 0x190 JUMPI DUP1 PUSH4 0xF8112568 EQ PUSH2 0xE7 JUMPI PUSH4 0xF851A440 EQ PUSH2 0xB9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0xE2 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xE2 JUMPI PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0xE2 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xE2 JUMPI PUSH1 0x4 CALLDATALOAD PUSH32 0x899732479A7415C852B353630C0C7AA1A6F275D4E17E3196363D995B3E1DA72F PUSH1 0x20 PUSH1 0x24 CALLDATALOAD PUSH2 0x136 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x4 SLOAD AND CALLER EQ PUSH2 0xE8A JUMP JUMPDEST DUP4 PUSH1 0x0 MSTORE PUSH1 0x0 DUP3 MSTORE PUSH2 0x14E DUP5 PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD EQ PUSH2 0xE03 JUMP JUMPDEST DUP4 PUSH1 0x0 MSTORE PUSH1 0x0 DUP3 MSTORE PUSH2 0x16A PUSH1 0xFF PUSH1 0x8 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SLOAD AND PUSH2 0xE47 JUMP JUMPDEST DUP4 PUSH1 0x0 MSTORE PUSH1 0x0 DUP3 MSTORE PUSH1 0xA PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD PUSH2 0x185 DUP3 DUP3 SLOAD PUSH2 0xDF6 JUMP JUMPDEST SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG2 STOP JUMPDEST CALLVALUE PUSH2 0xE2 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xE2 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x1 DUP4 ADD SLOAD AND SWAP2 PUSH1 0x2 DUP2 ADD SLOAD PUSH1 0x3 DUP3 ADD SLOAD SWAP2 PUSH1 0x4 DUP2 ADD SLOAD SWAP3 PUSH2 0x1DE PUSH1 0x5 DUP4 ADD PUSH2 0xD17 JUMP JUMPDEST SWAP4 PUSH2 0x22F PUSH1 0x6 DUP5 ADD SLOAD SWAP6 PUSH1 0x7 DUP6 ADD SLOAD SWAP3 PUSH1 0xFF PUSH1 0x8 DUP8 ADD SLOAD AND SWAP5 PUSH1 0xA PUSH1 0x9 DUP9 ADD SLOAD SWAP8 ADD SLOAD SWAP8 PUSH1 0x40 MLOAD SWAP12 DUP13 SWAP12 DUP13 MSTORE PUSH1 0x20 DUP13 ADD MSTORE PUSH1 0x40 DUP12 ADD MSTORE PUSH1 0x60 DUP11 ADD MSTORE PUSH1 0x80 DUP10 ADD MSTORE PUSH2 0x160 DUP1 PUSH1 0xA0 DUP11 ADD MSTORE DUP9 ADD SWAP1 PUSH2 0xC30 JUMP JUMPDEST SWAP5 PUSH1 0xC0 DUP8 ADD MSTORE PUSH1 0xE0 DUP7 ADD MSTORE ISZERO ISZERO PUSH2 0x100 DUP6 ADD MSTORE PUSH2 0x120 DUP5 ADD MSTORE PUSH2 0x140 DUP4 ADD MSTORE SUB SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0xE2 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xE2 JUMPI PUSH1 0x20 PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0xE2 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xE2 JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x299 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x3 SLOAD AND CALLER EQ PUSH2 0xDBD JUMP JUMPDEST DUP1 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x20 MSTORE PUSH2 0x2B2 DUP2 PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD EQ PUSH2 0xE03 JUMP JUMPDEST DUP1 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x8 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SLOAD AND ISZERO PUSH2 0x30C JUMPI DUP1 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x20 MSTORE PUSH1 0x8 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD PUSH1 0xFF NOT DUP2 SLOAD AND SWAP1 SSTORE PUSH32 0xBB1AE509B65D9486A686F3F1B0435353031B5607109DC80AA4D063887E10F3E8 PUSH1 0x0 DUP1 LOG2 STOP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x506F6C69637920697320616C726561647920696E616374697665000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0xE2 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xE2 JUMPI PUSH1 0x24 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 DUP2 AND SWAP2 PUSH1 0x4 CALLDATALOAD SWAP1 DUP4 SWAP1 SUB PUSH2 0xE2 JUMPI PUSH1 0x20 SWAP3 DUP2 PUSH1 0x0 MSTORE PUSH1 0x0 DUP5 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP2 DUP3 SLOAD EQ SWAP3 DUP4 PUSH2 0x3E3 JUMPI JUMPDEST POP POP DUP2 PUSH2 0x3D4 JUMPI JUMPDEST DUP2 PUSH2 0x3C5 JUMPI JUMPDEST DUP2 PUSH2 0x3B6 JUMPI JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST PUSH1 0x7 SWAP2 POP ADD SLOAD TIMESTAMP GT ISZERO DUP3 PUSH2 0x3AB JUMP JUMPDEST PUSH1 0x6 DUP2 ADD SLOAD TIMESTAMP LT ISZERO SWAP2 POP PUSH2 0x3A5 JUMP JUMPDEST PUSH1 0x8 DUP2 ADD SLOAD PUSH1 0xFF AND SWAP2 POP PUSH2 0x39F JUMP JUMPDEST PUSH1 0x1 DUP4 ADD SLOAD AND EQ SWAP2 POP DUP4 DUP1 PUSH2 0x397 JUMP JUMPDEST CALLVALUE PUSH2 0xE2 JUMPI PUSH1 0x20 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0xE2 JUMPI PUSH1 0x4 CALLDATALOAD SWAP1 PUSH2 0x41E PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x4 SLOAD AND CALLER EQ PUSH2 0xE8A JUMP JUMPDEST DUP2 PUSH1 0x0 MSTORE PUSH1 0x0 DUP2 MSTORE PUSH2 0x436 DUP3 PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD EQ PUSH2 0xE03 JUMP JUMPDEST DUP2 PUSH1 0x0 MSTORE PUSH1 0x0 DUP2 MSTORE PUSH2 0x452 PUSH1 0xFF PUSH1 0x8 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SLOAD AND PUSH2 0xE47 JUMP JUMPDEST DUP2 PUSH1 0x0 MSTORE PUSH1 0x0 DUP2 MSTORE PUSH1 0x9 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SWAP1 DUP2 SLOAD PUSH1 0x1 DUP2 ADD DUP1 SWAP2 GT PUSH2 0x4AD JUMPI PUSH32 0xDE9D9328490FBF56BF6FB489AD69F4CC297E9642DA86FBD4F5C823494A4E01F6 SWAP3 SSTORE DUP3 PUSH1 0x0 MSTORE PUSH1 0x0 DUP2 MSTORE PUSH1 0x9 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG2 STOP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST CALLVALUE PUSH2 0xE2 JUMPI PUSH1 0xC0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xE2 JUMPI PUSH2 0x4DC PUSH2 0xC1A JUMP JUMPDEST PUSH1 0x84 CALLDATALOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0xE2 JUMPI CALLDATASIZE PUSH1 0x23 DUP4 ADD SLT ISZERO PUSH2 0xE2 JUMPI DUP2 PUSH1 0x4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x75F JUMPI PUSH1 0x40 MLOAD SWAP3 PUSH2 0x526 PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP6 PUSH2 0xCBB JUMP JUMPDEST DUP2 DUP5 MSTORE CALLDATASIZE PUSH1 0x24 DUP4 DUP4 ADD ADD GT PUSH2 0xE2 JUMPI DUP2 PUSH1 0x0 SWAP3 PUSH1 0x24 PUSH1 0x20 SWAP4 ADD DUP4 DUP8 ADD CALLDATACOPY DUP5 ADD ADD MSTORE PUSH2 0x55C PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x3 SLOAD AND CALLER EQ PUSH2 0xDBD JUMP JUMPDEST PUSH1 0x2 SLOAD SWAP2 PUSH1 0x0 NOT DUP4 EQ PUSH2 0x4AD JUMPI PUSH1 0x1 DUP4 ADD PUSH1 0x2 SSTORE PUSH2 0x57C PUSH1 0xA4 CALLDATALOAD TIMESTAMP PUSH2 0xDF6 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 PUSH2 0x589 DUP4 PUSH2 0xC9E JUMP JUMPDEST DUP5 DUP4 MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x24 CALLDATALOAD PUSH1 0x40 DUP5 ADD MSTORE PUSH1 0x44 CALLDATALOAD PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x64 CALLDATALOAD PUSH1 0x80 DUP5 ADD MSTORE PUSH1 0xA0 DUP4 ADD MSTORE TIMESTAMP PUSH1 0xC0 DUP4 ADD MSTORE PUSH1 0xE0 DUP3 ADD MSTORE PUSH1 0x1 PUSH2 0x100 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x120 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x140 DUP3 ADD MSTORE DUP3 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 DUP1 MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x20 DUP4 ADD MLOAD AND PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0xA0 SHL DUP3 SLOAD AND OR SWAP1 SSTORE PUSH1 0x40 DUP2 ADD MLOAD PUSH1 0x2 DUP4 ADD SSTORE PUSH1 0x60 DUP2 ADD MLOAD PUSH1 0x3 DUP4 ADD SSTORE PUSH1 0x80 DUP2 ADD MLOAD PUSH1 0x4 DUP4 ADD SSTORE PUSH1 0xA0 DUP2 ADD MLOAD DUP1 MLOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0x75F JUMPI PUSH2 0x656 PUSH1 0x5 DUP6 ADD SLOAD PUSH2 0xCDD JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x7F6 JUMPI JUMPDEST POP PUSH1 0x20 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x780 JUMPI SWAP2 DUP1 PUSH1 0xA SWAP5 SWAP3 PUSH2 0x140 SWAP5 PUSH1 0x0 SWAP3 PUSH2 0x775 JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0x5 DUP6 ADD SSTORE JUMPDEST PUSH1 0xC0 DUP2 ADD MLOAD PUSH1 0x6 DUP6 ADD SSTORE PUSH1 0xE0 DUP2 ADD MLOAD PUSH1 0x7 DUP6 ADD SSTORE PUSH1 0x8 DUP5 ADD PUSH2 0x100 DUP3 ADD MLOAD ISZERO ISZERO PUSH1 0xFF DUP1 NOT DUP4 SLOAD AND SWAP2 AND OR SWAP1 SSTORE PUSH2 0x120 DUP2 ADD MLOAD PUSH1 0x9 DUP6 ADD SSTORE ADD MLOAD SWAP2 ADD SSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP2 DUP3 SLOAD SWAP3 PUSH9 0x10000000000000000 DUP5 LT ISZERO PUSH2 0x75F JUMPI DUP4 PUSH2 0x711 SWAP2 PUSH1 0x1 PUSH1 0x20 SWAP7 ADD DUP2 SSTORE PUSH2 0xC70 JUMP JUMPDEST DUP2 SLOAD PUSH1 0x0 NOT PUSH1 0x3 SWAP3 SWAP1 SWAP3 SHL SWAP2 DUP3 SHL NOT AND SWAP1 DUP4 SWAP1 SHL OR SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH32 0x692975D6D42AEC50E0F6FF672ACDE3BF011E71355ED86DD49DE0A1F533950CBA PUSH1 0x0 DUP1 LOG3 DUP2 MSTORE RETURN JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADD MLOAD SWAP1 POP DUP9 DUP1 PUSH2 0x680 JUMP JUMPDEST SWAP1 PUSH1 0x5 DUP6 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP2 PUSH1 0x0 JUMPDEST PUSH1 0x1F NOT DUP6 AND DUP2 LT PUSH2 0x7DE JUMPI POP SWAP3 PUSH1 0xA SWAP5 SWAP3 PUSH1 0x1 SWAP3 PUSH2 0x140 SWAP6 DUP4 PUSH1 0x1F NOT DUP2 AND LT PUSH2 0x7C5 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0x5 DUP6 ADD SSTORE PUSH2 0x698 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE DUP9 DUP1 DUP1 PUSH2 0x7B5 JUMP JUMPDEST SWAP2 SWAP3 PUSH1 0x20 PUSH1 0x1 DUP2 SWAP3 DUP7 DUP6 ADD MLOAD DUP2 SSTORE ADD SWAP5 ADD SWAP3 ADD PUSH2 0x791 JUMP JUMPDEST PUSH1 0x5 DUP6 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP6 LT PUSH2 0x836 JUMPI JUMPDEST PUSH1 0x1F DUP4 ADD PUSH1 0x5 SHR DUP3 ADD DUP2 LT PUSH2 0x82A JUMPI POP POP PUSH2 0x65F JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x814 JUMP JUMPDEST POP DUP1 PUSH2 0x814 JUMP JUMPDEST CALLVALUE PUSH2 0xE2 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xE2 JUMPI PUSH1 0x4 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0xE2 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xE2 JUMPI PUSH2 0x87F PUSH2 0xC1A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x24 CALLDATALOAD SWAP2 SWAP1 DUP3 LT ISZERO PUSH2 0xE2 JUMPI PUSH1 0x20 SWAP2 PUSH2 0x8B0 SWAP2 PUSH2 0xC70 JUMP JUMPDEST SWAP1 SLOAD PUSH1 0x40 MLOAD SWAP2 PUSH1 0x3 SHL SHR DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0xE2 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xE2 JUMPI PUSH2 0x8D7 PUSH2 0xC1A JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 PUSH2 0x8F1 SWAP1 DUP4 AND CALLER EQ PUSH2 0xDBD JUMP JUMPDEST AND PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0xA0 SHL PUSH1 0x4 SLOAD AND OR PUSH1 0x4 SSTORE PUSH1 0x0 DUP1 RETURN JUMPDEST CALLVALUE PUSH2 0xE2 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xE2 JUMPI PUSH1 0x0 PUSH2 0x140 PUSH1 0x40 MLOAD PUSH2 0x931 DUP2 PUSH2 0xC9E JUMP JUMPDEST DUP3 DUP2 MSTORE DUP3 PUSH1 0x20 DUP3 ADD MSTORE DUP3 PUSH1 0x40 DUP3 ADD MSTORE DUP3 PUSH1 0x60 DUP3 ADD MSTORE DUP3 PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0x60 PUSH1 0xA0 DUP3 ADD MSTORE DUP3 PUSH1 0xC0 DUP3 ADD MSTORE DUP3 PUSH1 0xE0 DUP3 ADD MSTORE DUP3 PUSH2 0x100 DUP3 ADD MSTORE DUP3 PUSH2 0x120 DUP3 ADD MSTORE ADD MSTORE PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0xA PUSH1 0x40 MLOAD SWAP2 PUSH2 0x98E DUP4 PUSH2 0xC9E JUMP JUMPDEST DUP1 SLOAD DUP4 MSTORE PUSH1 0x1 DUP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x2 DUP2 ADD SLOAD PUSH1 0x40 DUP5 ADD MSTORE PUSH1 0x3 DUP2 ADD SLOAD PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x4 DUP2 ADD SLOAD PUSH1 0x80 DUP5 ADD MSTORE PUSH2 0x9CF PUSH1 0x5 DUP3 ADD PUSH2 0xD17 JUMP JUMPDEST PUSH1 0xA0 DUP5 ADD MSTORE PUSH1 0x6 DUP2 ADD SLOAD PUSH1 0xC0 DUP5 ADD MSTORE PUSH1 0x7 DUP2 ADD SLOAD PUSH1 0xE0 DUP5 ADD MSTORE PUSH1 0xFF PUSH1 0x8 DUP3 ADD SLOAD AND ISZERO ISZERO PUSH2 0x100 DUP5 ADD MSTORE PUSH1 0x9 DUP2 ADD SLOAD PUSH2 0x120 DUP5 ADD MSTORE ADD SLOAD PUSH2 0x140 DUP3 ADD MSTORE PUSH1 0x40 MLOAD DUP1 SWAP2 PUSH1 0x20 DUP3 MSTORE DUP1 MLOAD PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x20 DUP3 ADD MLOAD AND PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x40 DUP2 ADD MLOAD PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x60 DUP2 ADD MLOAD PUSH1 0x80 DUP4 ADD MSTORE PUSH1 0x80 DUP2 ADD MLOAD PUSH1 0xA0 DUP4 ADD MSTORE PUSH1 0xA0 DUP2 ADD MLOAD PUSH2 0x140 PUSH2 0xA6B PUSH2 0x160 SWAP3 DUP4 PUSH1 0xC0 DUP8 ADD MSTORE PUSH2 0x180 DUP7 ADD SWAP1 PUSH2 0xC30 JUMP JUMPDEST SWAP3 PUSH1 0xC0 DUP2 ADD MLOAD PUSH1 0xE0 DUP7 ADD MSTORE PUSH1 0xE0 DUP2 ADD MLOAD PUSH2 0x100 DUP7 ADD MSTORE PUSH2 0x100 DUP2 ADD MLOAD ISZERO ISZERO PUSH2 0x120 DUP7 ADD MSTORE PUSH2 0x120 DUP2 ADD MLOAD DUP3 DUP7 ADD MSTORE ADD MLOAD SWAP1 DUP4 ADD MSTORE SUB SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0xE2 JUMPI PUSH1 0xA0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xE2 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x84 CALLDATALOAD PUSH2 0xACF PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x3 SLOAD AND CALLER EQ PUSH2 0xDBD JUMP JUMPDEST DUP2 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x20 MSTORE PUSH2 0xAE8 DUP3 PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD EQ PUSH2 0xE03 JUMP JUMPDEST DUP2 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x20 MSTORE PUSH2 0xB05 PUSH1 0xFF PUSH1 0x8 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SLOAD AND PUSH2 0xE47 JUMP JUMPDEST DUP2 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x24 CALLDATALOAD PUSH1 0x2 DUP3 ADD SSTORE PUSH1 0x44 CALLDATALOAD PUSH1 0x3 DUP3 ADD SSTORE PUSH1 0x64 CALLDATALOAD PUSH1 0x4 DUP3 ADD SSTORE DUP2 PUSH2 0xB59 JUMPI JUMPDEST DUP3 PUSH32 0x912CE63C438ACA9D2F50D1D12DE5B42EFBCC84CE223B08122E8C2E3C000CA1F8 PUSH1 0x0 DUP1 LOG2 STOP JUMPDEST PUSH1 0x7 PUSH2 0xB68 SWAP2 ADD SWAP2 DUP3 SLOAD PUSH2 0xDF6 JUMP JUMPDEST SWAP1 SSTORE DUP2 DUP1 PUSH2 0xB31 JUMP JUMPDEST CALLVALUE PUSH2 0xE2 JUMPI PUSH1 0x20 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0xE2 JUMPI SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0xB94 PUSH2 0xC1A JUMP JUMPDEST AND PUSH1 0x0 MSTORE PUSH1 0x1 DUP1 DUP4 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP3 DUP4 SLOAD DUP1 DUP5 MSTORE DUP2 DUP5 ADD SWAP1 DUP2 SWAP6 PUSH1 0x0 MSTORE DUP3 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0xC07 JUMPI POP POP POP DUP4 PUSH2 0xBCF SWAP2 SUB DUP5 PUSH2 0xCBB JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP3 DUP2 DUP5 ADD SWAP1 DUP3 DUP6 MSTORE MLOAD DUP1 SWAP2 MSTORE PUSH1 0x40 DUP5 ADD SWAP5 SWAP2 PUSH1 0x0 JUMPDEST DUP3 DUP2 LT PUSH2 0xBF4 JUMPI DUP6 DUP8 SUB DUP7 RETURN JUMPDEST DUP4 MLOAD DUP8 MSTORE SWAP6 DUP2 ADD SWAP6 SWAP3 DUP2 ADD SWAP3 DUP5 ADD PUSH2 0xBE7 JUMP JUMPDEST DUP3 SLOAD DUP5 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP2 DUP6 ADD SWAP2 DUP6 ADD PUSH2 0xBB9 JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0xE2 JUMPI JUMP JUMPDEST SWAP2 SWAP1 DUP3 MLOAD SWAP3 DUP4 DUP3 MSTORE PUSH1 0x0 JUMPDEST DUP5 DUP2 LT PUSH2 0xC5C JUMPI POP POP DUP3 PUSH1 0x0 PUSH1 0x20 DUP1 SWAP5 SWAP6 DUP5 ADD ADD MSTORE PUSH1 0x1F DUP1 NOT SWAP2 ADD AND ADD ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP2 DUP4 ADD DUP2 ADD MLOAD DUP5 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0xC3B JUMP JUMPDEST DUP1 SLOAD DUP3 LT ISZERO PUSH2 0xC88 JUMPI PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SWAP1 PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x160 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x75F JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x75F JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x1 DUP3 DUP2 SHR SWAP3 AND DUP1 ISZERO PUSH2 0xD0D JUMPI JUMPDEST PUSH1 0x20 DUP4 LT EQ PUSH2 0xCF7 JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0xCEC JUMP JUMPDEST SWAP1 PUSH1 0x40 MLOAD SWAP2 DUP3 PUSH1 0x0 DUP3 SLOAD SWAP3 PUSH2 0xD2B DUP5 PUSH2 0xCDD JUMP JUMPDEST SWAP1 DUP2 DUP5 MSTORE PUSH1 0x1 SWAP5 DUP6 DUP2 AND SWAP1 DUP2 PUSH1 0x0 EQ PUSH2 0xD9A JUMPI POP PUSH1 0x1 EQ PUSH2 0xD57 JUMPI JUMPDEST POP POP PUSH2 0xD55 SWAP3 POP SUB DUP4 PUSH2 0xCBB JUMP JUMPDEST JUMP JUMPDEST SWAP1 SWAP4 SWAP2 POP PUSH1 0x0 MSTORE PUSH1 0x20 SWAP1 DUP2 PUSH1 0x0 KECCAK256 SWAP4 PUSH1 0x0 SWAP2 JUMPDEST DUP2 DUP4 LT PUSH2 0xD82 JUMPI POP POP PUSH2 0xD55 SWAP4 POP DUP3 ADD ADD CODESIZE DUP1 PUSH2 0xD47 JUMP JUMPDEST DUP6 SLOAD DUP9 DUP5 ADD DUP6 ADD MSTORE SWAP5 DUP6 ADD SWAP5 DUP8 SWAP5 POP SWAP2 DUP4 ADD SWAP2 PUSH2 0xD6A JUMP JUMPDEST SWAP2 POP POP PUSH2 0xD55 SWAP5 POP PUSH1 0x20 SWAP3 POP PUSH1 0xFF NOT AND DUP3 DUP5 ADD MSTORE ISZERO ISZERO PUSH1 0x5 SHL DUP3 ADD ADD CODESIZE DUP1 PUSH2 0xD47 JUMP JUMPDEST ISZERO PUSH2 0xDC4 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xA PUSH1 0x24 DUP3 ADD MSTORE PUSH10 0x27B7363C9030B236B4B7 PUSH1 0xB1 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP2 SWAP1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0x4AD JUMPI JUMP JUMPDEST ISZERO PUSH2 0xE0A JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x141BDB1A58DE48191BD95CC81B9BDD08195E1A5CDD PUSH1 0x5A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0xE4E JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x506F6C696379206973206E6F7420616374697665 PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0xE91 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x27B7363C9031B630B4B6B990383937B1B2B9B9B7B9 PUSH1 0x59 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 JUMP BYTE 0xCB PUSH17 0x171DB0FB354B395F3A0C6CC754E9ED07E DUP4 CREATE2 SLOAD PUSH14 0x55ECFCDFA8317464736F6C634300 ADDMOD SGT STOP CALLER ","sourceMap":"153:6464:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;153:6464:5;;;;;;;;-1:-1:-1;;;;;153:6464:5;;;;;;;;;;;;;;;;;;-1:-1:-1;;153:6464:5;;;;;;5349:34;153:6464;;;1233:63;153:6464;;;;;;;;1241:10;:29;1233:63;:::i;:::-;153:6464;;;;;;5126:75;153:6464;;;;;5134:41;5126:75;:::i;:::-;153:6464;;;;;;5211:61;153:6464;5219:28;153:6464;;;5219:28;153:6464;;5211:61;:::i;:::-;153:6464;;;;;;5291:32;153:6464;;;5291:32;:43;153:6464;;;5291:43;:::i;:::-;153:6464;;;;;;;5349:34;153:6464;;;;;;;-1:-1:-1;;153:6464:5;;;;;;;;;;;;;;;;;;;;;;548:42;;153:6464;;548:42;;;;153:6464;;548:42;;153:6464;548:42;153:6464;548:42;;153:6464;548:42;;;;;;:::i;:::-;;153:6464;548:42;;;153:6464;548:42;;;;153:6464;548:42;153:6464;548:42;;;153:6464;;548:42;;;;;153:6464;548:42;;153:6464;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;153:6464:5;;;;;656:31;153:6464;;;;;;;;;;;;;-1:-1:-1;;153:6464:5;;;;;;1122:42;153:6464;;;;;;;;1130:10;:19;1122:42;:::i;:::-;153:6464;;;;;;4139:75;153:6464;;;;;4147:41;4139:75;:::i;:::-;153:6464;;;;;;;4232:28;153:6464;;;4232:28;153:6464;;;;;;;;;;;4232:28;153:6464;;;4310:28;153:6464;;;;;;;4361:26;153:6464;4361:26;;153:6464;;;;-1:-1:-1;;;153:6464:5;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;153:6464:5;;;;;;-1:-1:-1;;;;;153:6464:5;;;;;;;;;;;;;;;;;;;;;;;;;;5814:28;:76;;;;153:6464;5814:107;;;;;153:6464;5814:158;;;153:6464;5814:207;;;153:6464;;;;;;;;;;5814:207;6007:14;;;;153:6464;5988:15;:33;;5814:207;;;:158;5956:16;;;153:6464;5937:15;:35;;;-1:-1:-1;5814:158:5;;:107;5906:15;;;153:6464;;;;-1:-1:-1;5814:107:5;;:76;153:6464;5858:19;;153:6464;;5858:32;;-1:-1:-1;5814:76:5;;;;153:6464;;;;;;;;;;;;;;;;1233:63;153:6464;;;;;;;;1241:10;:29;1233:63;:::i;:::-;153:6464;;;;;;4600:75;153:6464;;;;;4608:41;4600:75;:::i;:::-;153:6464;;;;;;4685:61;153:6464;4693:28;153:6464;;;4693:28;153:6464;;4685:61;:::i;:::-;153:6464;;;;;;4765:31;153:6464;;;4765:31;153:6464;;;;;;;;;;;4816:61;153:6464;;;;;;;;4765:31;153:6464;;;4845:31;153:6464;;;;;;4816:61;153:6464;;;;;;;;;;;;;;;;;;;-1:-1:-1;;153:6464:5;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;153:6464:5;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;1122:42;153:6464;;;;;;;;1130:10;:19;1122:42;:::i;:::-;2386:14;153:6464;;-1:-1:-1;;153:6464:5;;;;;;;2386:14;153:6464;2721:27;153:6464;;2683:15;2721:27;:::i;:::-;153:6464;;;;;;:::i;:::-;;;;;;;;;;;;2440:404;;153:6464;;;;2440:404;;153:6464;;;;2440:404;;153:6464;;;;2440:404;;153:6464;;2440:404;;153:6464;2683:15;153:6464;2440:404;;153:6464;;2440:404;;153:6464;;2440:404;;;153:6464;;2440:404;;;153:6464;;2440:404;;;153:6464;;;;;;;;;;;;;;;;;;;;;;;;2440:404;;153:6464;;;;;;;;;;;;2440:404;;153:6464;2386:14;153:6464;;;;2440:404;;153:6464;;;;;;2440:404;;153:6464;;;;;;2440:404;;153:6464;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;2440:404;153:6464;;;;;;;;;;;;;;;;;;;;;;;;;;;2440:404;;153:6464;;;;;;2440:404;;153:6464;;;;;;;;2440:404;;;153:6464;;;;;;;;;;;;;;2440:404;;;153:6464;;;;;2440:404;153:6464;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;;153:6464:5;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;153:6464:5;;2920:38;153:6464;;2920:38;153:6464;;;;;;;;;;;;;;;;;;;-1:-1:-1;153:6464:5;;;;;;;;;;;;;;;;;-1:-1:-1;;153:6464:5;;;;;;;;;;;;;2440:404;153:6464;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;153:6464:5;;;;;;;;;-1:-1:-1;;153:6464:5;;;;;;;;-1:-1:-1;;;;;153:6464:5;;;;;;;;;;;;;;-1:-1:-1;;153:6464:5;;;;;;:::i;:::-;-1:-1:-1;;;;;153:6464:5;;;;;;;;;;;;;;;;;596:49;;;;;153:6464;596:49;;;;:::i;:::-;153:6464;;;;;;;;;;;;;;;;;-1:-1:-1;;153:6464:5;;;;;;:::i;:::-;;;-1:-1:-1;;;;;153:6464:5;;1122:42;;153:6464;;1130:10;:19;1122:42;:::i;:::-;153:6464;;;;;;;;;;;;;;;;;;;-1:-1:-1;;153:6464:5;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;-1:-1:-1;;;;;153:6464:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;153:6464:5;;;;;;;;1122:42;153:6464;;;;;;;;1130:10;:19;1122:42;:::i;:::-;153:6464;;;;;;3488:75;153:6464;;;;;3496:41;3488:75;:::i;:::-;153:6464;;;;;;3573:61;153:6464;3581:28;153:6464;;;3581:28;153:6464;;3573:61;:::i;:::-;153:6464;;;;;;;;;;;3706:14;;;153:6464;;;;3741:15;;153:6464;;;;3778:17;;153:6464;3832:13;3828:71;;153:6464;3922:24;;153:6464;3922:24;;153:6464;3828:71;3861:14;:27;:14;;153:6464;;;3861:27;:::i;:::-;153:6464;;3828:71;;;;153:6464;;;;;;;;;;;;;;-1:-1:-1;;;;;153:6464:5;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;153:6464:5;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;153:6464:5;;-1:-1:-1;153:6464:5;;;-1:-1:-1;153:6464:5;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;153:6464:5;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:::o;:::-;;;;;-1:-1:-1;153:6464:5;;;;-1:-1:-1;153:6464:5;;-1:-1:-1;153:6464:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;153:6464:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;153:6464:5;;;;;;;;;;;;-1:-1:-1;;;153:6464:5;;;;;;;;;;;;;;;;;:::o;:::-;;;;:::o;:::-;;;-1:-1:-1;;;153:6464:5;;;;;;;;;;;;-1:-1:-1;;;153:6464:5;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;153:6464:5;;;;;;;;;;;;-1:-1:-1;;;153:6464:5;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;153:6464:5;;;;;;;;;;;;-1:-1:-1;;;153:6464:5;;;;;;"},"methodIdentifiers":{"admin()":"f851a440","cancelPolicy(uint256)":"b20e8bcc","claimsProcessor()":"536a7e4f","createPolicy(address,uint256,uint256,uint256,string,uint256)":"76d0629e","getPolicy(uint256)":"2b07fce3","getUserPolicies(address)":"19ac4614","incrementClaimCount(uint256)":"8d3629c0","isPolicyValidForClaims(uint256,address)":"943f31a6","nextPolicyId()":"cad0b8db","policies(uint256)":"d3e89483","recordPayout(uint256,uint256)":"f8112568","setClaimsProcessor(address)":"3a8e94f5","updatePolicy(uint256,uint256,uint256,uint256,uint256)":"26d13b00","userPolicies(address,uint256)":"3d36adc5"}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"policyId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newCount\",\"type\":\"uint256\"}],\"name\":\"ClaimCountUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"policyId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"PayoutRecorded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"policyId\",\"type\":\"uint256\"}],\"name\":\"PolicyCancelled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"policyId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"policyholder\",\"type\":\"address\"}],\"name\":\"PolicyCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"policyId\",\"type\":\"uint256\"}],\"name\":\"PolicyUpdated\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"admin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_policyId\",\"type\":\"uint256\"}],\"name\":\"cancelPolicy\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claimsProcessor\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_policyholder\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_premium\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_coverage\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_deductible\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_policyType\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"_duration\",\"type\":\"uint256\"}],\"name\":\"createPolicy\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_policyId\",\"type\":\"uint256\"}],\"name\":\"getPolicy\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"policyId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"policyholder\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"premium\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"coverage\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deductible\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"policyType\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"startDate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endDate\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isActive\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"claimsCount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalPayouts\",\"type\":\"uint256\"}],\"internalType\":\"struct PolicyRegistry.Policy\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"getUserPolicies\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_policyId\",\"type\":\"uint256\"}],\"name\":\"incrementClaimCount\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_policyId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_claimant\",\"type\":\"address\"}],\"name\":\"isPolicyValidForClaims\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nextPolicyId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"policies\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"policyId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"policyholder\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"premium\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"coverage\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deductible\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"policyType\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"startDate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endDate\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isActive\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"claimsCount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalPayouts\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_policyId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"recordPayout\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_claimsProcessor\",\"type\":\"address\"}],\"name\":\"setClaimsProcessor\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_policyId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_premium\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_coverage\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_deductible\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_duration\",\"type\":\"uint256\"}],\"name\":\"updatePolicy\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"userPolicies\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Stores insurance policies and manages their lifecycle\",\"kind\":\"dev\",\"methods\":{\"cancelPolicy(uint256)\":{\"details\":\"Cancels an existing policy\",\"params\":{\"_policyId\":\"ID of the policy to cancel\"}},\"createPolicy(address,uint256,uint256,uint256,string,uint256)\":{\"details\":\"Creates a new insurance policy\",\"params\":{\"_coverage\":\"Coverage amount in wei\",\"_deductible\":\"Deductible amount in wei\",\"_duration\":\"Duration of the policy in seconds\",\"_policyType\":\"Type of policy (auto, home, health, travel)\",\"_policyholder\":\"Address of the policyholder\",\"_premium\":\"Premium amount in wei\"},\"returns\":{\"_0\":\"policyId Unique identifier of the created policy\"}},\"getPolicy(uint256)\":{\"details\":\"Gets policy details by ID\",\"params\":{\"_policyId\":\"ID of the policy\"},\"returns\":{\"_0\":\"Policy details of the specified policy\"}},\"getUserPolicies(address)\":{\"details\":\"Gets all policies owned by a user\",\"params\":{\"_user\":\"Address of the user\"},\"returns\":{\"_0\":\"uint256[] Array of policy IDs owned by the user\"}},\"incrementClaimCount(uint256)\":{\"details\":\"Increments the claim count for a policy\",\"params\":{\"_policyId\":\"ID of the policy\"}},\"isPolicyValidForClaims(uint256,address)\":{\"details\":\"Checks if a policy is valid for making claims\",\"params\":{\"_claimant\":\"Address of the claimant\",\"_policyId\":\"ID of the policy\"},\"returns\":{\"_0\":\"bool True if the policy is valid for claims\"}},\"recordPayout(uint256,uint256)\":{\"details\":\"Records a payout for a policy\",\"params\":{\"_amount\":\"Payout amount\",\"_policyId\":\"ID of the policy\"}},\"setClaimsProcessor(address)\":{\"details\":\"Sets the address of the claims processor contract\",\"params\":{\"_claimsProcessor\":\"Address of the claims processor contract\"}},\"updatePolicy(uint256,uint256,uint256,uint256,uint256)\":{\"details\":\"Updates an existing policy\",\"params\":{\"_coverage\":\"New coverage amount\",\"_deductible\":\"New deductible amount\",\"_duration\":\"Additional duration in seconds\",\"_policyId\":\"ID of the policy to update\",\"_premium\":\"New premium amount\"}}},\"title\":\"PolicyRegistry\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/PolicyRegistry.sol\":\"PolicyRegistry\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contracts/PolicyRegistry.sol\":{\"keccak256\":\"0xe231440c1c6544bc5f4492a6a25d9696eacdfe0f9555e7aa20ed485d78069a80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0f5b5341cb27aeb5afb29bef82f1c3e8785107fd564c6892d168457f597f3feb\",\"dweb:/ipfs/QmVivAuQa7ymmsPdFSZXUUQpLnDNUE92ZG16JtuRtUrBFg\"]}},\"version\":1}"}}}}}